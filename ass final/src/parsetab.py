
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNNOTleftLOGICAL_ORleftLOGICAL_ANDleftORleftXORleftANDleftEQUALSNOT_ASSIGNleftLESSERGREATERLESS_EQUALSMORE_EQUALSleftLSHIFTRSHIFTleftPLUSMINUSleftSTARDIVIDEMODAND AND_ASSIGN ASSIGN BOOL_T BREAK CASE COLON COMMA COMPLEX_T CONST CONTINUE DECR DEFAULT DIVIDE DIVIDE_ASSIGN DOT ELSE EQUALS FLOAT FLOAT_T FOR FUNC GOTO GREATER HEX IDENTIFIER IF IMAGINARY IMPORT INCR INTEGER INT_T LCURL LESSER LESS_EQUALS LOGICAL_AND LOGICAL_OR LPAREN LSHIFT LSHIFT_ASSIGN LSQUARE MINUS MINUS_ASSIGN MOD MOD_ASSIGN MORE_EQUALS NOT NOT_ASSIGN OCTAL OR OR_ASSIGN PACKAGE PD PLUS PLUS_ASSIGN PRINT PS QUICK_ASSIGN RCURL RETURN RPAREN RSHIFT RSHIFT_ASSIGN RSQUARE RUNE RUNE_T SCAN SEMICOLON STAR STAR_ASSIGN STRING STRING_T STRUCT SWITCH TYPE TYPECAST UINT_T VAR XOR XOR_ASSIGNstart : SourceFileType : TypeName\n            | TypeLit\n            | LPAREN Type RPARENTypeName : TypeToken\n                | QualifiedIdentTypeToken : INT_T\n                 | FLOAT_T\n                 | UINT_T\n                 | COMPLEX_T\n                 | RUNE_T\n                 | BOOL_T\n                 | STRING_T\n                 | TYPE IDENTIFIERTypeLit : ArrayType\n               | StructType\n               | PointerTypeTypeOpt : Type\n               | epsilonArrayType : LSQUARE ArrayLength RSQUARE ElementType ArrayLength : Expression  ElementType : Type StructType : CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope FieldDeclRep : FieldDeclRep FieldDecl SEMICOLON\n                  | epsilon  FieldDecl : IdentifierList TypePointerType : STAR BaseTypeBaseType : TypeSignature : Parameters TypeOptParameters : LPAREN ParameterListOpt RPARENParameterListOpt : ParametersList\n                             | epsilonParametersList : ParameterDecl\n                      | ParameterDeclCommaRepParameterDeclCommaRep : ParameterDeclCommaRep COMMA ParameterDecl\n                             | ParameterDecl COMMA ParameterDeclParameterDecl : IdentifierList Type\n                     | TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement SEMICOLON\n                    | epsilonDeclaration : ConstDecl\n                 | TypeDecl\n                 | VarDeclTopLevelDecl : Declaration\n                  | FunctionDeclConstDecl : CONST ConstSpec\n                 | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOLON\n                    | epsilonConstSpec : IdentifierList Type ASSIGN ExpressionListIdentifierList : IDENTIFIER IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n                     | epsilonExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n                     | epsilonTypeDecl : TYPE TypeSpec\n                | TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOLON\n                   | epsilonTypeSpec : TypeDefTypeDef : IDENTIFIER TypeVarDecl : VAR VarSpec\n               | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOLON\n                  | epsilonVarSpec : IdentifierList Type ExpressionListOpt\n               | IdentifierList ASSIGN ExpressionListExpressionListOpt : ASSIGN ExpressionList\n                         | epsilon ShortVarDecl : IDENTIFIER QUICK_ASSIGN Expression FunctionDecl : FUNC FunctionName CreateScope Function EndScope\n                    | FUNC FunctionName CreateScope Signature EndScopeCreateFuncScope : CreateScope : EndScope : FunctionName : IDENTIFIERFunction : Signature funMark FunctionBody funMark : FunctionBody : BlockOperand : Literal\n               | OperandName\n               | LPAREN Expression RPARENLiteral : BasicLitBasicLit : I INTEGER\n                | I OCTAL\n                | I HEX\n                | F FLOAT\n                | C IMAGINARY\n                | R RUNE\n                | S STRING I :  R :  F :  C :  S : OperandName : IDENTIFIERQualifiedIdent : IDENTIFIER DOT TypeNamePrimaryExpr : Operand\n                   | PrimaryExpr Selector\n                   | Conversion\n                   | PrimaryExpr LSQUARE Expression RSQUARE\n                   | PrimaryExpr Slice\n                   | PrimaryExpr TypeAssertion\n                   | PrimaryExpr LPAREN ExpressionListTypeOpt RPARENSelector : DOT IDENTIFIERSlice : LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE\n             | LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARETypeAssertion : DOT LPAREN Type RPARENExpressionListTypeOpt : ExpressionList\n                             | epsilonExpression : UnaryExpr\n                  | Expression LOGICAL_OR Expression\n                  | Expression LOGICAL_AND Expression\n                  | Expression EQUALS Expression\n                  | Expression NOT_ASSIGN Expression\n                  | Expression LESSER Expression\n                  | Expression GREATER Expression\n                  | Expression LESS_EQUALS Expression\n                  | Expression MORE_EQUALS Expression\n                  | Expression OR Expression\n                  | Expression XOR Expression\n                  | Expression DIVIDE Expression\n                  | Expression MOD Expression\n                  | Expression LSHIFT Expression\n                  | Expression RSHIFT Expression\n                  | Expression PLUS Expression\n                  | Expression MINUS Expression\n                  | Expression STAR Expression\n                  | Expression AND ExpressionExpressionOpt : Expression\n                     | epsilonUnaryExpr : PrimaryExpr\n                 | UnaryOp UnaryExpr\n                 | NOT UnaryExprUnaryOp : PLUS\n               | MINUS\n               | STAR\n               | AND Conversion : TYPECAST Type LPAREN Expression RPARENStatement : Declaration\n                 | LabeledStmt\n                 | SimpleStmt\n                 | ReturnStmt\n                 | BreakStmt\n                 | ContinueStmt\n                 | GotoStmt\n                 | CreateScope Block EndScope\n                 | IfStmt\n                 | SwitchStmt\n                 | ForStmt\n                 | PrintStmt\n                 | ScanStmt PrintStmt : PRINT PD Expression\n                  | PRINT PS Expression ScanStmt : SCAN Expression SimpleStmt : epsilon\n                 | ExpressionStmt\n                 | IncDecStmt\n                 | Assignment\n                 | ShortVarDecl  LabeledStmt : Label COLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  IncDecStmt : Expression INCR\n                 | Expression DECR  Assignment : ExpressionList assign_op ExpressionList assign_op : AssignOp AssignOp : PLUS_ASSIGN\n               | MINUS_ASSIGN\n               | STAR_ASSIGN\n               | DIVIDE_ASSIGN\n               | MOD_ASSIGN\n               | AND_ASSIGN\n               | OR_ASSIGN\n               | XOR_ASSIGN\n               | LSHIFT_ASSIGN\n               | RSHIFT_ASSIGN\n               | ASSIGN  IfStmt : IF Expression CreateScope Block EndScope ElseOpt ElseOpt : ELSE IfStmt\n              | ELSE CreateScope Block EndScope\n              | epsilon  SwitchStmt : ExprSwitchStmt  ExprSwitchStmt : SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope  StartSwitch :  ExprCaseClauseRep : ExprCaseClauseRep ExprCaseClause\n                        | epsilon ExprCaseClause : ExprSwitchCase COLON StatementList  ExprSwitchCase : CASE Expression\n                     | DEFAULT ForStmt : FOR CreateScope ConditionBlockOpt Block EndScopeConditionBlockOpt : epsilon\n             | Condition\n             | ForClauseCondition : Expression ForClause : SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmtConditionOpt : epsilon\n          | Condition ReturnStmt : RETURN ExpressionPureOptExpressionPureOpt : Expression\n             | epsilonBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n        | epsilon GotoStmt : GOTO Label SourceFile : PackageClause SEMICOLON ImportDeclRep TopLevelDeclRepImportDeclRep : epsilon\n           | ImportDeclRep ImportDecl SEMICOLONTopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOLON\n                     | epsilonPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDecl : IMPORT ImportSpec\n          | IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOLON\n            | epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n                        | PackageName\n                        | epsilon ImportPath : STRING epsilon : '
    
_lr_action_items = {'PACKAGE':([0,],[4,]),'$end':([1,2,5,8,9,10,12,24,31,],[0,-1,-226,-226,-211,-210,-214,-212,-213,]),'SEMICOLON':([3,6,7,11,14,15,16,17,18,19,25,34,38,40,42,47,48,53,54,56,57,58,59,60,61,62,63,64,65,66,67,77,80,82,83,84,85,86,88,89,92,96,101,104,105,107,108,110,111,118,119,121,122,123,124,125,127,128,129,131,132,134,135,136,146,147,148,168,170,171,174,175,178,179,180,181,182,183,184,189,190,191,192,193,194,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,233,234,237,239,242,243,245,246,247,248,249,250,251,252,253,254,256,257,258,259,260,262,263,264,265,266,267,268,269,272,273,274,277,282,283,284,286,287,288,289,290,291,292,293,294,295,296,297,298,300,301,302,305,321,323,324,327,330,331,332,333,334,335,336,339,340,341,343,344,345,346,347,348,349,351,353,357,360,365,366,367,369,],[5,-215,-216,24,31,-46,-47,-43,-44,-45,-217,-48,-59,-63,-65,-221,-225,-2,-3,-5,-6,-15,-16,-17,-7,-8,-9,-10,-11,-12,-13,-64,-226,-218,130,-78,-78,-226,-49,145,-14,-114,-135,-101,-103,-83,-84,-86,-99,-27,-28,-60,187,-66,188,-69,-72,-70,-226,-74,-75,-29,-18,-19,-52,-4,-100,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-71,-56,-58,-80,-82,-226,-30,-20,-22,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-226,-42,-104,-107,-78,285,-57,-39,287,-143,-144,-145,-146,-147,-148,-149,-151,-152,-153,-154,-155,-159,-160,-161,-162,-163,-226,-226,-226,-166,-186,-77,-99,-111,-142,-23,-26,-41,-78,-226,-202,-203,-204,-205,-207,-208,-165,-206,-209,-167,-168,-226,-158,-109,-150,-164,-159,-166,341,-99,-156,-157,-73,-169,-78,-78,-226,-110,-226,-194,354,-200,-201,-198,-182,-185,-183,-78,-78,-187,-226,-184,]),'IDENTIFIER':([4,13,20,21,22,23,26,35,36,37,39,41,43,44,45,46,50,51,55,68,70,72,73,74,75,76,78,79,81,86,87,90,93,97,98,99,100,102,103,106,109,120,126,130,142,144,145,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,173,185,186,187,188,194,195,196,197,226,228,229,230,231,233,234,238,244,267,268,269,270,271,274,276,279,285,287,289,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,341,354,363,367,],[7,7,33,37,41,37,-226,-226,69,-226,-226,69,-226,69,7,-220,37,-51,69,92,111,69,-53,-55,41,-62,37,-68,111,69,144,111,69,-138,-139,-140,-141,111,111,111,69,186,111,-219,69,-226,-50,69,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,225,-226,-54,-61,-67,-226,-30,144,144,69,111,37,-25,111,277,-42,111,69,111,296,296,296,111,-77,111,111,-24,-41,277,332,111,111,111,111,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,111,111,332,111,-226,]),'IMPORT':([5,8,9,24,],[-226,13,-211,-212,]),'FUNC':([5,8,9,10,12,24,31,],[-226,-226,-211,20,-214,-212,-213,]),'CONST':([5,8,9,10,12,24,31,194,233,234,287,289,367,],[-226,-226,-211,21,-214,-212,-213,-226,21,-42,-41,21,-226,]),'TYPE':([5,8,9,10,12,24,31,36,37,41,44,55,72,73,74,86,87,93,109,142,144,149,186,194,195,196,197,226,233,234,244,287,289,367,],[-226,-226,-211,22,-214,-212,-213,68,-226,68,68,68,68,-53,-55,68,68,68,68,68,-226,68,-54,-226,-30,68,68,68,22,-42,68,-41,22,-226,]),'VAR':([5,8,9,10,12,24,31,194,233,234,287,289,367,],[-226,-226,-211,23,-214,-212,-213,-226,23,-42,-41,23,-226,]),'STRING':([7,13,26,27,28,29,30,45,46,70,81,90,97,98,99,100,102,103,106,116,126,130,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,194,228,231,233,234,238,267,271,274,276,279,287,289,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,341,354,363,367,],[-216,-226,-226,48,-222,-223,-224,-226,-220,-98,-98,-98,-138,-139,-140,-141,-98,-98,-98,184,-98,-219,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-98,-226,-98,-98,-98,-42,-98,-98,-98,-77,-98,-98,-41,-98,-98,-98,-98,-98,-98,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,-98,-98,-98,-98,-226,]),'LPAREN':([13,21,22,23,32,33,36,37,41,44,49,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,70,72,73,74,81,86,87,90,92,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,118,119,126,142,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,177,178,179,180,181,182,183,184,186,194,195,196,197,199,200,225,226,227,228,231,233,234,237,238,239,242,244,267,271,274,276,277,279,282,283,284,287,289,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,321,322,332,341,343,354,363,367,],[26,35,39,43,-77,-79,55,-226,55,55,87,-2,-3,55,-5,-6,-15,-16,-17,-7,-8,-9,-10,-11,-12,-13,106,55,-53,-55,106,55,55,106,-14,-138,-139,-140,-141,172,106,106,-101,-103,106,-83,-84,55,-86,-99,-27,-28,106,55,-226,-4,-100,55,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,106,-102,106,-105,-106,106,226,228,-87,-88,-89,-90,-91,-92,-93,-54,-226,-30,55,55,-20,-22,-108,55,-85,106,106,106,-42,-104,106,-107,-78,55,106,106,-77,106,-99,106,-111,-142,-23,-41,106,106,106,106,106,106,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,-109,106,-99,106,-110,106,106,-226,]),'DOT':([13,26,45,46,69,101,104,105,107,108,110,111,130,144,168,170,171,178,179,180,181,182,183,184,225,227,237,239,277,282,283,321,332,343,],[28,-226,28,-220,93,173,-101,-103,-83,-84,-86,-99,-219,93,-102,-105,-106,-87,-88,-89,-90,-91,-92,-93,-108,-85,-104,-107,-99,-111,-142,-109,-99,-110,]),'RPAREN':([26,35,39,43,45,46,50,51,53,54,56,57,58,59,60,61,62,63,64,65,66,67,75,76,78,79,87,91,92,96,101,104,105,107,108,110,111,118,119,129,130,137,138,139,140,141,143,145,147,148,168,170,171,172,174,175,176,178,179,180,181,182,183,184,187,188,190,191,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,222,223,224,225,227,235,236,237,239,240,241,242,245,282,283,284,321,343,],[-226,-226,-226,-226,82,-220,88,-51,-2,-3,-5,-6,-15,-16,-17,-7,-8,-9,-10,-11,-12,-13,121,-62,123,-68,-226,147,-14,-114,-135,-101,-103,-83,-84,-86,-99,-27,-28,-226,-219,195,-31,-32,-33,-34,-38,-50,-4,-100,-102,-105,-106,-226,-136,-137,227,-87,-88,-89,-90,-91,-92,-93,-61,-67,-56,-58,-37,-20,-22,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,239,-112,-113,-108,-85,-36,-35,-104,-107,282,283,-78,-57,-111,-142,-23,-109,-110,]),'INT_T':([36,37,41,44,55,72,73,74,86,87,93,109,142,144,149,186,195,196,197,226,244,],[61,-226,61,61,61,61,-53,-55,61,61,61,61,61,-226,61,-54,-30,61,61,61,61,]),'FLOAT_T':([36,37,41,44,55,72,73,74,86,87,93,109,142,144,149,186,195,196,197,226,244,],[62,-226,62,62,62,62,-53,-55,62,62,62,62,62,-226,62,-54,-30,62,62,62,62,]),'UINT_T':([36,37,41,44,55,72,73,74,86,87,93,109,142,144,149,186,195,196,197,226,244,],[63,-226,63,63,63,63,-53,-55,63,63,63,63,63,-226,63,-54,-30,63,63,63,63,]),'COMPLEX_T':([36,37,41,44,55,72,73,74,86,87,93,109,142,144,149,186,195,196,197,226,244,],[64,-226,64,64,64,64,-53,-55,64,64,64,64,64,-226,64,-54,-30,64,64,64,64,]),'RUNE_T':([36,37,41,44,55,72,73,74,86,87,93,109,142,144,149,186,195,196,197,226,244,],[65,-226,65,65,65,65,-53,-55,65,65,65,65,65,-226,65,-54,-30,65,65,65,65,]),'BOOL_T':([36,37,41,44,55,72,73,74,86,87,93,109,142,144,149,186,195,196,197,226,244,],[66,-226,66,66,66,66,-53,-55,66,66,66,66,66,-226,66,-54,-30,66,66,66,66,]),'STRING_T':([36,37,41,44,55,72,73,74,86,87,93,109,142,144,149,186,195,196,197,226,244,],[67,-226,67,67,67,67,-53,-55,67,67,67,67,67,-226,67,-54,-30,67,67,67,67,]),'LSQUARE':([36,37,41,44,55,72,73,74,86,87,101,104,105,107,108,109,110,111,142,144,149,168,170,171,178,179,180,181,182,183,184,186,195,196,197,225,226,227,237,239,244,277,282,283,321,332,343,],[70,-226,70,70,70,70,-53,-55,70,70,169,-101,-103,-83,-84,70,-86,-99,70,-226,70,-102,-105,-106,-87,-88,-89,-90,-91,-92,-93,-54,-30,70,70,-108,70,-85,-104,-107,70,-99,-111,-142,-109,-99,-110,]),'STAR':([36,37,41,44,55,70,72,73,74,81,86,87,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,126,129,142,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,178,179,180,181,182,183,184,186,194,195,196,197,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,226,227,228,231,233,234,237,238,239,241,244,245,267,271,272,274,276,277,279,281,282,283,287,289,291,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,330,332,333,334,335,338,341,343,349,354,363,367,368,],[72,-226,72,72,72,99,72,-53,-55,99,72,72,99,166,-114,-138,-139,-140,-141,-135,99,99,-101,-103,99,-83,-84,72,-86,-99,99,166,72,-226,72,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-102,99,-105,-106,99,-136,-137,166,-87,-88,-89,-90,-91,-92,-93,-54,-226,-30,72,72,166,166,166,166,166,166,166,166,166,166,-125,-126,166,166,166,166,-131,166,166,-108,72,-85,99,99,99,-42,-104,99,-107,166,72,166,99,99,166,-77,99,-99,99,166,-111,-142,-41,99,166,166,99,99,99,166,99,99,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,166,-109,99,166,-99,166,166,166,166,99,-110,166,99,99,-226,166,]),'STRUCT':([36,37,41,44,55,71,72,73,74,86,87,109,142,144,149,186,195,196,197,226,244,],[-76,-226,-76,-76,-76,117,-76,-53,-55,-76,-76,-76,-76,-226,-76,-54,-30,-76,-76,-76,-76,]),'COMMA':([37,53,54,56,57,58,59,60,61,62,63,64,65,66,67,73,74,92,96,101,104,105,107,108,110,111,118,119,129,140,141,143,144,147,148,168,170,171,174,175,178,179,180,181,182,183,184,186,190,191,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,235,236,237,239,242,245,272,277,282,283,284,321,330,332,343,],[-226,-2,-3,-5,-6,-15,-16,-17,-7,-8,-9,-10,-11,-12,-13,120,-55,-14,-114,-135,-101,-103,-83,-84,-86,-99,-27,-28,-226,196,197,-38,-226,-4,-100,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-54,231,-58,-37,-20,-22,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-36,-35,-104,-107,-78,-57,-226,-99,-111,-142,-23,-109,-226,-99,-110,]),'ASSIGN':([37,44,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,73,74,80,92,96,101,104,105,107,108,110,111,118,119,147,148,168,170,171,174,175,178,179,180,181,182,183,184,186,190,191,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,242,245,272,277,278,282,283,284,321,330,332,343,],[-226,81,90,-2,-3,-5,-6,-15,-16,-17,-7,-8,-9,-10,-11,-12,-13,-53,-55,126,-14,-114,-135,-101,-103,-83,-84,-86,-99,-27,-28,-4,-100,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-54,-56,-58,-20,-22,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,-78,-57,-226,-99,319,-111,-142,-23,-109,-226,-99,-110,]),'LCURL':([53,54,56,57,58,59,60,61,62,63,64,65,66,67,85,86,92,96,101,104,105,107,108,110,111,117,118,119,129,133,134,135,136,147,148,168,170,171,174,175,178,179,180,181,182,183,184,190,191,194,195,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,233,234,237,239,242,245,255,262,263,264,265,266,272,274,282,283,284,287,289,299,300,301,302,320,321,325,326,327,328,329,330,332,335,336,337,343,352,354,358,359,367,],[-2,-3,-5,-6,-15,-16,-17,-7,-8,-9,-10,-11,-12,-13,-81,-226,-14,-114,-135,-101,-103,-83,-84,-86,-99,185,-27,-28,-226,194,-29,-18,-19,-4,-100,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-56,-58,-226,-30,-20,-22,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-77,-42,-104,-107,-78,-57,194,-159,-160,-161,-162,-163,-166,-77,-111,-142,-23,-41,-77,-77,-167,-168,-226,-77,-109,194,194,-195,-196,-197,-198,-99,-73,-169,342,-110,-77,-226,194,-199,-226,]),'NOT':([70,81,90,97,98,99,100,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,194,228,231,233,234,238,267,271,274,276,279,287,289,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,341,354,363,367,],[103,103,103,-138,-139,-140,-141,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,103,-226,103,103,103,-42,103,103,103,-77,103,103,-41,103,103,103,103,103,103,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,103,103,103,103,-226,]),'PLUS':([70,81,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,126,129,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,178,179,180,181,182,183,184,194,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,228,231,233,234,237,238,239,241,245,267,271,272,274,276,277,279,281,282,283,287,289,291,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,330,332,333,334,335,338,341,343,349,354,363,367,368,],[97,97,97,164,-114,-138,-139,-140,-141,-135,97,97,-101,-103,97,-83,-84,-86,-99,97,164,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-102,97,-105,-106,97,-136,-137,164,-87,-88,-89,-90,-91,-92,-93,-226,164,164,164,164,164,164,164,164,164,164,-125,-126,164,164,-129,-130,-131,164,164,-108,-85,97,97,97,-42,-104,97,-107,164,164,97,97,164,-77,97,-99,97,164,-111,-142,-41,97,164,164,97,97,97,164,97,97,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,164,-109,97,164,-99,164,164,164,164,97,-110,164,97,97,-226,164,]),'MINUS':([70,81,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,126,129,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,178,179,180,181,182,183,184,194,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,228,231,233,234,237,238,239,241,245,267,271,272,274,276,277,279,281,282,283,287,289,291,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,330,332,333,334,335,338,341,343,349,354,363,367,368,],[98,98,98,165,-114,-138,-139,-140,-141,-135,98,98,-101,-103,98,-83,-84,-86,-99,98,165,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-102,98,-105,-106,98,-136,-137,165,-87,-88,-89,-90,-91,-92,-93,-226,165,165,165,165,165,165,165,165,165,165,-125,-126,165,165,-129,-130,-131,165,165,-108,-85,98,98,98,-42,-104,98,-107,165,165,98,98,165,-77,98,-99,98,165,-111,-142,-41,98,165,165,98,98,98,165,98,98,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,165,-109,98,165,-99,165,165,165,165,98,-110,165,98,98,-226,165,]),'AND':([70,81,90,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,111,126,129,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,174,175,176,178,179,180,181,182,183,184,194,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,228,231,233,234,237,238,239,241,245,267,271,272,274,276,277,279,281,282,283,287,289,291,299,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,330,332,333,334,335,338,341,343,349,354,363,367,368,],[100,100,100,167,-114,-138,-139,-140,-141,-135,100,100,-101,-103,100,-83,-84,-86,-99,100,167,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-102,100,-105,-106,100,-136,-137,167,-87,-88,-89,-90,-91,-92,-93,-226,167,167,-117,-118,-119,-120,-121,-122,167,167,-125,-126,-127,-128,-129,-130,-131,-132,167,-108,-85,100,100,100,-42,-104,100,-107,167,167,100,100,167,-77,100,-99,100,167,-111,-142,-41,100,167,167,100,100,100,167,100,100,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,167,-109,100,167,-99,167,167,167,167,100,-110,167,100,100,-226,167,]),'TYPECAST':([70,81,90,97,98,99,100,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,194,228,231,233,234,238,267,271,274,276,279,287,289,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,341,354,363,367,],[109,109,109,-138,-139,-140,-141,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,109,-226,109,109,109,-42,109,109,109,-77,109,109,-41,109,109,109,109,109,109,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,109,109,109,109,-226,]),'INTEGER':([70,81,90,97,98,99,100,102,103,106,112,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,194,228,231,233,234,238,267,271,274,276,279,287,289,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,341,354,363,367,],[-94,-94,-94,-138,-139,-140,-141,-94,-94,-94,178,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-226,-94,-94,-94,-42,-94,-94,-94,-77,-94,-94,-41,-94,-94,-94,-94,-94,-94,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,-94,-94,-94,-94,-226,]),'OCTAL':([70,81,90,97,98,99,100,102,103,106,112,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,194,228,231,233,234,238,267,271,274,276,279,287,289,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,341,354,363,367,],[-94,-94,-94,-138,-139,-140,-141,-94,-94,-94,179,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-226,-94,-94,-94,-42,-94,-94,-94,-77,-94,-94,-41,-94,-94,-94,-94,-94,-94,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,-94,-94,-94,-94,-226,]),'HEX':([70,81,90,97,98,99,100,102,103,106,112,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,194,228,231,233,234,238,267,271,274,276,279,287,289,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,341,354,363,367,],[-94,-94,-94,-138,-139,-140,-141,-94,-94,-94,180,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-94,-226,-94,-94,-94,-42,-94,-94,-94,-77,-94,-94,-41,-94,-94,-94,-94,-94,-94,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,-94,-94,-94,-94,-226,]),'FLOAT':([70,81,90,97,98,99,100,102,103,106,113,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,194,228,231,233,234,238,267,271,274,276,279,287,289,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,341,354,363,367,],[-96,-96,-96,-138,-139,-140,-141,-96,-96,-96,181,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-96,-226,-96,-96,-96,-42,-96,-96,-96,-77,-96,-96,-41,-96,-96,-96,-96,-96,-96,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,-96,-96,-96,-96,-226,]),'IMAGINARY':([70,81,90,97,98,99,100,102,103,106,114,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,194,228,231,233,234,238,267,271,274,276,279,287,289,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,341,354,363,367,],[-97,-97,-97,-138,-139,-140,-141,-97,-97,-97,182,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-97,-226,-97,-97,-97,-42,-97,-97,-97,-77,-97,-97,-41,-97,-97,-97,-97,-97,-97,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,-97,-97,-97,-97,-226,]),'RUNE':([70,81,90,97,98,99,100,102,103,106,115,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,194,228,231,233,234,238,267,271,274,276,279,287,289,302,303,304,306,307,308,309,310,311,312,313,314,315,316,317,318,319,322,341,354,363,367,],[-95,-95,-95,-138,-139,-140,-141,-95,-95,-95,183,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-95,-226,-95,-95,-95,-42,-95,-95,-95,-77,-95,-95,-41,-95,-95,-95,-95,-95,-95,-170,-171,-172,-173,-174,-175,-176,-177,-178,-179,-180,-181,-95,-95,-95,-95,-226,]),'RSQUARE':([94,95,96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,221,225,227,237,238,239,280,281,282,283,321,338,343,],[149,-21,-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,237,-134,-108,-85,-104,-226,-107,321,-133,-111,-142,-109,343,-110,]),'LOGICAL_OR':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[150,-114,-135,-101,-103,-83,-84,-86,-99,150,-102,-105,-106,-136,-137,150,-87,-88,-89,-90,-91,-92,-93,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,150,-108,-85,-104,-107,150,150,150,-99,150,-111,-142,150,150,150,150,-109,150,-99,150,150,150,150,-110,150,150,]),'LOGICAL_AND':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[151,-114,-135,-101,-103,-83,-84,-86,-99,151,-102,-105,-106,-136,-137,151,-87,-88,-89,-90,-91,-92,-93,151,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,151,-108,-85,-104,-107,151,151,151,-99,151,-111,-142,151,151,151,151,-109,151,-99,151,151,151,151,-110,151,151,]),'EQUALS':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[152,-114,-135,-101,-103,-83,-84,-86,-99,152,-102,-105,-106,-136,-137,152,-87,-88,-89,-90,-91,-92,-93,152,152,-117,-118,-119,-120,-121,-122,152,152,-125,-126,-127,-128,-129,-130,-131,152,152,-108,-85,-104,-107,152,152,152,-99,152,-111,-142,152,152,152,152,-109,152,-99,152,152,152,152,-110,152,152,]),'NOT_ASSIGN':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[153,-114,-135,-101,-103,-83,-84,-86,-99,153,-102,-105,-106,-136,-137,153,-87,-88,-89,-90,-91,-92,-93,153,153,-117,-118,-119,-120,-121,-122,153,153,-125,-126,-127,-128,-129,-130,-131,153,153,-108,-85,-104,-107,153,153,153,-99,153,-111,-142,153,153,153,153,-109,153,-99,153,153,153,153,-110,153,153,]),'LESSER':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[154,-114,-135,-101,-103,-83,-84,-86,-99,154,-102,-105,-106,-136,-137,154,-87,-88,-89,-90,-91,-92,-93,154,154,154,154,-119,-120,-121,-122,154,154,-125,-126,-127,-128,-129,-130,-131,154,154,-108,-85,-104,-107,154,154,154,-99,154,-111,-142,154,154,154,154,-109,154,-99,154,154,154,154,-110,154,154,]),'GREATER':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[155,-114,-135,-101,-103,-83,-84,-86,-99,155,-102,-105,-106,-136,-137,155,-87,-88,-89,-90,-91,-92,-93,155,155,155,155,-119,-120,-121,-122,155,155,-125,-126,-127,-128,-129,-130,-131,155,155,-108,-85,-104,-107,155,155,155,-99,155,-111,-142,155,155,155,155,-109,155,-99,155,155,155,155,-110,155,155,]),'LESS_EQUALS':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[156,-114,-135,-101,-103,-83,-84,-86,-99,156,-102,-105,-106,-136,-137,156,-87,-88,-89,-90,-91,-92,-93,156,156,156,156,-119,-120,-121,-122,156,156,-125,-126,-127,-128,-129,-130,-131,156,156,-108,-85,-104,-107,156,156,156,-99,156,-111,-142,156,156,156,156,-109,156,-99,156,156,156,156,-110,156,156,]),'MORE_EQUALS':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[157,-114,-135,-101,-103,-83,-84,-86,-99,157,-102,-105,-106,-136,-137,157,-87,-88,-89,-90,-91,-92,-93,157,157,157,157,-119,-120,-121,-122,157,157,-125,-126,-127,-128,-129,-130,-131,157,157,-108,-85,-104,-107,157,157,157,-99,157,-111,-142,157,157,157,157,-109,157,-99,157,157,157,157,-110,157,157,]),'OR':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[158,-114,-135,-101,-103,-83,-84,-86,-99,158,-102,-105,-106,-136,-137,158,-87,-88,-89,-90,-91,-92,-93,158,158,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,158,-108,-85,-104,-107,158,158,158,-99,158,-111,-142,158,158,158,158,-109,158,-99,158,158,158,158,-110,158,158,]),'XOR':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[159,-114,-135,-101,-103,-83,-84,-86,-99,159,-102,-105,-106,-136,-137,159,-87,-88,-89,-90,-91,-92,-93,159,159,-117,-118,-119,-120,-121,-122,159,-124,-125,-126,-127,-128,-129,-130,-131,-132,159,-108,-85,-104,-107,159,159,159,-99,159,-111,-142,159,159,159,159,-109,159,-99,159,159,159,159,-110,159,159,]),'DIVIDE':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[160,-114,-135,-101,-103,-83,-84,-86,-99,160,-102,-105,-106,-136,-137,160,-87,-88,-89,-90,-91,-92,-93,160,160,160,160,160,160,160,160,160,160,-125,-126,160,160,160,160,-131,160,160,-108,-85,-104,-107,160,160,160,-99,160,-111,-142,160,160,160,160,-109,160,-99,160,160,160,160,-110,160,160,]),'MOD':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[161,-114,-135,-101,-103,-83,-84,-86,-99,161,-102,-105,-106,-136,-137,161,-87,-88,-89,-90,-91,-92,-93,161,161,161,161,161,161,161,161,161,161,-125,-126,161,161,161,161,-131,161,161,-108,-85,-104,-107,161,161,161,-99,161,-111,-142,161,161,161,161,-109,161,-99,161,161,161,161,-110,161,161,]),'LSHIFT':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[162,-114,-135,-101,-103,-83,-84,-86,-99,162,-102,-105,-106,-136,-137,162,-87,-88,-89,-90,-91,-92,-93,162,162,162,162,162,162,162,162,162,162,-125,-126,-127,-128,-129,-130,-131,162,162,-108,-85,-104,-107,162,162,162,-99,162,-111,-142,162,162,162,162,-109,162,-99,162,162,162,162,-110,162,162,]),'RSHIFT':([95,96,101,104,105,107,108,110,111,129,168,170,171,174,175,176,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,225,227,237,239,241,245,272,277,281,282,283,291,299,305,320,321,330,332,333,334,335,338,343,349,368,],[163,-114,-135,-101,-103,-83,-84,-86,-99,163,-102,-105,-106,-136,-137,163,-87,-88,-89,-90,-91,-92,-93,163,163,163,163,163,163,163,163,163,163,-125,-126,-127,-128,-129,-130,-131,163,163,-108,-85,-104,-107,163,163,163,-99,163,-111,-142,163,163,163,163,-109,163,-99,163,163,163,163,-110,163,163,]),'COLON':([96,101,104,105,107,108,110,111,168,169,170,171,174,175,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,225,227,237,239,261,277,281,282,283,321,343,362,364,368,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-226,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-133,238,-134,-108,-85,-104,-107,289,-165,322,-111,-142,-109,-110,367,-193,-192,]),'PLUS_ASSIGN':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,190,191,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,245,272,277,278,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-56,-58,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,-57,-226,-99,309,-111,-142,-109,-226,-99,-110,]),'MINUS_ASSIGN':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,190,191,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,245,272,277,278,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-56,-58,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,-57,-226,-99,310,-111,-142,-109,-226,-99,-110,]),'STAR_ASSIGN':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,190,191,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,245,272,277,278,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-56,-58,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,-57,-226,-99,311,-111,-142,-109,-226,-99,-110,]),'DIVIDE_ASSIGN':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,190,191,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,245,272,277,278,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-56,-58,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,-57,-226,-99,312,-111,-142,-109,-226,-99,-110,]),'MOD_ASSIGN':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,190,191,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,245,272,277,278,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-56,-58,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,-57,-226,-99,313,-111,-142,-109,-226,-99,-110,]),'AND_ASSIGN':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,190,191,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,245,272,277,278,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-56,-58,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,-57,-226,-99,314,-111,-142,-109,-226,-99,-110,]),'OR_ASSIGN':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,190,191,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,245,272,277,278,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-56,-58,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,-57,-226,-99,315,-111,-142,-109,-226,-99,-110,]),'XOR_ASSIGN':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,190,191,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,245,272,277,278,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-56,-58,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,-57,-226,-99,316,-111,-142,-109,-226,-99,-110,]),'LSHIFT_ASSIGN':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,190,191,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,245,272,277,278,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-56,-58,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,-57,-226,-99,317,-111,-142,-109,-226,-99,-110,]),'RSHIFT_ASSIGN':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,190,191,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,245,272,277,278,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-56,-58,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,-57,-226,-99,318,-111,-142,-109,-226,-99,-110,]),'INCR':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,272,277,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,300,-99,-111,-142,-109,300,-99,-110,]),'DECR':([96,101,104,105,107,108,110,111,168,170,171,174,175,178,179,180,181,182,183,184,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,225,227,237,239,272,277,282,283,321,330,332,343,],[-114,-135,-101,-103,-83,-84,-86,-99,-102,-105,-106,-136,-137,-87,-88,-89,-90,-91,-92,-93,-115,-116,-117,-118,-119,-120,-121,-122,-123,-124,-125,-126,-127,-128,-129,-130,-131,-132,-108,-85,-104,-107,301,-99,-111,-142,-109,301,-99,-110,]),'RCURL':([185,194,229,230,232,233,234,285,287,342,350,355,356,361,367,370,],[-226,-226,242,-25,246,-40,-42,-24,-41,-188,-226,360,-190,-189,-226,-191,]),'RETURN':([194,233,234,287,289,367,],[-226,267,-42,-41,267,-226,]),'BREAK':([194,233,234,287,289,367,],[-226,268,-42,-41,268,-226,]),'CONTINUE':([194,233,234,287,289,367,],[-226,269,-42,-41,269,-226,]),'GOTO':([194,233,234,287,289,367,],[-226,270,-42,-41,270,-226,]),'IF':([194,233,234,287,289,352,367,],[-226,271,-42,-41,271,271,-226,]),'FOR':([194,233,234,287,289,367,],[-226,274,-42,-41,274,-226,]),'PRINT':([194,233,234,287,289,367,],[-226,275,-42,-41,275,-226,]),'SCAN':([194,233,234,287,289,367,],[-226,276,-42,-41,276,-226,]),'SWITCH':([194,233,234,287,289,367,],[-226,279,-42,-41,279,-226,]),'CASE':([233,234,287,342,350,355,356,361,367,370,],[-40,-42,-41,-188,-226,363,-190,-189,-226,-191,]),'DEFAULT':([233,234,287,342,350,355,356,361,367,370,],[-40,-42,-41,-188,-226,364,-190,-189,-226,-191,]),'ELSE':([246,339,344,],[-39,-78,352,]),'PD':([275,],[303,]),'PS':([275,],[304,]),'QUICK_ASSIGN':([277,332,],[306,306,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'SourceFile':([0,],[2,]),'PackageClause':([0,],[3,]),'PackageName':([4,13,45,],[6,29,29,]),'ImportDeclRep':([5,],[8,]),'epsilon':([5,8,13,26,35,37,39,43,45,80,86,87,129,144,169,172,185,194,233,238,267,268,269,272,289,302,330,341,344,350,354,367,],[9,12,30,46,51,74,76,79,30,127,136,139,191,74,221,224,230,234,262,221,292,295,295,191,262,327,191,347,353,356,262,234,]),'TopLevelDeclRep':([8,],[10,]),'ImportDecl':([8,],[11,]),'TopLevelDecl':([10,],[14,]),'Declaration':([10,233,289,],[15,248,248,]),'FunctionDecl':([10,],[16,]),'ConstDecl':([10,233,289,],[17,17,17,]),'TypeDecl':([10,233,289,],[18,18,18,]),'VarDecl':([10,233,289,],[19,19,19,]),'ImportSpec':([13,45,],[25,83,]),'PackageNameDotOpt':([13,45,],[27,27,]),'FunctionName':([20,],[32,]),'ConstSpec':([21,50,],[34,89,]),'IdentifierList':([21,23,50,78,87,196,197,229,],[36,44,36,44,142,142,142,244,]),'TypeSpec':([22,75,],[38,122,]),'TypeDef':([22,75,],[40,40,]),'VarSpec':([23,78,],[42,124,]),'ImportSpecRep':([26,],[45,]),'ImportPath':([27,],[47,]),'CreateScope':([32,233,274,289,299,320,352,],[49,255,302,255,325,337,358,]),'ConstSpecRep':([35,],[50,]),'Type':([36,41,44,55,72,86,87,109,142,149,196,197,226,244,],[52,77,80,91,119,135,143,177,198,200,143,143,240,286,]),'TypeName':([36,41,44,55,72,86,87,93,109,142,149,196,197,226,244,],[53,53,53,53,53,53,53,148,53,53,53,53,53,53,53,]),'TypeLit':([36,41,44,55,72,86,87,109,142,149,196,197,226,244,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'TypeToken':([36,41,44,55,72,86,87,93,109,142,149,196,197,226,244,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'QualifiedIdent':([36,41,44,55,72,86,87,93,109,142,149,196,197,226,244,],[57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'ArrayType':([36,41,44,55,72,86,87,109,142,149,196,197,226,244,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'StructType':([36,41,44,55,72,86,87,109,142,149,196,197,226,244,],[59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'PointerType':([36,41,44,55,72,86,87,109,142,149,196,197,226,244,],[60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'CreateFuncScope':([36,41,44,55,72,86,87,109,142,149,196,197,226,244,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,]),'IdentifierRep':([37,144,],[73,73,]),'TypeSpecRep':([39,],[75,]),'VarSpecRep':([43,],[78,]),'Function':([49,],[84,]),'Signature':([49,],[85,]),'Parameters':([49,],[86,]),'ArrayLength':([70,],[94,]),'Expression':([70,81,90,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[95,129,129,176,129,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,129,241,245,272,281,291,299,305,320,272,330,333,334,335,129,338,349,272,368,]),'UnaryExpr':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[96,96,96,174,175,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'PrimaryExpr':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,]),'UnaryOp':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,102,]),'Operand':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'Conversion':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,105,]),'Literal':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,107,]),'OperandName':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,108,]),'BasicLit':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'I':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,112,]),'F':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,113,]),'C':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,114,]),'R':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,115,]),'S':([70,81,90,102,103,106,126,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,169,172,228,231,233,238,267,271,276,279,289,302,303,304,306,307,322,341,354,363,],[116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,]),'BaseType':([72,],[118,]),'ExpressionListOpt':([80,],[125,]),'ExpressionList':([81,90,126,172,233,289,302,307,354,],[128,146,189,223,278,278,278,336,278,]),'EndScope':([84,85,242,288,339,340,360,365,],[131,132,284,323,344,345,366,369,]),'funMark':([85,],[133,]),'TypeOpt':([86,],[134,]),'ParameterListOpt':([87,],[137,]),'ParametersList':([87,],[138,]),'ParameterDecl':([87,196,197,],[140,235,236,]),'ParameterDeclCommaRep':([87,],[141,]),'Selector':([101,],[168,]),'Slice':([101,],[170,]),'TypeAssertion':([101,],[171,]),'ExpressionRep':([129,272,330,],[190,190,190,]),'FunctionBody':([133,],[192,]),'Block':([133,255,325,326,358,],[193,288,339,340,365,]),'ElementType':([149,],[199,]),'ExpressionOpt':([169,238,],[220,280,]),'ExpressionListTypeOpt':([172,],[222,]),'FieldDeclRep':([185,],[229,]),'StatementList':([194,367,],[232,370,]),'StatementRep':([194,367,],[233,233,]),'FieldDecl':([229,],[243,]),'Statement':([233,289,],[247,324,]),'LabeledStmt':([233,289,],[249,249,]),'SimpleStmt':([233,289,302,354,],[250,250,331,359,]),'ReturnStmt':([233,289,],[251,251,]),'BreakStmt':([233,289,],[252,252,]),'ContinueStmt':([233,289,],[253,253,]),'GotoStmt':([233,289,],[254,254,]),'IfStmt':([233,289,352,],[256,256,357,]),'SwitchStmt':([233,289,],[257,257,]),'ForStmt':([233,289,],[258,258,]),'PrintStmt':([233,289,],[259,259,]),'ScanStmt':([233,289,],[260,260,]),'Label':([233,268,269,270,289,],[261,294,294,298,261,]),'ExpressionStmt':([233,289,302,354,],[263,263,263,263,]),'IncDecStmt':([233,289,302,354,],[264,264,264,264,]),'Assignment':([233,289,302,354,],[265,265,265,265,]),'ShortVarDecl':([233,289,302,354,],[266,266,266,266,]),'ExprSwitchStmt':([233,289,],[273,273,]),'ExpressionPureOpt':([267,],[290,]),'LabelOpt':([268,269,],[293,297,]),'assign_op':([278,],[307,]),'AssignOp':([278,],[308,]),'ConditionBlockOpt':([302,],[326,]),'Condition':([302,341,],[328,348,]),'ForClause':([302,],[329,]),'ConditionOpt':([341,],[346,]),'StartSwitch':([342,],[350,]),'ElseOpt':([344,],[351,]),'ExprCaseClauseRep':([350,],[355,]),'ExprCaseClause':([355,],[361,]),'ExprSwitchCase':([355,],[362,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> SourceFile','start',1,'p_start','parser.py',220),
  ('Type -> TypeName','Type',1,'p_type','parser.py',229),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',230),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_type','parser.py',231),
  ('TypeName -> TypeToken','TypeName',1,'p_type_name','parser.py',238),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',239),
  ('TypeToken -> INT_T','TypeToken',1,'p_type_token','parser.py',243),
  ('TypeToken -> FLOAT_T','TypeToken',1,'p_type_token','parser.py',244),
  ('TypeToken -> UINT_T','TypeToken',1,'p_type_token','parser.py',245),
  ('TypeToken -> COMPLEX_T','TypeToken',1,'p_type_token','parser.py',246),
  ('TypeToken -> RUNE_T','TypeToken',1,'p_type_token','parser.py',247),
  ('TypeToken -> BOOL_T','TypeToken',1,'p_type_token','parser.py',248),
  ('TypeToken -> STRING_T','TypeToken',1,'p_type_token','parser.py',249),
  ('TypeToken -> TYPE IDENTIFIER','TypeToken',2,'p_type_token','parser.py',250),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',268),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',269),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',270),
  ('TypeOpt -> Type','TypeOpt',1,'p_type_opt','parser.py',274),
  ('TypeOpt -> epsilon','TypeOpt',1,'p_type_opt','parser.py',275),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_array_type','parser.py',285),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',294),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',298),
  ('StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope','StructType',6,'p_struct_type','parser.py',306),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON','FieldDeclRep',3,'p_field_decl_rep','parser.py',312),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',313),
  ('FieldDecl -> IdentifierList Type','FieldDecl',2,'p_field_decl','parser.py',323),
  ('PointerType -> STAR BaseType','PointerType',2,'p_point_type','parser.py',332),
  ('BaseType -> Type','BaseType',1,'p_base_type','parser.py',338),
  ('Signature -> Parameters TypeOpt','Signature',2,'p_sign','parser.py',345),
  ('Parameters -> LPAREN ParameterListOpt RPAREN','Parameters',3,'p_params','parser.py',368),
  ('ParameterListOpt -> ParametersList','ParameterListOpt',1,'p_param_list_opt','parser.py',372),
  ('ParameterListOpt -> epsilon','ParameterListOpt',1,'p_param_list_opt','parser.py',373),
  ('ParametersList -> ParameterDecl','ParametersList',1,'p_param_list','parser.py',377),
  ('ParametersList -> ParameterDeclCommaRep','ParametersList',1,'p_param_list','parser.py',378),
  ('ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_param_decl_comma_rep','parser.py',382),
  ('ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl','ParameterDeclCommaRep',3,'p_param_decl_comma_rep','parser.py',383),
  ('ParameterDecl -> IdentifierList Type','ParameterDecl',2,'p_param_decl','parser.py',390),
  ('ParameterDecl -> Type','ParameterDecl',1,'p_param_decl','parser.py',391),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',418),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',422),
  ('StatementRep -> StatementRep Statement SEMICOLON','StatementRep',3,'p_stat_rep','parser.py',426),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',427),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',438),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',439),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',440),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',444),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',445),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',452),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',453),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON','ConstSpecRep',3,'p_const_spec_rep','parser.py',460),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',461),
  ('ConstSpec -> IdentifierList Type ASSIGN ExpressionList','ConstSpec',4,'p_const_spec','parser.py',469),
  ('IdentifierList -> IDENTIFIER IdentifierRep','IdentifierList',2,'p_identifier_list','parser.py',498),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',510),
  ('IdentifierRep -> epsilon','IdentifierRep',1,'p_identifier_rep','parser.py',511),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',528),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',540),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',541),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',559),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',560),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON','TypeSpecRep',3,'p_type_spec_rep','parser.py',568),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',569),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',576),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',583),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',596),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',597),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOLON','VarSpecRep',3,'p_var_spec_rep','parser.py',604),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',605),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',613),
  ('VarSpec -> IdentifierList ASSIGN ExpressionList','VarSpec',3,'p_var_spec','parser.py',614),
  ('ExpressionListOpt -> ASSIGN ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',678),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',679),
  ('ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression','ShortVarDecl',3,'p_short_var_decl','parser.py',690),
  ('FunctionDecl -> FUNC FunctionName CreateScope Function EndScope','FunctionDecl',5,'p_func_decl','parser.py',707),
  ('FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope','FunctionDecl',5,'p_func_decl','parser.py',708),
  ('CreateFuncScope -> <empty>','CreateFuncScope',0,'p_create_func_scope','parser.py',727),
  ('CreateScope -> <empty>','CreateScope',0,'p_create_scope','parser.py',731),
  ('EndScope -> <empty>','EndScope',0,'p_delete_scope','parser.py',735),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',739),
  ('Function -> Signature funMark FunctionBody','Function',3,'p_func','parser.py',744),
  ('funMark -> <empty>','funMark',0,'p_funMark','parser.py',762),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',773),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',780),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',781),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',782),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',789),
  ('BasicLit -> I INTEGER','BasicLit',2,'p_basic_lit','parser.py',794),
  ('BasicLit -> I OCTAL','BasicLit',2,'p_basic_lit','parser.py',795),
  ('BasicLit -> I HEX','BasicLit',2,'p_basic_lit','parser.py',796),
  ('BasicLit -> F FLOAT','BasicLit',2,'p_basic_lit','parser.py',797),
  ('BasicLit -> C IMAGINARY','BasicLit',2,'p_basic_lit','parser.py',798),
  ('BasicLit -> R RUNE','BasicLit',2,'p_basic_lit','parser.py',799),
  ('BasicLit -> S STRING','BasicLit',2,'p_basic_lit','parser.py',800),
  ('I -> <empty>','I',0,'p_I','parser.py',808),
  ('R -> <empty>','R',0,'p_R','parser.py',813),
  ('F -> <empty>','F',0,'p_F','parser.py',818),
  ('C -> <empty>','C',0,'p_C','parser.py',822),
  ('S -> <empty>','S',0,'p_S','parser.py',826),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',831),
  ('QualifiedIdent -> IDENTIFIER DOT TypeName','QualifiedIdent',3,'p_quali_ident','parser.py',863),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',874),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser.py',875),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',876),
  ('PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE','PrimaryExpr',4,'p_prim_expr','parser.py',877),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',878),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',879),
  ('PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN','PrimaryExpr',4,'p_prim_expr','parser.py',880),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_selector','parser.py',971),
  ('Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE','Slice',5,'p_slice','parser.py',998),
  ('Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE','Slice',7,'p_slice','parser.py',999),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',1006),
  ('ExpressionListTypeOpt -> ExpressionList','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1010),
  ('ExpressionListTypeOpt -> epsilon','ExpressionListTypeOpt',1,'p_expr_list_type_opt','parser.py',1011),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',1020),
  ('Expression -> Expression LOGICAL_OR Expression','Expression',3,'p_expr','parser.py',1021),
  ('Expression -> Expression LOGICAL_AND Expression','Expression',3,'p_expr','parser.py',1022),
  ('Expression -> Expression EQUALS Expression','Expression',3,'p_expr','parser.py',1023),
  ('Expression -> Expression NOT_ASSIGN Expression','Expression',3,'p_expr','parser.py',1024),
  ('Expression -> Expression LESSER Expression','Expression',3,'p_expr','parser.py',1025),
  ('Expression -> Expression GREATER Expression','Expression',3,'p_expr','parser.py',1026),
  ('Expression -> Expression LESS_EQUALS Expression','Expression',3,'p_expr','parser.py',1027),
  ('Expression -> Expression MORE_EQUALS Expression','Expression',3,'p_expr','parser.py',1028),
  ('Expression -> Expression OR Expression','Expression',3,'p_expr','parser.py',1029),
  ('Expression -> Expression XOR Expression','Expression',3,'p_expr','parser.py',1030),
  ('Expression -> Expression DIVIDE Expression','Expression',3,'p_expr','parser.py',1031),
  ('Expression -> Expression MOD Expression','Expression',3,'p_expr','parser.py',1032),
  ('Expression -> Expression LSHIFT Expression','Expression',3,'p_expr','parser.py',1033),
  ('Expression -> Expression RSHIFT Expression','Expression',3,'p_expr','parser.py',1034),
  ('Expression -> Expression PLUS Expression','Expression',3,'p_expr','parser.py',1035),
  ('Expression -> Expression MINUS Expression','Expression',3,'p_expr','parser.py',1036),
  ('Expression -> Expression STAR Expression','Expression',3,'p_expr','parser.py',1037),
  ('Expression -> Expression AND Expression','Expression',3,'p_expr','parser.py',1038),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',1216),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',1217),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',1221),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1222),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',1223),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',1259),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',1260),
  ('UnaryOp -> STAR','UnaryOp',1,'p_unary_op','parser.py',1261),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',1262),
  ('Conversion -> TYPECAST Type LPAREN Expression RPAREN','Conversion',5,'p_conversion','parser.py',1278),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',1290),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',1291),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',1292),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',1293),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',1294),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',1295),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',1296),
  ('Statement -> CreateScope Block EndScope','Statement',3,'p_statement','parser.py',1297),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',1298),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',1299),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',1300),
  ('Statement -> PrintStmt','Statement',1,'p_statement','parser.py',1301),
  ('Statement -> ScanStmt','Statement',1,'p_statement','parser.py',1302),
  ('PrintStmt -> PRINT PD Expression','PrintStmt',3,'p_print_stmt','parser.py',1311),
  ('PrintStmt -> PRINT PS Expression','PrintStmt',3,'p_print_stmt','parser.py',1312),
  ('ScanStmt -> SCAN Expression','ScanStmt',2,'p_scan_stmt','parser.py',1320),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',1330),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1331),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',1332),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',1333),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',1334),
  ('LabeledStmt -> Label COLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',1339),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',1359),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',1365),
  ('IncDecStmt -> Expression INCR','IncDecStmt',2,'p_inc_dec','parser.py',1370),
  ('IncDecStmt -> Expression DECR','IncDecStmt',2,'p_inc_dec','parser.py',1371),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',1377),
  ('assign_op -> AssignOp','assign_op',1,'p_assign_op','parser.py',1407),
  ('AssignOp -> PLUS_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1411),
  ('AssignOp -> MINUS_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1412),
  ('AssignOp -> STAR_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1413),
  ('AssignOp -> DIVIDE_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1414),
  ('AssignOp -> MOD_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1415),
  ('AssignOp -> AND_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1416),
  ('AssignOp -> OR_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1417),
  ('AssignOp -> XOR_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1418),
  ('AssignOp -> LSHIFT_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1419),
  ('AssignOp -> RSHIFT_ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1420),
  ('AssignOp -> ASSIGN','AssignOp',1,'p_AssignOp','parser.py',1421),
  ('IfStmt -> IF Expression CreateScope Block EndScope ElseOpt','IfStmt',6,'p_if_statement','parser.py',1426),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',1448),
  ('ElseOpt -> ELSE CreateScope Block EndScope','ElseOpt',4,'p_else_opt','parser.py',1449),
  ('ElseOpt -> epsilon','ElseOpt',1,'p_else_opt','parser.py',1450),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',1468),
  ('ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope','ExprSwitchStmt',8,'p_expr_switch_stmt','parser.py',1473),
  ('StartSwitch -> <empty>','StartSwitch',0,'p_start_switch','parser.py',1503),
  ('ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause','ExprCaseClauseRep',2,'p_expr_case_clause_rep','parser.py',1513),
  ('ExprCaseClauseRep -> epsilon','ExprCaseClauseRep',1,'p_expr_case_clause_rep','parser.py',1514),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_expr_case_clause','parser.py',1533),
  ('ExprSwitchCase -> CASE Expression','ExprSwitchCase',2,'p_expr_switch_case','parser.py',1547),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_expr_switch_case','parser.py',1548),
  ('ForStmt -> FOR CreateScope ConditionBlockOpt Block EndScope','ForStmt',5,'p_for','parser.py',1567),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1581),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1582),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',1583),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',1588),
  ('ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt','ForClause',5,'p_forclause','parser.py',1592),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',1614),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',1615),
  ('ReturnStmt -> RETURN ExpressionPureOpt','ReturnStmt',2,'p_return','parser.py',1619),
  ('ExpressionPureOpt -> Expression','ExpressionPureOpt',1,'p_expression_pure_opt','parser.py',1638),
  ('ExpressionPureOpt -> epsilon','ExpressionPureOpt',1,'p_expression_pure_opt','parser.py',1639),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',1643),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',1656),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',1669),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',1670),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',1674),
  ('SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep','SourceFile',4,'p_source_file','parser.py',1686),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',1692),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON','ImportDeclRep',3,'p_import_decl_rep','parser.py',1693),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',1705),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',1706),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',1723),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',1729),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',1743),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',1744),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON','ImportSpecRep',3,'p_import_spec_rep','parser.py',1757),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',1758),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',1769),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1779),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1780),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',1781),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser.py',1789),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',1797),
]
