Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> start
Rule 1     start -> SourceFile
Rule 2     Type -> TypeName
Rule 3     Type -> TypeLit
Rule 4     Type -> LPAREN Type RPAREN
Rule 5     TypeName -> TypeToken
Rule 6     TypeName -> QualifiedIdent
Rule 7     TypeToken -> INT_T
Rule 8     TypeToken -> FLOAT_T
Rule 9     TypeToken -> UINT_T
Rule 10    TypeToken -> COMPLEX_T
Rule 11    TypeToken -> RUNE_T
Rule 12    TypeToken -> BOOL_T
Rule 13    TypeToken -> STRING_T
Rule 14    TypeToken -> TYPE IDENTIFIER
Rule 15    TypeLit -> ArrayType
Rule 16    TypeLit -> StructType
Rule 17    TypeLit -> PointerType
Rule 18    TypeOpt -> Type
Rule 19    TypeOpt -> epsilon
Rule 20    ArrayType -> LSQUARE ArrayLength RSQUARE ElementType
Rule 21    ArrayLength -> Expression
Rule 22    ElementType -> Type
Rule 23    StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
Rule 24    FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON
Rule 25    FieldDeclRep -> epsilon
Rule 26    FieldDecl -> IdentifierList Type
Rule 27    PointerType -> STAR BaseType
Rule 28    BaseType -> Type
Rule 29    Signature -> Parameters TypeOpt
Rule 30    Parameters -> LPAREN ParameterListOpt RPAREN
Rule 31    ParameterListOpt -> ParametersList
Rule 32    ParameterListOpt -> epsilon
Rule 33    ParametersList -> ParameterDecl
Rule 34    ParametersList -> ParameterDeclCommaRep
Rule 35    ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl
Rule 36    ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl
Rule 37    ParameterDecl -> IdentifierList Type
Rule 38    ParameterDecl -> Type
Rule 39    Block -> LCURL StatementList RCURL
Rule 40    StatementList -> StatementRep
Rule 41    StatementRep -> StatementRep Statement SEMICOLON
Rule 42    StatementRep -> epsilon
Rule 43    Declaration -> ConstDecl
Rule 44    Declaration -> TypeDecl
Rule 45    Declaration -> VarDecl
Rule 46    TopLevelDecl -> Declaration
Rule 47    TopLevelDecl -> FunctionDecl
Rule 48    ConstDecl -> CONST ConstSpec
Rule 49    ConstDecl -> CONST LPAREN ConstSpecRep RPAREN
Rule 50    ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON
Rule 51    ConstSpecRep -> epsilon
Rule 52    ConstSpec -> IdentifierList Type ASSIGN ExpressionList
Rule 53    IdentifierList -> IDENTIFIER IdentifierRep
Rule 54    IdentifierRep -> IdentifierRep COMMA IDENTIFIER
Rule 55    IdentifierRep -> epsilon
Rule 56    ExpressionList -> Expression ExpressionRep
Rule 57    ExpressionRep -> ExpressionRep COMMA Expression
Rule 58    ExpressionRep -> epsilon
Rule 59    TypeDecl -> TYPE TypeSpec
Rule 60    TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN
Rule 61    TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON
Rule 62    TypeSpecRep -> epsilon
Rule 63    TypeSpec -> TypeDef
Rule 64    TypeDef -> IDENTIFIER Type
Rule 65    VarDecl -> VAR VarSpec
Rule 66    VarDecl -> VAR LPAREN VarSpecRep RPAREN
Rule 67    VarSpecRep -> VarSpecRep VarSpec SEMICOLON
Rule 68    VarSpecRep -> epsilon
Rule 69    VarSpec -> IdentifierList Type ExpressionListOpt
Rule 70    VarSpec -> IdentifierList ASSIGN ExpressionList
Rule 71    ExpressionListOpt -> ASSIGN ExpressionList
Rule 72    ExpressionListOpt -> epsilon
Rule 73    ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression
Rule 74    FunctionDecl -> FUNC FunctionName CreateScope Function EndScope
Rule 75    FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope
Rule 76    CreateFuncScope -> <empty>
Rule 77    CreateScope -> <empty>
Rule 78    EndScope -> <empty>
Rule 79    FunctionName -> IDENTIFIER
Rule 80    Function -> Signature funMark FunctionBody
Rule 81    funMark -> <empty>
Rule 82    FunctionBody -> Block
Rule 83    Operand -> Literal
Rule 84    Operand -> OperandName
Rule 85    Operand -> LPAREN Expression RPAREN
Rule 86    Literal -> BasicLit
Rule 87    BasicLit -> I INTEGER
Rule 88    BasicLit -> I OCTAL
Rule 89    BasicLit -> I HEX
Rule 90    BasicLit -> F FLOAT
Rule 91    BasicLit -> C IMAGINARY
Rule 92    BasicLit -> R RUNE
Rule 93    BasicLit -> S STRING
Rule 94    I -> <empty>
Rule 95    R -> <empty>
Rule 96    F -> <empty>
Rule 97    C -> <empty>
Rule 98    S -> <empty>
Rule 99    OperandName -> IDENTIFIER
Rule 100   QualifiedIdent -> IDENTIFIER DOT TypeName
Rule 101   PrimaryExpr -> Operand
Rule 102   PrimaryExpr -> PrimaryExpr Selector
Rule 103   PrimaryExpr -> Conversion
Rule 104   PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE
Rule 105   PrimaryExpr -> PrimaryExpr Slice
Rule 106   PrimaryExpr -> PrimaryExpr TypeAssertion
Rule 107   PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
Rule 108   Selector -> DOT IDENTIFIER
Rule 109   Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE
Rule 110   Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE
Rule 111   TypeAssertion -> DOT LPAREN Type RPAREN
Rule 112   ExpressionListTypeOpt -> ExpressionList
Rule 113   ExpressionListTypeOpt -> epsilon
Rule 114   Expression -> UnaryExpr
Rule 115   Expression -> Expression LOGICAL_OR Expression
Rule 116   Expression -> Expression LOGICAL_AND Expression
Rule 117   Expression -> Expression EQUALS Expression
Rule 118   Expression -> Expression NOT_ASSIGN Expression
Rule 119   Expression -> Expression LESSER Expression
Rule 120   Expression -> Expression GREATER Expression
Rule 121   Expression -> Expression LESS_EQUALS Expression
Rule 122   Expression -> Expression MORE_EQUALS Expression
Rule 123   Expression -> Expression OR Expression
Rule 124   Expression -> Expression XOR Expression
Rule 125   Expression -> Expression DIVIDE Expression
Rule 126   Expression -> Expression MOD Expression
Rule 127   Expression -> Expression LSHIFT Expression
Rule 128   Expression -> Expression RSHIFT Expression
Rule 129   Expression -> Expression PLUS Expression
Rule 130   Expression -> Expression MINUS Expression
Rule 131   Expression -> Expression STAR Expression
Rule 132   Expression -> Expression AND Expression
Rule 133   ExpressionOpt -> Expression
Rule 134   ExpressionOpt -> epsilon
Rule 135   UnaryExpr -> PrimaryExpr
Rule 136   UnaryExpr -> UnaryOp UnaryExpr
Rule 137   UnaryExpr -> NOT UnaryExpr
Rule 138   UnaryOp -> PLUS
Rule 139   UnaryOp -> MINUS
Rule 140   UnaryOp -> STAR
Rule 141   UnaryOp -> AND
Rule 142   Conversion -> TYPECAST Type LPAREN Expression RPAREN
Rule 143   Statement -> Declaration
Rule 144   Statement -> LabeledStmt
Rule 145   Statement -> SimpleStmt
Rule 146   Statement -> ReturnStmt
Rule 147   Statement -> BreakStmt
Rule 148   Statement -> ContinueStmt
Rule 149   Statement -> GotoStmt
Rule 150   Statement -> CreateScope Block EndScope
Rule 151   Statement -> IfStmt
Rule 152   Statement -> SwitchStmt
Rule 153   Statement -> ForStmt
Rule 154   Statement -> PrintStmt
Rule 155   Statement -> ScanStmt
Rule 156   PrintStmt -> PRINT PD Expression
Rule 157   PrintStmt -> PRINT PS Expression
Rule 158   ScanStmt -> SCAN Expression
Rule 159   SimpleStmt -> epsilon
Rule 160   SimpleStmt -> ExpressionStmt
Rule 161   SimpleStmt -> IncDecStmt
Rule 162   SimpleStmt -> Assignment
Rule 163   SimpleStmt -> ShortVarDecl
Rule 164   LabeledStmt -> Label COLON Statement
Rule 165   Label -> IDENTIFIER
Rule 166   ExpressionStmt -> Expression
Rule 167   IncDecStmt -> Expression INCR
Rule 168   IncDecStmt -> Expression DECR
Rule 169   Assignment -> ExpressionList assign_op ExpressionList
Rule 170   assign_op -> AssignOp
Rule 171   AssignOp -> PLUS_ASSIGN
Rule 172   AssignOp -> MINUS_ASSIGN
Rule 173   AssignOp -> STAR_ASSIGN
Rule 174   AssignOp -> DIVIDE_ASSIGN
Rule 175   AssignOp -> MOD_ASSIGN
Rule 176   AssignOp -> AND_ASSIGN
Rule 177   AssignOp -> OR_ASSIGN
Rule 178   AssignOp -> XOR_ASSIGN
Rule 179   AssignOp -> LSHIFT_ASSIGN
Rule 180   AssignOp -> RSHIFT_ASSIGN
Rule 181   AssignOp -> ASSIGN
Rule 182   IfStmt -> IF Expression CreateScope Block EndScope ElseOpt
Rule 183   ElseOpt -> ELSE IfStmt
Rule 184   ElseOpt -> ELSE CreateScope Block EndScope
Rule 185   ElseOpt -> epsilon
Rule 186   SwitchStmt -> ExprSwitchStmt
Rule 187   ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope
Rule 188   StartSwitch -> <empty>
Rule 189   ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause
Rule 190   ExprCaseClauseRep -> epsilon
Rule 191   ExprCaseClause -> ExprSwitchCase COLON StatementList
Rule 192   ExprSwitchCase -> CASE Expression
Rule 193   ExprSwitchCase -> DEFAULT
Rule 194   ForStmt -> FOR CreateScope ConditionBlockOpt Block EndScope
Rule 195   ConditionBlockOpt -> epsilon
Rule 196   ConditionBlockOpt -> Condition
Rule 197   ConditionBlockOpt -> ForClause
Rule 198   Condition -> Expression
Rule 199   ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
Rule 200   ConditionOpt -> epsilon
Rule 201   ConditionOpt -> Condition
Rule 202   ReturnStmt -> RETURN ExpressionPureOpt
Rule 203   ExpressionPureOpt -> Expression
Rule 204   ExpressionPureOpt -> epsilon
Rule 205   BreakStmt -> BREAK LabelOpt
Rule 206   ContinueStmt -> CONTINUE LabelOpt
Rule 207   LabelOpt -> Label
Rule 208   LabelOpt -> epsilon
Rule 209   GotoStmt -> GOTO Label
Rule 210   SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
Rule 211   ImportDeclRep -> epsilon
Rule 212   ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON
Rule 213   TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON
Rule 214   TopLevelDeclRep -> epsilon
Rule 215   PackageClause -> PACKAGE PackageName
Rule 216   PackageName -> IDENTIFIER
Rule 217   ImportDecl -> IMPORT ImportSpec
Rule 218   ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN
Rule 219   ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON
Rule 220   ImportSpecRep -> epsilon
Rule 221   ImportSpec -> PackageNameDotOpt ImportPath
Rule 222   PackageNameDotOpt -> DOT
Rule 223   PackageNameDotOpt -> PackageName
Rule 224   PackageNameDotOpt -> epsilon
Rule 225   ImportPath -> STRING
Rule 226   epsilon -> <empty>

Terminals, with rules where they appear

AND                  : 132 141
AND_ASSIGN           : 176
ASSIGN               : 52 70 71 181
BOOL_T               : 12
BREAK                : 205
CASE                 : 192
COLON                : 109 110 110 164 191
COMMA                : 35 36 54 57
COMPLEX_T            : 10
CONST                : 48 49
CONTINUE             : 206
DECR                 : 168
DEFAULT              : 193
DIVIDE               : 125
DIVIDE_ASSIGN        : 174
DOT                  : 100 108 111 222
ELSE                 : 183 184
EQUALS               : 117
FLOAT                : 90
FLOAT_T              : 8
FOR                  : 194
FUNC                 : 74 75
GOTO                 : 209
GREATER              : 120
HEX                  : 89
IDENTIFIER           : 14 53 54 64 73 79 99 100 108 165 216
IF                   : 182
IMAGINARY            : 91
IMPORT               : 217 218
INCR                 : 167
INTEGER              : 87
INT_T                : 7
LCURL                : 23 39 187
LESSER               : 119
LESS_EQUALS          : 121
LOGICAL_AND          : 116
LOGICAL_OR           : 115
LPAREN               : 4 30 49 60 66 85 107 111 142 218
LSHIFT               : 127
LSHIFT_ASSIGN        : 179
LSQUARE              : 20 104 109 110
MINUS                : 130 139
MINUS_ASSIGN         : 172
MOD                  : 126
MOD_ASSIGN           : 175
MORE_EQUALS          : 122
NOT                  : 137
NOT_ASSIGN           : 118
OCTAL                : 88
OR                   : 123
OR_ASSIGN            : 177
PACKAGE              : 215
PD                   : 156
PLUS                 : 129 138
PLUS_ASSIGN          : 171
PRINT                : 156 157
PS                   : 157
QUICK_ASSIGN         : 73
RCURL                : 23 39 187
RETURN               : 202
RPAREN               : 4 30 49 60 66 85 107 111 142 218
RSHIFT               : 128
RSHIFT_ASSIGN        : 180
RSQUARE              : 20 104 109 110
RUNE                 : 92
RUNE_T               : 11
SCAN                 : 158
SEMICOLON            : 24 41 50 61 67 199 199 210 212 213 219
STAR                 : 27 131 140
STAR_ASSIGN          : 173
STRING               : 93 225
STRING_T             : 13
STRUCT               : 23
SWITCH               : 187
TYPE                 : 14 59 60
TYPECAST             : 142
UINT_T               : 9
VAR                  : 65 66
XOR                  : 124
XOR_ASSIGN           : 178
error                : 

Nonterminals, with rules where they appear

ArrayLength          : 20
ArrayType            : 15
AssignOp             : 170
Assignment           : 162
BaseType             : 27
BasicLit             : 86
Block                : 82 150 182 184 194
BreakStmt            : 147
C                    : 91
Condition            : 196 201
ConditionBlockOpt    : 194
ConditionOpt         : 199
ConstDecl            : 43
ConstSpec            : 48 50
ConstSpecRep         : 49 50
ContinueStmt         : 148
Conversion           : 103
CreateFuncScope      : 23
CreateScope          : 74 75 150 182 184 187 194
Declaration          : 46 143
ElementType          : 20
ElseOpt              : 182
EndScope             : 23 74 75 150 182 184 187 194
ExprCaseClause       : 189
ExprCaseClauseRep    : 187 189
ExprSwitchCase       : 191
ExprSwitchStmt       : 186
Expression           : 21 56 57 73 85 104 110 110 115 115 116 116 117 117 118 118 119 119 120 120 121 121 122 122 123 123 124 124 125 125 126 126 127 127 128 128 129 129 130 130 131 131 132 132 133 142 156 157 158 166 167 168 182 187 192 198 203
ExpressionList       : 52 70 71 112 169 169
ExpressionListOpt    : 69
ExpressionListTypeOpt : 107
ExpressionOpt        : 109 109 110
ExpressionPureOpt    : 202
ExpressionRep        : 56 57
ExpressionStmt       : 160
F                    : 90
FieldDecl            : 24
FieldDeclRep         : 23 24
ForClause            : 197
ForStmt              : 153
Function             : 74
FunctionBody         : 80
FunctionDecl         : 47
FunctionName         : 74 75
GotoStmt             : 149
I                    : 87 88 89
IdentifierList       : 26 37 52 69 70
IdentifierRep        : 53 54
IfStmt               : 151 183
ImportDecl           : 212
ImportDeclRep        : 210 212
ImportPath           : 221
ImportSpec           : 217 219
ImportSpecRep        : 218 219
IncDecStmt           : 161
Label                : 164 207 209
LabelOpt             : 205 206
LabeledStmt          : 144
Literal              : 83
Operand              : 101
OperandName          : 84
PackageClause        : 210
PackageName          : 215 223
PackageNameDotOpt    : 221
ParameterDecl        : 33 35 36 36
ParameterDeclCommaRep : 34 35
ParameterListOpt     : 30
Parameters           : 29
ParametersList       : 31
PointerType          : 17
PrimaryExpr          : 102 104 105 106 107 135
PrintStmt            : 154
QualifiedIdent       : 6
R                    : 92
ReturnStmt           : 146
S                    : 93
ScanStmt             : 155
Selector             : 102
ShortVarDecl         : 163
Signature            : 75 80
SimpleStmt           : 145 199 199
Slice                : 105
SourceFile           : 1
StartSwitch          : 187
Statement            : 41 164
StatementList        : 39 191
StatementRep         : 40 41
StructType           : 16
SwitchStmt           : 152
TopLevelDecl         : 213
TopLevelDeclRep      : 210 213
Type                 : 4 18 22 26 28 37 38 52 64 69 111 142
TypeAssertion        : 106
TypeDecl             : 44
TypeDef              : 63
TypeLit              : 3
TypeName             : 2 100
TypeOpt              : 29
TypeSpec             : 59 61
TypeSpecRep          : 60 61
TypeToken            : 5
UnaryExpr            : 114 136 137
UnaryOp              : 136
VarDecl              : 45
VarSpec              : 65 67
VarSpecRep           : 66 67
assign_op            : 169
epsilon              : 19 25 32 42 51 55 58 62 68 72 113 134 159 185 190 195 200 204 208 211 214 220 224
funMark              : 80
start                : 0

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . SourceFile
    (210) SourceFile -> . PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep
    (215) PackageClause -> . PACKAGE PackageName

    PACKAGE         shift and go to state 4

    start                          shift and go to state 1
    SourceFile                     shift and go to state 2
    PackageClause                  shift and go to state 3

state 1

    (0) S' -> start .



state 2

    (1) start -> SourceFile .

    $end            reduce using rule 1 (start -> SourceFile .)


state 3

    (210) SourceFile -> PackageClause . SEMICOLON ImportDeclRep TopLevelDeclRep

    SEMICOLON       shift and go to state 5


state 4

    (215) PackageClause -> PACKAGE . PackageName
    (216) PackageName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 7

    PackageName                    shift and go to state 6

state 5

    (210) SourceFile -> PackageClause SEMICOLON . ImportDeclRep TopLevelDeclRep
    (211) ImportDeclRep -> . epsilon
    (212) ImportDeclRep -> . ImportDeclRep ImportDecl SEMICOLON
    (226) epsilon -> .

    IMPORT          reduce using rule 226 (epsilon -> .)
    FUNC            reduce using rule 226 (epsilon -> .)
    CONST           reduce using rule 226 (epsilon -> .)
    TYPE            reduce using rule 226 (epsilon -> .)
    VAR             reduce using rule 226 (epsilon -> .)
    $end            reduce using rule 226 (epsilon -> .)

    ImportDeclRep                  shift and go to state 8
    epsilon                        shift and go to state 9

state 6

    (215) PackageClause -> PACKAGE PackageName .

    SEMICOLON       reduce using rule 215 (PackageClause -> PACKAGE PackageName .)


state 7

    (216) PackageName -> IDENTIFIER .

    SEMICOLON       reduce using rule 216 (PackageName -> IDENTIFIER .)
    STRING          reduce using rule 216 (PackageName -> IDENTIFIER .)


state 8

    (210) SourceFile -> PackageClause SEMICOLON ImportDeclRep . TopLevelDeclRep
    (212) ImportDeclRep -> ImportDeclRep . ImportDecl SEMICOLON
    (213) TopLevelDeclRep -> . TopLevelDeclRep TopLevelDecl SEMICOLON
    (214) TopLevelDeclRep -> . epsilon
    (217) ImportDecl -> . IMPORT ImportSpec
    (218) ImportDecl -> . IMPORT LPAREN ImportSpecRep RPAREN
    (226) epsilon -> .

    IMPORT          shift and go to state 13
    FUNC            reduce using rule 226 (epsilon -> .)
    CONST           reduce using rule 226 (epsilon -> .)
    TYPE            reduce using rule 226 (epsilon -> .)
    VAR             reduce using rule 226 (epsilon -> .)
    $end            reduce using rule 226 (epsilon -> .)

    TopLevelDeclRep                shift and go to state 10
    ImportDecl                     shift and go to state 11
    epsilon                        shift and go to state 12

state 9

    (211) ImportDeclRep -> epsilon .

    IMPORT          reduce using rule 211 (ImportDeclRep -> epsilon .)
    FUNC            reduce using rule 211 (ImportDeclRep -> epsilon .)
    CONST           reduce using rule 211 (ImportDeclRep -> epsilon .)
    TYPE            reduce using rule 211 (ImportDeclRep -> epsilon .)
    VAR             reduce using rule 211 (ImportDeclRep -> epsilon .)
    $end            reduce using rule 211 (ImportDeclRep -> epsilon .)


state 10

    (210) SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .
    (213) TopLevelDeclRep -> TopLevelDeclRep . TopLevelDecl SEMICOLON
    (46) TopLevelDecl -> . Declaration
    (47) TopLevelDecl -> . FunctionDecl
    (43) Declaration -> . ConstDecl
    (44) Declaration -> . TypeDecl
    (45) Declaration -> . VarDecl
    (74) FunctionDecl -> . FUNC FunctionName CreateScope Function EndScope
    (75) FunctionDecl -> . FUNC FunctionName CreateScope Signature EndScope
    (48) ConstDecl -> . CONST ConstSpec
    (49) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (65) VarDecl -> . VAR VarSpec
    (66) VarDecl -> . VAR LPAREN VarSpecRep RPAREN

    $end            reduce using rule 210 (SourceFile -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep .)
    FUNC            shift and go to state 20
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23

    TopLevelDecl                   shift and go to state 14
    Declaration                    shift and go to state 15
    FunctionDecl                   shift and go to state 16
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19

state 11

    (212) ImportDeclRep -> ImportDeclRep ImportDecl . SEMICOLON

    SEMICOLON       shift and go to state 24


state 12

    (214) TopLevelDeclRep -> epsilon .

    FUNC            reduce using rule 214 (TopLevelDeclRep -> epsilon .)
    CONST           reduce using rule 214 (TopLevelDeclRep -> epsilon .)
    TYPE            reduce using rule 214 (TopLevelDeclRep -> epsilon .)
    VAR             reduce using rule 214 (TopLevelDeclRep -> epsilon .)
    $end            reduce using rule 214 (TopLevelDeclRep -> epsilon .)


state 13

    (217) ImportDecl -> IMPORT . ImportSpec
    (218) ImportDecl -> IMPORT . LPAREN ImportSpecRep RPAREN
    (221) ImportSpec -> . PackageNameDotOpt ImportPath
    (222) PackageNameDotOpt -> . DOT
    (223) PackageNameDotOpt -> . PackageName
    (224) PackageNameDotOpt -> . epsilon
    (216) PackageName -> . IDENTIFIER
    (226) epsilon -> .

    LPAREN          shift and go to state 26
    DOT             shift and go to state 28
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 226 (epsilon -> .)

    ImportSpec                     shift and go to state 25
    PackageNameDotOpt              shift and go to state 27
    PackageName                    shift and go to state 29
    epsilon                        shift and go to state 30

state 14

    (213) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl . SEMICOLON

    SEMICOLON       shift and go to state 31


state 15

    (46) TopLevelDecl -> Declaration .

    SEMICOLON       reduce using rule 46 (TopLevelDecl -> Declaration .)


state 16

    (47) TopLevelDecl -> FunctionDecl .

    SEMICOLON       reduce using rule 47 (TopLevelDecl -> FunctionDecl .)


state 17

    (43) Declaration -> ConstDecl .

    SEMICOLON       reduce using rule 43 (Declaration -> ConstDecl .)


state 18

    (44) Declaration -> TypeDecl .

    SEMICOLON       reduce using rule 44 (Declaration -> TypeDecl .)


state 19

    (45) Declaration -> VarDecl .

    SEMICOLON       reduce using rule 45 (Declaration -> VarDecl .)


state 20

    (74) FunctionDecl -> FUNC . FunctionName CreateScope Function EndScope
    (75) FunctionDecl -> FUNC . FunctionName CreateScope Signature EndScope
    (79) FunctionName -> . IDENTIFIER

    IDENTIFIER      shift and go to state 33

    FunctionName                   shift and go to state 32

state 21

    (48) ConstDecl -> CONST . ConstSpec
    (49) ConstDecl -> CONST . LPAREN ConstSpecRep RPAREN
    (52) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (53) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 35
    IDENTIFIER      shift and go to state 37

    ConstSpec                      shift and go to state 34
    IdentifierList                 shift and go to state 36

state 22

    (59) TypeDecl -> TYPE . TypeSpec
    (60) TypeDecl -> TYPE . LPAREN TypeSpecRep RPAREN
    (63) TypeSpec -> . TypeDef
    (64) TypeDef -> . IDENTIFIER Type

    LPAREN          shift and go to state 39
    IDENTIFIER      shift and go to state 41

    TypeSpec                       shift and go to state 38
    TypeDef                        shift and go to state 40

state 23

    (65) VarDecl -> VAR . VarSpec
    (66) VarDecl -> VAR . LPAREN VarSpecRep RPAREN
    (69) VarSpec -> . IdentifierList Type ExpressionListOpt
    (70) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (53) IdentifierList -> . IDENTIFIER IdentifierRep

    LPAREN          shift and go to state 43
    IDENTIFIER      shift and go to state 37

    VarSpec                        shift and go to state 42
    IdentifierList                 shift and go to state 44

state 24

    (212) ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .

    IMPORT          reduce using rule 212 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    FUNC            reduce using rule 212 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    CONST           reduce using rule 212 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    TYPE            reduce using rule 212 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    VAR             reduce using rule 212 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)
    $end            reduce using rule 212 (ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON .)


state 25

    (217) ImportDecl -> IMPORT ImportSpec .

    SEMICOLON       reduce using rule 217 (ImportDecl -> IMPORT ImportSpec .)


state 26

    (218) ImportDecl -> IMPORT LPAREN . ImportSpecRep RPAREN
    (219) ImportSpecRep -> . ImportSpecRep ImportSpec SEMICOLON
    (220) ImportSpecRep -> . epsilon
    (226) epsilon -> .

    RPAREN          reduce using rule 226 (epsilon -> .)
    DOT             reduce using rule 226 (epsilon -> .)
    IDENTIFIER      reduce using rule 226 (epsilon -> .)
    STRING          reduce using rule 226 (epsilon -> .)

    ImportSpecRep                  shift and go to state 45
    epsilon                        shift and go to state 46

state 27

    (221) ImportSpec -> PackageNameDotOpt . ImportPath
    (225) ImportPath -> . STRING

    STRING          shift and go to state 48

    ImportPath                     shift and go to state 47

state 28

    (222) PackageNameDotOpt -> DOT .

    STRING          reduce using rule 222 (PackageNameDotOpt -> DOT .)


state 29

    (223) PackageNameDotOpt -> PackageName .

    STRING          reduce using rule 223 (PackageNameDotOpt -> PackageName .)


state 30

    (224) PackageNameDotOpt -> epsilon .

    STRING          reduce using rule 224 (PackageNameDotOpt -> epsilon .)


state 31

    (213) TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .

    FUNC            reduce using rule 213 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    CONST           reduce using rule 213 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    TYPE            reduce using rule 213 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    VAR             reduce using rule 213 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)
    $end            reduce using rule 213 (TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON .)


state 32

    (74) FunctionDecl -> FUNC FunctionName . CreateScope Function EndScope
    (75) FunctionDecl -> FUNC FunctionName . CreateScope Signature EndScope
    (77) CreateScope -> .

    LPAREN          reduce using rule 77 (CreateScope -> .)

    CreateScope                    shift and go to state 49

state 33

    (79) FunctionName -> IDENTIFIER .

    LPAREN          reduce using rule 79 (FunctionName -> IDENTIFIER .)


state 34

    (48) ConstDecl -> CONST ConstSpec .

    SEMICOLON       reduce using rule 48 (ConstDecl -> CONST ConstSpec .)


state 35

    (49) ConstDecl -> CONST LPAREN . ConstSpecRep RPAREN
    (50) ConstSpecRep -> . ConstSpecRep ConstSpec SEMICOLON
    (51) ConstSpecRep -> . epsilon
    (226) epsilon -> .

    RPAREN          reduce using rule 226 (epsilon -> .)
    IDENTIFIER      reduce using rule 226 (epsilon -> .)

    ConstSpecRep                   shift and go to state 50
    epsilon                        shift and go to state 51

state 36

    (52) ConstSpec -> IdentifierList . Type ASSIGN ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    Type                           shift and go to state 52
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 37

    (53) IdentifierList -> IDENTIFIER . IdentifierRep
    (54) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (55) IdentifierRep -> . epsilon
    (226) epsilon -> .

    COMMA           reduce using rule 226 (epsilon -> .)
    LPAREN          reduce using rule 226 (epsilon -> .)
    INT_T           reduce using rule 226 (epsilon -> .)
    FLOAT_T         reduce using rule 226 (epsilon -> .)
    UINT_T          reduce using rule 226 (epsilon -> .)
    COMPLEX_T       reduce using rule 226 (epsilon -> .)
    RUNE_T          reduce using rule 226 (epsilon -> .)
    BOOL_T          reduce using rule 226 (epsilon -> .)
    STRING_T        reduce using rule 226 (epsilon -> .)
    TYPE            reduce using rule 226 (epsilon -> .)
    IDENTIFIER      reduce using rule 226 (epsilon -> .)
    LSQUARE         reduce using rule 226 (epsilon -> .)
    STAR            reduce using rule 226 (epsilon -> .)
    STRUCT          reduce using rule 226 (epsilon -> .)
    ASSIGN          reduce using rule 226 (epsilon -> .)

    IdentifierRep                  shift and go to state 73
    epsilon                        shift and go to state 74

state 38

    (59) TypeDecl -> TYPE TypeSpec .

    SEMICOLON       reduce using rule 59 (TypeDecl -> TYPE TypeSpec .)


state 39

    (60) TypeDecl -> TYPE LPAREN . TypeSpecRep RPAREN
    (61) TypeSpecRep -> . TypeSpecRep TypeSpec SEMICOLON
    (62) TypeSpecRep -> . epsilon
    (226) epsilon -> .

    RPAREN          reduce using rule 226 (epsilon -> .)
    IDENTIFIER      reduce using rule 226 (epsilon -> .)

    TypeSpecRep                    shift and go to state 75
    epsilon                        shift and go to state 76

state 40

    (63) TypeSpec -> TypeDef .

    SEMICOLON       reduce using rule 63 (TypeSpec -> TypeDef .)


state 41

    (64) TypeDef -> IDENTIFIER . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    Type                           shift and go to state 77
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 42

    (65) VarDecl -> VAR VarSpec .

    SEMICOLON       reduce using rule 65 (VarDecl -> VAR VarSpec .)


state 43

    (66) VarDecl -> VAR LPAREN . VarSpecRep RPAREN
    (67) VarSpecRep -> . VarSpecRep VarSpec SEMICOLON
    (68) VarSpecRep -> . epsilon
    (226) epsilon -> .

    RPAREN          reduce using rule 226 (epsilon -> .)
    IDENTIFIER      reduce using rule 226 (epsilon -> .)

    VarSpecRep                     shift and go to state 78
    epsilon                        shift and go to state 79

state 44

    (69) VarSpec -> IdentifierList . Type ExpressionListOpt
    (70) VarSpec -> IdentifierList . ASSIGN ExpressionList
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    ASSIGN          shift and go to state 81
    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    Type                           shift and go to state 80
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 45

    (218) ImportDecl -> IMPORT LPAREN ImportSpecRep . RPAREN
    (219) ImportSpecRep -> ImportSpecRep . ImportSpec SEMICOLON
    (221) ImportSpec -> . PackageNameDotOpt ImportPath
    (222) PackageNameDotOpt -> . DOT
    (223) PackageNameDotOpt -> . PackageName
    (224) PackageNameDotOpt -> . epsilon
    (216) PackageName -> . IDENTIFIER
    (226) epsilon -> .

    RPAREN          shift and go to state 82
    DOT             shift and go to state 28
    IDENTIFIER      shift and go to state 7
    STRING          reduce using rule 226 (epsilon -> .)

    ImportSpec                     shift and go to state 83
    PackageNameDotOpt              shift and go to state 27
    PackageName                    shift and go to state 29
    epsilon                        shift and go to state 30

state 46

    (220) ImportSpecRep -> epsilon .

    RPAREN          reduce using rule 220 (ImportSpecRep -> epsilon .)
    DOT             reduce using rule 220 (ImportSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 220 (ImportSpecRep -> epsilon .)
    STRING          reduce using rule 220 (ImportSpecRep -> epsilon .)


state 47

    (221) ImportSpec -> PackageNameDotOpt ImportPath .

    SEMICOLON       reduce using rule 221 (ImportSpec -> PackageNameDotOpt ImportPath .)


state 48

    (225) ImportPath -> STRING .

    SEMICOLON       reduce using rule 225 (ImportPath -> STRING .)


state 49

    (74) FunctionDecl -> FUNC FunctionName CreateScope . Function EndScope
    (75) FunctionDecl -> FUNC FunctionName CreateScope . Signature EndScope
    (80) Function -> . Signature funMark FunctionBody
    (29) Signature -> . Parameters TypeOpt
    (30) Parameters -> . LPAREN ParameterListOpt RPAREN

    LPAREN          shift and go to state 87

    Function                       shift and go to state 84
    Signature                      shift and go to state 85
    Parameters                     shift and go to state 86

state 50

    (49) ConstDecl -> CONST LPAREN ConstSpecRep . RPAREN
    (50) ConstSpecRep -> ConstSpecRep . ConstSpec SEMICOLON
    (52) ConstSpec -> . IdentifierList Type ASSIGN ExpressionList
    (53) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 88
    IDENTIFIER      shift and go to state 37

    ConstSpec                      shift and go to state 89
    IdentifierList                 shift and go to state 36

state 51

    (51) ConstSpecRep -> epsilon .

    RPAREN          reduce using rule 51 (ConstSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 51 (ConstSpecRep -> epsilon .)


state 52

    (52) ConstSpec -> IdentifierList Type . ASSIGN ExpressionList

    ASSIGN          shift and go to state 90


state 53

    (2) Type -> TypeName .

    ASSIGN          reduce using rule 2 (Type -> TypeName .)
    SEMICOLON       reduce using rule 2 (Type -> TypeName .)
    RPAREN          reduce using rule 2 (Type -> TypeName .)
    LCURL           reduce using rule 2 (Type -> TypeName .)
    COMMA           reduce using rule 2 (Type -> TypeName .)
    LPAREN          reduce using rule 2 (Type -> TypeName .)


state 54

    (3) Type -> TypeLit .

    ASSIGN          reduce using rule 3 (Type -> TypeLit .)
    SEMICOLON       reduce using rule 3 (Type -> TypeLit .)
    RPAREN          reduce using rule 3 (Type -> TypeLit .)
    LCURL           reduce using rule 3 (Type -> TypeLit .)
    COMMA           reduce using rule 3 (Type -> TypeLit .)
    LPAREN          reduce using rule 3 (Type -> TypeLit .)


state 55

    (4) Type -> LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    Type                           shift and go to state 91
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 56

    (5) TypeName -> TypeToken .

    ASSIGN          reduce using rule 5 (TypeName -> TypeToken .)
    SEMICOLON       reduce using rule 5 (TypeName -> TypeToken .)
    RPAREN          reduce using rule 5 (TypeName -> TypeToken .)
    LCURL           reduce using rule 5 (TypeName -> TypeToken .)
    COMMA           reduce using rule 5 (TypeName -> TypeToken .)
    LPAREN          reduce using rule 5 (TypeName -> TypeToken .)


state 57

    (6) TypeName -> QualifiedIdent .

    ASSIGN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    SEMICOLON       reduce using rule 6 (TypeName -> QualifiedIdent .)
    RPAREN          reduce using rule 6 (TypeName -> QualifiedIdent .)
    LCURL           reduce using rule 6 (TypeName -> QualifiedIdent .)
    COMMA           reduce using rule 6 (TypeName -> QualifiedIdent .)
    LPAREN          reduce using rule 6 (TypeName -> QualifiedIdent .)


state 58

    (15) TypeLit -> ArrayType .

    ASSIGN          reduce using rule 15 (TypeLit -> ArrayType .)
    SEMICOLON       reduce using rule 15 (TypeLit -> ArrayType .)
    RPAREN          reduce using rule 15 (TypeLit -> ArrayType .)
    LCURL           reduce using rule 15 (TypeLit -> ArrayType .)
    COMMA           reduce using rule 15 (TypeLit -> ArrayType .)
    LPAREN          reduce using rule 15 (TypeLit -> ArrayType .)


state 59

    (16) TypeLit -> StructType .

    ASSIGN          reduce using rule 16 (TypeLit -> StructType .)
    SEMICOLON       reduce using rule 16 (TypeLit -> StructType .)
    RPAREN          reduce using rule 16 (TypeLit -> StructType .)
    LCURL           reduce using rule 16 (TypeLit -> StructType .)
    COMMA           reduce using rule 16 (TypeLit -> StructType .)
    LPAREN          reduce using rule 16 (TypeLit -> StructType .)


state 60

    (17) TypeLit -> PointerType .

    ASSIGN          reduce using rule 17 (TypeLit -> PointerType .)
    SEMICOLON       reduce using rule 17 (TypeLit -> PointerType .)
    RPAREN          reduce using rule 17 (TypeLit -> PointerType .)
    LCURL           reduce using rule 17 (TypeLit -> PointerType .)
    COMMA           reduce using rule 17 (TypeLit -> PointerType .)
    LPAREN          reduce using rule 17 (TypeLit -> PointerType .)


state 61

    (7) TypeToken -> INT_T .

    ASSIGN          reduce using rule 7 (TypeToken -> INT_T .)
    SEMICOLON       reduce using rule 7 (TypeToken -> INT_T .)
    RPAREN          reduce using rule 7 (TypeToken -> INT_T .)
    LCURL           reduce using rule 7 (TypeToken -> INT_T .)
    COMMA           reduce using rule 7 (TypeToken -> INT_T .)
    LPAREN          reduce using rule 7 (TypeToken -> INT_T .)


state 62

    (8) TypeToken -> FLOAT_T .

    ASSIGN          reduce using rule 8 (TypeToken -> FLOAT_T .)
    SEMICOLON       reduce using rule 8 (TypeToken -> FLOAT_T .)
    RPAREN          reduce using rule 8 (TypeToken -> FLOAT_T .)
    LCURL           reduce using rule 8 (TypeToken -> FLOAT_T .)
    COMMA           reduce using rule 8 (TypeToken -> FLOAT_T .)
    LPAREN          reduce using rule 8 (TypeToken -> FLOAT_T .)


state 63

    (9) TypeToken -> UINT_T .

    ASSIGN          reduce using rule 9 (TypeToken -> UINT_T .)
    SEMICOLON       reduce using rule 9 (TypeToken -> UINT_T .)
    RPAREN          reduce using rule 9 (TypeToken -> UINT_T .)
    LCURL           reduce using rule 9 (TypeToken -> UINT_T .)
    COMMA           reduce using rule 9 (TypeToken -> UINT_T .)
    LPAREN          reduce using rule 9 (TypeToken -> UINT_T .)


state 64

    (10) TypeToken -> COMPLEX_T .

    ASSIGN          reduce using rule 10 (TypeToken -> COMPLEX_T .)
    SEMICOLON       reduce using rule 10 (TypeToken -> COMPLEX_T .)
    RPAREN          reduce using rule 10 (TypeToken -> COMPLEX_T .)
    LCURL           reduce using rule 10 (TypeToken -> COMPLEX_T .)
    COMMA           reduce using rule 10 (TypeToken -> COMPLEX_T .)
    LPAREN          reduce using rule 10 (TypeToken -> COMPLEX_T .)


state 65

    (11) TypeToken -> RUNE_T .

    ASSIGN          reduce using rule 11 (TypeToken -> RUNE_T .)
    SEMICOLON       reduce using rule 11 (TypeToken -> RUNE_T .)
    RPAREN          reduce using rule 11 (TypeToken -> RUNE_T .)
    LCURL           reduce using rule 11 (TypeToken -> RUNE_T .)
    COMMA           reduce using rule 11 (TypeToken -> RUNE_T .)
    LPAREN          reduce using rule 11 (TypeToken -> RUNE_T .)


state 66

    (12) TypeToken -> BOOL_T .

    ASSIGN          reduce using rule 12 (TypeToken -> BOOL_T .)
    SEMICOLON       reduce using rule 12 (TypeToken -> BOOL_T .)
    RPAREN          reduce using rule 12 (TypeToken -> BOOL_T .)
    LCURL           reduce using rule 12 (TypeToken -> BOOL_T .)
    COMMA           reduce using rule 12 (TypeToken -> BOOL_T .)
    LPAREN          reduce using rule 12 (TypeToken -> BOOL_T .)


state 67

    (13) TypeToken -> STRING_T .

    ASSIGN          reduce using rule 13 (TypeToken -> STRING_T .)
    SEMICOLON       reduce using rule 13 (TypeToken -> STRING_T .)
    RPAREN          reduce using rule 13 (TypeToken -> STRING_T .)
    LCURL           reduce using rule 13 (TypeToken -> STRING_T .)
    COMMA           reduce using rule 13 (TypeToken -> STRING_T .)
    LPAREN          reduce using rule 13 (TypeToken -> STRING_T .)


state 68

    (14) TypeToken -> TYPE . IDENTIFIER

    IDENTIFIER      shift and go to state 92


state 69

    (100) QualifiedIdent -> IDENTIFIER . DOT TypeName

    DOT             shift and go to state 93


state 70

    (20) ArrayType -> LSQUARE . ArrayLength RSQUARE ElementType
    (21) ArrayLength -> . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    ArrayLength                    shift and go to state 94
    Expression                     shift and go to state 95
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 71

    (23) StructType -> CreateFuncScope . STRUCT LCURL FieldDeclRep RCURL EndScope

    STRUCT          shift and go to state 117


state 72

    (27) PointerType -> STAR . BaseType
    (28) BaseType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    BaseType                       shift and go to state 118
    Type                           shift and go to state 119
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 73

    (53) IdentifierList -> IDENTIFIER IdentifierRep .
    (54) IdentifierRep -> IdentifierRep . COMMA IDENTIFIER

    LPAREN          reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    INT_T           reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    FLOAT_T         reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    UINT_T          reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMPLEX_T       reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    RUNE_T          reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    BOOL_T          reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRING_T        reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    TYPE            reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    IDENTIFIER      reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    LSQUARE         reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STAR            reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    STRUCT          reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    ASSIGN          reduce using rule 53 (IdentifierList -> IDENTIFIER IdentifierRep .)
    COMMA           shift and go to state 120


state 74

    (55) IdentifierRep -> epsilon .

    COMMA           reduce using rule 55 (IdentifierRep -> epsilon .)
    LPAREN          reduce using rule 55 (IdentifierRep -> epsilon .)
    INT_T           reduce using rule 55 (IdentifierRep -> epsilon .)
    FLOAT_T         reduce using rule 55 (IdentifierRep -> epsilon .)
    UINT_T          reduce using rule 55 (IdentifierRep -> epsilon .)
    COMPLEX_T       reduce using rule 55 (IdentifierRep -> epsilon .)
    RUNE_T          reduce using rule 55 (IdentifierRep -> epsilon .)
    BOOL_T          reduce using rule 55 (IdentifierRep -> epsilon .)
    STRING_T        reduce using rule 55 (IdentifierRep -> epsilon .)
    TYPE            reduce using rule 55 (IdentifierRep -> epsilon .)
    IDENTIFIER      reduce using rule 55 (IdentifierRep -> epsilon .)
    LSQUARE         reduce using rule 55 (IdentifierRep -> epsilon .)
    STAR            reduce using rule 55 (IdentifierRep -> epsilon .)
    STRUCT          reduce using rule 55 (IdentifierRep -> epsilon .)
    ASSIGN          reduce using rule 55 (IdentifierRep -> epsilon .)


state 75

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep . RPAREN
    (61) TypeSpecRep -> TypeSpecRep . TypeSpec SEMICOLON
    (63) TypeSpec -> . TypeDef
    (64) TypeDef -> . IDENTIFIER Type

    RPAREN          shift and go to state 121
    IDENTIFIER      shift and go to state 41

    TypeSpec                       shift and go to state 122
    TypeDef                        shift and go to state 40

state 76

    (62) TypeSpecRep -> epsilon .

    RPAREN          reduce using rule 62 (TypeSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 62 (TypeSpecRep -> epsilon .)


state 77

    (64) TypeDef -> IDENTIFIER Type .

    SEMICOLON       reduce using rule 64 (TypeDef -> IDENTIFIER Type .)


state 78

    (66) VarDecl -> VAR LPAREN VarSpecRep . RPAREN
    (67) VarSpecRep -> VarSpecRep . VarSpec SEMICOLON
    (69) VarSpec -> . IdentifierList Type ExpressionListOpt
    (70) VarSpec -> . IdentifierList ASSIGN ExpressionList
    (53) IdentifierList -> . IDENTIFIER IdentifierRep

    RPAREN          shift and go to state 123
    IDENTIFIER      shift and go to state 37

    VarSpec                        shift and go to state 124
    IdentifierList                 shift and go to state 44

state 79

    (68) VarSpecRep -> epsilon .

    RPAREN          reduce using rule 68 (VarSpecRep -> epsilon .)
    IDENTIFIER      reduce using rule 68 (VarSpecRep -> epsilon .)


state 80

    (69) VarSpec -> IdentifierList Type . ExpressionListOpt
    (71) ExpressionListOpt -> . ASSIGN ExpressionList
    (72) ExpressionListOpt -> . epsilon
    (226) epsilon -> .

    ASSIGN          shift and go to state 126
    SEMICOLON       reduce using rule 226 (epsilon -> .)

    ExpressionListOpt              shift and go to state 125
    epsilon                        shift and go to state 127

state 81

    (70) VarSpec -> IdentifierList ASSIGN . ExpressionList
    (56) ExpressionList -> . Expression ExpressionRep
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    ExpressionList                 shift and go to state 128
    Expression                     shift and go to state 129
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 82

    (218) ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .

    SEMICOLON       reduce using rule 218 (ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN .)


state 83

    (219) ImportSpecRep -> ImportSpecRep ImportSpec . SEMICOLON

    SEMICOLON       shift and go to state 130


state 84

    (74) FunctionDecl -> FUNC FunctionName CreateScope Function . EndScope
    (78) EndScope -> .

    SEMICOLON       reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 131

state 85

    (75) FunctionDecl -> FUNC FunctionName CreateScope Signature . EndScope
    (80) Function -> Signature . funMark FunctionBody
    (78) EndScope -> .
    (81) funMark -> .

    SEMICOLON       reduce using rule 78 (EndScope -> .)
    LCURL           reduce using rule 81 (funMark -> .)

    EndScope                       shift and go to state 132
    funMark                        shift and go to state 133

state 86

    (29) Signature -> Parameters . TypeOpt
    (18) TypeOpt -> . Type
    (19) TypeOpt -> . epsilon
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (226) epsilon -> .
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 55
    LCURL           reduce using rule 226 (epsilon -> .)
    SEMICOLON       reduce using rule 226 (epsilon -> .)
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    TypeOpt                        shift and go to state 134
    Type                           shift and go to state 135
    epsilon                        shift and go to state 136
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 87

    (30) Parameters -> LPAREN . ParameterListOpt RPAREN
    (31) ParameterListOpt -> . ParametersList
    (32) ParameterListOpt -> . epsilon
    (33) ParametersList -> . ParameterDecl
    (34) ParametersList -> . ParameterDeclCommaRep
    (226) epsilon -> .
    (37) ParameterDecl -> . IdentifierList Type
    (38) ParameterDecl -> . Type
    (35) ParameterDeclCommaRep -> . ParameterDeclCommaRep COMMA ParameterDecl
    (36) ParameterDeclCommaRep -> . ParameterDecl COMMA ParameterDecl
    (53) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    RPAREN          reduce using rule 226 (epsilon -> .)
    IDENTIFIER      shift and go to state 144
    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    ParameterListOpt               shift and go to state 137
    ParametersList                 shift and go to state 138
    epsilon                        shift and go to state 139
    ParameterDecl                  shift and go to state 140
    ParameterDeclCommaRep          shift and go to state 141
    IdentifierList                 shift and go to state 142
    Type                           shift and go to state 143
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 88

    (49) ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .

    SEMICOLON       reduce using rule 49 (ConstDecl -> CONST LPAREN ConstSpecRep RPAREN .)


state 89

    (50) ConstSpecRep -> ConstSpecRep ConstSpec . SEMICOLON

    SEMICOLON       shift and go to state 145


state 90

    (52) ConstSpec -> IdentifierList Type ASSIGN . ExpressionList
    (56) ExpressionList -> . Expression ExpressionRep
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    ExpressionList                 shift and go to state 146
    Expression                     shift and go to state 129
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 91

    (4) Type -> LPAREN Type . RPAREN

    RPAREN          shift and go to state 147


state 92

    (14) TypeToken -> TYPE IDENTIFIER .

    ASSIGN          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    SEMICOLON       reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    RPAREN          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    LCURL           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    COMMA           reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)
    LPAREN          reduce using rule 14 (TypeToken -> TYPE IDENTIFIER .)


state 93

    (100) QualifiedIdent -> IDENTIFIER DOT . TypeName
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName

    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69

    TypeName                       shift and go to state 148
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57

state 94

    (20) ArrayType -> LSQUARE ArrayLength . RSQUARE ElementType

    RSQUARE         shift and go to state 149


state 95

    (21) ArrayLength -> Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    RSQUARE         reduce using rule 21 (ArrayLength -> Expression .)
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 96

    (114) Expression -> UnaryExpr .

    LOGICAL_OR      reduce using rule 114 (Expression -> UnaryExpr .)
    LOGICAL_AND     reduce using rule 114 (Expression -> UnaryExpr .)
    EQUALS          reduce using rule 114 (Expression -> UnaryExpr .)
    NOT_ASSIGN      reduce using rule 114 (Expression -> UnaryExpr .)
    LESSER          reduce using rule 114 (Expression -> UnaryExpr .)
    GREATER         reduce using rule 114 (Expression -> UnaryExpr .)
    LESS_EQUALS     reduce using rule 114 (Expression -> UnaryExpr .)
    MORE_EQUALS     reduce using rule 114 (Expression -> UnaryExpr .)
    OR              reduce using rule 114 (Expression -> UnaryExpr .)
    XOR             reduce using rule 114 (Expression -> UnaryExpr .)
    DIVIDE          reduce using rule 114 (Expression -> UnaryExpr .)
    MOD             reduce using rule 114 (Expression -> UnaryExpr .)
    LSHIFT          reduce using rule 114 (Expression -> UnaryExpr .)
    RSHIFT          reduce using rule 114 (Expression -> UnaryExpr .)
    PLUS            reduce using rule 114 (Expression -> UnaryExpr .)
    MINUS           reduce using rule 114 (Expression -> UnaryExpr .)
    STAR            reduce using rule 114 (Expression -> UnaryExpr .)
    AND             reduce using rule 114 (Expression -> UnaryExpr .)
    RSQUARE         reduce using rule 114 (Expression -> UnaryExpr .)
    COMMA           reduce using rule 114 (Expression -> UnaryExpr .)
    SEMICOLON       reduce using rule 114 (Expression -> UnaryExpr .)
    RPAREN          reduce using rule 114 (Expression -> UnaryExpr .)
    COLON           reduce using rule 114 (Expression -> UnaryExpr .)
    LCURL           reduce using rule 114 (Expression -> UnaryExpr .)
    PLUS_ASSIGN     reduce using rule 114 (Expression -> UnaryExpr .)
    MINUS_ASSIGN    reduce using rule 114 (Expression -> UnaryExpr .)
    STAR_ASSIGN     reduce using rule 114 (Expression -> UnaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 114 (Expression -> UnaryExpr .)
    MOD_ASSIGN      reduce using rule 114 (Expression -> UnaryExpr .)
    AND_ASSIGN      reduce using rule 114 (Expression -> UnaryExpr .)
    OR_ASSIGN       reduce using rule 114 (Expression -> UnaryExpr .)
    XOR_ASSIGN      reduce using rule 114 (Expression -> UnaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 114 (Expression -> UnaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 114 (Expression -> UnaryExpr .)
    ASSIGN          reduce using rule 114 (Expression -> UnaryExpr .)
    INCR            reduce using rule 114 (Expression -> UnaryExpr .)
    DECR            reduce using rule 114 (Expression -> UnaryExpr .)


state 97

    (138) UnaryOp -> PLUS .

    NOT             reduce using rule 138 (UnaryOp -> PLUS .)
    PLUS            reduce using rule 138 (UnaryOp -> PLUS .)
    MINUS           reduce using rule 138 (UnaryOp -> PLUS .)
    STAR            reduce using rule 138 (UnaryOp -> PLUS .)
    AND             reduce using rule 138 (UnaryOp -> PLUS .)
    LPAREN          reduce using rule 138 (UnaryOp -> PLUS .)
    TYPECAST        reduce using rule 138 (UnaryOp -> PLUS .)
    IDENTIFIER      reduce using rule 138 (UnaryOp -> PLUS .)
    INTEGER         reduce using rule 138 (UnaryOp -> PLUS .)
    OCTAL           reduce using rule 138 (UnaryOp -> PLUS .)
    HEX             reduce using rule 138 (UnaryOp -> PLUS .)
    FLOAT           reduce using rule 138 (UnaryOp -> PLUS .)
    IMAGINARY       reduce using rule 138 (UnaryOp -> PLUS .)
    RUNE            reduce using rule 138 (UnaryOp -> PLUS .)
    STRING          reduce using rule 138 (UnaryOp -> PLUS .)


state 98

    (139) UnaryOp -> MINUS .

    NOT             reduce using rule 139 (UnaryOp -> MINUS .)
    PLUS            reduce using rule 139 (UnaryOp -> MINUS .)
    MINUS           reduce using rule 139 (UnaryOp -> MINUS .)
    STAR            reduce using rule 139 (UnaryOp -> MINUS .)
    AND             reduce using rule 139 (UnaryOp -> MINUS .)
    LPAREN          reduce using rule 139 (UnaryOp -> MINUS .)
    TYPECAST        reduce using rule 139 (UnaryOp -> MINUS .)
    IDENTIFIER      reduce using rule 139 (UnaryOp -> MINUS .)
    INTEGER         reduce using rule 139 (UnaryOp -> MINUS .)
    OCTAL           reduce using rule 139 (UnaryOp -> MINUS .)
    HEX             reduce using rule 139 (UnaryOp -> MINUS .)
    FLOAT           reduce using rule 139 (UnaryOp -> MINUS .)
    IMAGINARY       reduce using rule 139 (UnaryOp -> MINUS .)
    RUNE            reduce using rule 139 (UnaryOp -> MINUS .)
    STRING          reduce using rule 139 (UnaryOp -> MINUS .)


state 99

    (140) UnaryOp -> STAR .

    NOT             reduce using rule 140 (UnaryOp -> STAR .)
    PLUS            reduce using rule 140 (UnaryOp -> STAR .)
    MINUS           reduce using rule 140 (UnaryOp -> STAR .)
    STAR            reduce using rule 140 (UnaryOp -> STAR .)
    AND             reduce using rule 140 (UnaryOp -> STAR .)
    LPAREN          reduce using rule 140 (UnaryOp -> STAR .)
    TYPECAST        reduce using rule 140 (UnaryOp -> STAR .)
    IDENTIFIER      reduce using rule 140 (UnaryOp -> STAR .)
    INTEGER         reduce using rule 140 (UnaryOp -> STAR .)
    OCTAL           reduce using rule 140 (UnaryOp -> STAR .)
    HEX             reduce using rule 140 (UnaryOp -> STAR .)
    FLOAT           reduce using rule 140 (UnaryOp -> STAR .)
    IMAGINARY       reduce using rule 140 (UnaryOp -> STAR .)
    RUNE            reduce using rule 140 (UnaryOp -> STAR .)
    STRING          reduce using rule 140 (UnaryOp -> STAR .)


state 100

    (141) UnaryOp -> AND .

    NOT             reduce using rule 141 (UnaryOp -> AND .)
    PLUS            reduce using rule 141 (UnaryOp -> AND .)
    MINUS           reduce using rule 141 (UnaryOp -> AND .)
    STAR            reduce using rule 141 (UnaryOp -> AND .)
    AND             reduce using rule 141 (UnaryOp -> AND .)
    LPAREN          reduce using rule 141 (UnaryOp -> AND .)
    TYPECAST        reduce using rule 141 (UnaryOp -> AND .)
    IDENTIFIER      reduce using rule 141 (UnaryOp -> AND .)
    INTEGER         reduce using rule 141 (UnaryOp -> AND .)
    OCTAL           reduce using rule 141 (UnaryOp -> AND .)
    HEX             reduce using rule 141 (UnaryOp -> AND .)
    FLOAT           reduce using rule 141 (UnaryOp -> AND .)
    IMAGINARY       reduce using rule 141 (UnaryOp -> AND .)
    RUNE            reduce using rule 141 (UnaryOp -> AND .)
    STRING          reduce using rule 141 (UnaryOp -> AND .)


state 101

    (135) UnaryExpr -> PrimaryExpr .
    (102) PrimaryExpr -> PrimaryExpr . Selector
    (104) PrimaryExpr -> PrimaryExpr . LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> PrimaryExpr . Slice
    (106) PrimaryExpr -> PrimaryExpr . TypeAssertion
    (107) PrimaryExpr -> PrimaryExpr . LPAREN ExpressionListTypeOpt RPAREN
    (108) Selector -> . DOT IDENTIFIER
    (109) Slice -> . LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE
    (110) Slice -> . LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE
    (111) TypeAssertion -> . DOT LPAREN Type RPAREN

    LOGICAL_OR      reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LOGICAL_AND     reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    EQUALS          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    NOT_ASSIGN      reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LESSER          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    GREATER         reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LESS_EQUALS     reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    MORE_EQUALS     reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    OR              reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    XOR             reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    DIVIDE          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    MOD             reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LSHIFT          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    RSHIFT          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    PLUS            reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    MINUS           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    STAR            reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    AND             reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    RSQUARE         reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    COMMA           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    SEMICOLON       reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    RPAREN          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    COLON           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LCURL           reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    PLUS_ASSIGN     reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    MINUS_ASSIGN    reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    STAR_ASSIGN     reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    MOD_ASSIGN      reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    AND_ASSIGN      reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    OR_ASSIGN       reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    XOR_ASSIGN      reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    ASSIGN          reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    INCR            reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    DECR            reduce using rule 135 (UnaryExpr -> PrimaryExpr .)
    LSQUARE         shift and go to state 169
    LPAREN          shift and go to state 172
    DOT             shift and go to state 173

    Selector                       shift and go to state 168
    Slice                          shift and go to state 170
    TypeAssertion                  shift and go to state 171

state 102

    (136) UnaryExpr -> UnaryOp . UnaryExpr
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    UnaryOp                        shift and go to state 102
    UnaryExpr                      shift and go to state 174
    PrimaryExpr                    shift and go to state 101
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 103

    (137) UnaryExpr -> NOT . UnaryExpr
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    UnaryExpr                      shift and go to state 175
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 104

    (101) PrimaryExpr -> Operand .

    LSQUARE         reduce using rule 101 (PrimaryExpr -> Operand .)
    LPAREN          reduce using rule 101 (PrimaryExpr -> Operand .)
    DOT             reduce using rule 101 (PrimaryExpr -> Operand .)
    LOGICAL_OR      reduce using rule 101 (PrimaryExpr -> Operand .)
    LOGICAL_AND     reduce using rule 101 (PrimaryExpr -> Operand .)
    EQUALS          reduce using rule 101 (PrimaryExpr -> Operand .)
    NOT_ASSIGN      reduce using rule 101 (PrimaryExpr -> Operand .)
    LESSER          reduce using rule 101 (PrimaryExpr -> Operand .)
    GREATER         reduce using rule 101 (PrimaryExpr -> Operand .)
    LESS_EQUALS     reduce using rule 101 (PrimaryExpr -> Operand .)
    MORE_EQUALS     reduce using rule 101 (PrimaryExpr -> Operand .)
    OR              reduce using rule 101 (PrimaryExpr -> Operand .)
    XOR             reduce using rule 101 (PrimaryExpr -> Operand .)
    DIVIDE          reduce using rule 101 (PrimaryExpr -> Operand .)
    MOD             reduce using rule 101 (PrimaryExpr -> Operand .)
    LSHIFT          reduce using rule 101 (PrimaryExpr -> Operand .)
    RSHIFT          reduce using rule 101 (PrimaryExpr -> Operand .)
    PLUS            reduce using rule 101 (PrimaryExpr -> Operand .)
    MINUS           reduce using rule 101 (PrimaryExpr -> Operand .)
    STAR            reduce using rule 101 (PrimaryExpr -> Operand .)
    AND             reduce using rule 101 (PrimaryExpr -> Operand .)
    RSQUARE         reduce using rule 101 (PrimaryExpr -> Operand .)
    COMMA           reduce using rule 101 (PrimaryExpr -> Operand .)
    SEMICOLON       reduce using rule 101 (PrimaryExpr -> Operand .)
    RPAREN          reduce using rule 101 (PrimaryExpr -> Operand .)
    COLON           reduce using rule 101 (PrimaryExpr -> Operand .)
    LCURL           reduce using rule 101 (PrimaryExpr -> Operand .)
    PLUS_ASSIGN     reduce using rule 101 (PrimaryExpr -> Operand .)
    MINUS_ASSIGN    reduce using rule 101 (PrimaryExpr -> Operand .)
    STAR_ASSIGN     reduce using rule 101 (PrimaryExpr -> Operand .)
    DIVIDE_ASSIGN   reduce using rule 101 (PrimaryExpr -> Operand .)
    MOD_ASSIGN      reduce using rule 101 (PrimaryExpr -> Operand .)
    AND_ASSIGN      reduce using rule 101 (PrimaryExpr -> Operand .)
    OR_ASSIGN       reduce using rule 101 (PrimaryExpr -> Operand .)
    XOR_ASSIGN      reduce using rule 101 (PrimaryExpr -> Operand .)
    LSHIFT_ASSIGN   reduce using rule 101 (PrimaryExpr -> Operand .)
    RSHIFT_ASSIGN   reduce using rule 101 (PrimaryExpr -> Operand .)
    ASSIGN          reduce using rule 101 (PrimaryExpr -> Operand .)
    INCR            reduce using rule 101 (PrimaryExpr -> Operand .)
    DECR            reduce using rule 101 (PrimaryExpr -> Operand .)


state 105

    (103) PrimaryExpr -> Conversion .

    LSQUARE         reduce using rule 103 (PrimaryExpr -> Conversion .)
    LPAREN          reduce using rule 103 (PrimaryExpr -> Conversion .)
    DOT             reduce using rule 103 (PrimaryExpr -> Conversion .)
    LOGICAL_OR      reduce using rule 103 (PrimaryExpr -> Conversion .)
    LOGICAL_AND     reduce using rule 103 (PrimaryExpr -> Conversion .)
    EQUALS          reduce using rule 103 (PrimaryExpr -> Conversion .)
    NOT_ASSIGN      reduce using rule 103 (PrimaryExpr -> Conversion .)
    LESSER          reduce using rule 103 (PrimaryExpr -> Conversion .)
    GREATER         reduce using rule 103 (PrimaryExpr -> Conversion .)
    LESS_EQUALS     reduce using rule 103 (PrimaryExpr -> Conversion .)
    MORE_EQUALS     reduce using rule 103 (PrimaryExpr -> Conversion .)
    OR              reduce using rule 103 (PrimaryExpr -> Conversion .)
    XOR             reduce using rule 103 (PrimaryExpr -> Conversion .)
    DIVIDE          reduce using rule 103 (PrimaryExpr -> Conversion .)
    MOD             reduce using rule 103 (PrimaryExpr -> Conversion .)
    LSHIFT          reduce using rule 103 (PrimaryExpr -> Conversion .)
    RSHIFT          reduce using rule 103 (PrimaryExpr -> Conversion .)
    PLUS            reduce using rule 103 (PrimaryExpr -> Conversion .)
    MINUS           reduce using rule 103 (PrimaryExpr -> Conversion .)
    STAR            reduce using rule 103 (PrimaryExpr -> Conversion .)
    AND             reduce using rule 103 (PrimaryExpr -> Conversion .)
    RSQUARE         reduce using rule 103 (PrimaryExpr -> Conversion .)
    COMMA           reduce using rule 103 (PrimaryExpr -> Conversion .)
    SEMICOLON       reduce using rule 103 (PrimaryExpr -> Conversion .)
    RPAREN          reduce using rule 103 (PrimaryExpr -> Conversion .)
    COLON           reduce using rule 103 (PrimaryExpr -> Conversion .)
    LCURL           reduce using rule 103 (PrimaryExpr -> Conversion .)
    PLUS_ASSIGN     reduce using rule 103 (PrimaryExpr -> Conversion .)
    MINUS_ASSIGN    reduce using rule 103 (PrimaryExpr -> Conversion .)
    STAR_ASSIGN     reduce using rule 103 (PrimaryExpr -> Conversion .)
    DIVIDE_ASSIGN   reduce using rule 103 (PrimaryExpr -> Conversion .)
    MOD_ASSIGN      reduce using rule 103 (PrimaryExpr -> Conversion .)
    AND_ASSIGN      reduce using rule 103 (PrimaryExpr -> Conversion .)
    OR_ASSIGN       reduce using rule 103 (PrimaryExpr -> Conversion .)
    XOR_ASSIGN      reduce using rule 103 (PrimaryExpr -> Conversion .)
    LSHIFT_ASSIGN   reduce using rule 103 (PrimaryExpr -> Conversion .)
    RSHIFT_ASSIGN   reduce using rule 103 (PrimaryExpr -> Conversion .)
    ASSIGN          reduce using rule 103 (PrimaryExpr -> Conversion .)
    INCR            reduce using rule 103 (PrimaryExpr -> Conversion .)
    DECR            reduce using rule 103 (PrimaryExpr -> Conversion .)


state 106

    (85) Operand -> LPAREN . Expression RPAREN
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 176
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 107

    (83) Operand -> Literal .

    LSQUARE         reduce using rule 83 (Operand -> Literal .)
    LPAREN          reduce using rule 83 (Operand -> Literal .)
    DOT             reduce using rule 83 (Operand -> Literal .)
    LOGICAL_OR      reduce using rule 83 (Operand -> Literal .)
    LOGICAL_AND     reduce using rule 83 (Operand -> Literal .)
    EQUALS          reduce using rule 83 (Operand -> Literal .)
    NOT_ASSIGN      reduce using rule 83 (Operand -> Literal .)
    LESSER          reduce using rule 83 (Operand -> Literal .)
    GREATER         reduce using rule 83 (Operand -> Literal .)
    LESS_EQUALS     reduce using rule 83 (Operand -> Literal .)
    MORE_EQUALS     reduce using rule 83 (Operand -> Literal .)
    OR              reduce using rule 83 (Operand -> Literal .)
    XOR             reduce using rule 83 (Operand -> Literal .)
    DIVIDE          reduce using rule 83 (Operand -> Literal .)
    MOD             reduce using rule 83 (Operand -> Literal .)
    LSHIFT          reduce using rule 83 (Operand -> Literal .)
    RSHIFT          reduce using rule 83 (Operand -> Literal .)
    PLUS            reduce using rule 83 (Operand -> Literal .)
    MINUS           reduce using rule 83 (Operand -> Literal .)
    STAR            reduce using rule 83 (Operand -> Literal .)
    AND             reduce using rule 83 (Operand -> Literal .)
    RSQUARE         reduce using rule 83 (Operand -> Literal .)
    COMMA           reduce using rule 83 (Operand -> Literal .)
    SEMICOLON       reduce using rule 83 (Operand -> Literal .)
    RPAREN          reduce using rule 83 (Operand -> Literal .)
    COLON           reduce using rule 83 (Operand -> Literal .)
    LCURL           reduce using rule 83 (Operand -> Literal .)
    PLUS_ASSIGN     reduce using rule 83 (Operand -> Literal .)
    MINUS_ASSIGN    reduce using rule 83 (Operand -> Literal .)
    STAR_ASSIGN     reduce using rule 83 (Operand -> Literal .)
    DIVIDE_ASSIGN   reduce using rule 83 (Operand -> Literal .)
    MOD_ASSIGN      reduce using rule 83 (Operand -> Literal .)
    AND_ASSIGN      reduce using rule 83 (Operand -> Literal .)
    OR_ASSIGN       reduce using rule 83 (Operand -> Literal .)
    XOR_ASSIGN      reduce using rule 83 (Operand -> Literal .)
    LSHIFT_ASSIGN   reduce using rule 83 (Operand -> Literal .)
    RSHIFT_ASSIGN   reduce using rule 83 (Operand -> Literal .)
    ASSIGN          reduce using rule 83 (Operand -> Literal .)
    INCR            reduce using rule 83 (Operand -> Literal .)
    DECR            reduce using rule 83 (Operand -> Literal .)


state 108

    (84) Operand -> OperandName .

    LSQUARE         reduce using rule 84 (Operand -> OperandName .)
    LPAREN          reduce using rule 84 (Operand -> OperandName .)
    DOT             reduce using rule 84 (Operand -> OperandName .)
    LOGICAL_OR      reduce using rule 84 (Operand -> OperandName .)
    LOGICAL_AND     reduce using rule 84 (Operand -> OperandName .)
    EQUALS          reduce using rule 84 (Operand -> OperandName .)
    NOT_ASSIGN      reduce using rule 84 (Operand -> OperandName .)
    LESSER          reduce using rule 84 (Operand -> OperandName .)
    GREATER         reduce using rule 84 (Operand -> OperandName .)
    LESS_EQUALS     reduce using rule 84 (Operand -> OperandName .)
    MORE_EQUALS     reduce using rule 84 (Operand -> OperandName .)
    OR              reduce using rule 84 (Operand -> OperandName .)
    XOR             reduce using rule 84 (Operand -> OperandName .)
    DIVIDE          reduce using rule 84 (Operand -> OperandName .)
    MOD             reduce using rule 84 (Operand -> OperandName .)
    LSHIFT          reduce using rule 84 (Operand -> OperandName .)
    RSHIFT          reduce using rule 84 (Operand -> OperandName .)
    PLUS            reduce using rule 84 (Operand -> OperandName .)
    MINUS           reduce using rule 84 (Operand -> OperandName .)
    STAR            reduce using rule 84 (Operand -> OperandName .)
    AND             reduce using rule 84 (Operand -> OperandName .)
    RSQUARE         reduce using rule 84 (Operand -> OperandName .)
    COMMA           reduce using rule 84 (Operand -> OperandName .)
    SEMICOLON       reduce using rule 84 (Operand -> OperandName .)
    RPAREN          reduce using rule 84 (Operand -> OperandName .)
    COLON           reduce using rule 84 (Operand -> OperandName .)
    LCURL           reduce using rule 84 (Operand -> OperandName .)
    PLUS_ASSIGN     reduce using rule 84 (Operand -> OperandName .)
    MINUS_ASSIGN    reduce using rule 84 (Operand -> OperandName .)
    STAR_ASSIGN     reduce using rule 84 (Operand -> OperandName .)
    DIVIDE_ASSIGN   reduce using rule 84 (Operand -> OperandName .)
    MOD_ASSIGN      reduce using rule 84 (Operand -> OperandName .)
    AND_ASSIGN      reduce using rule 84 (Operand -> OperandName .)
    OR_ASSIGN       reduce using rule 84 (Operand -> OperandName .)
    XOR_ASSIGN      reduce using rule 84 (Operand -> OperandName .)
    LSHIFT_ASSIGN   reduce using rule 84 (Operand -> OperandName .)
    RSHIFT_ASSIGN   reduce using rule 84 (Operand -> OperandName .)
    ASSIGN          reduce using rule 84 (Operand -> OperandName .)
    INCR            reduce using rule 84 (Operand -> OperandName .)
    DECR            reduce using rule 84 (Operand -> OperandName .)


state 109

    (142) Conversion -> TYPECAST . Type LPAREN Expression RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    Type                           shift and go to state 177
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 110

    (86) Literal -> BasicLit .

    LSQUARE         reduce using rule 86 (Literal -> BasicLit .)
    LPAREN          reduce using rule 86 (Literal -> BasicLit .)
    DOT             reduce using rule 86 (Literal -> BasicLit .)
    LOGICAL_OR      reduce using rule 86 (Literal -> BasicLit .)
    LOGICAL_AND     reduce using rule 86 (Literal -> BasicLit .)
    EQUALS          reduce using rule 86 (Literal -> BasicLit .)
    NOT_ASSIGN      reduce using rule 86 (Literal -> BasicLit .)
    LESSER          reduce using rule 86 (Literal -> BasicLit .)
    GREATER         reduce using rule 86 (Literal -> BasicLit .)
    LESS_EQUALS     reduce using rule 86 (Literal -> BasicLit .)
    MORE_EQUALS     reduce using rule 86 (Literal -> BasicLit .)
    OR              reduce using rule 86 (Literal -> BasicLit .)
    XOR             reduce using rule 86 (Literal -> BasicLit .)
    DIVIDE          reduce using rule 86 (Literal -> BasicLit .)
    MOD             reduce using rule 86 (Literal -> BasicLit .)
    LSHIFT          reduce using rule 86 (Literal -> BasicLit .)
    RSHIFT          reduce using rule 86 (Literal -> BasicLit .)
    PLUS            reduce using rule 86 (Literal -> BasicLit .)
    MINUS           reduce using rule 86 (Literal -> BasicLit .)
    STAR            reduce using rule 86 (Literal -> BasicLit .)
    AND             reduce using rule 86 (Literal -> BasicLit .)
    RSQUARE         reduce using rule 86 (Literal -> BasicLit .)
    COMMA           reduce using rule 86 (Literal -> BasicLit .)
    SEMICOLON       reduce using rule 86 (Literal -> BasicLit .)
    RPAREN          reduce using rule 86 (Literal -> BasicLit .)
    COLON           reduce using rule 86 (Literal -> BasicLit .)
    LCURL           reduce using rule 86 (Literal -> BasicLit .)
    PLUS_ASSIGN     reduce using rule 86 (Literal -> BasicLit .)
    MINUS_ASSIGN    reduce using rule 86 (Literal -> BasicLit .)
    STAR_ASSIGN     reduce using rule 86 (Literal -> BasicLit .)
    DIVIDE_ASSIGN   reduce using rule 86 (Literal -> BasicLit .)
    MOD_ASSIGN      reduce using rule 86 (Literal -> BasicLit .)
    AND_ASSIGN      reduce using rule 86 (Literal -> BasicLit .)
    OR_ASSIGN       reduce using rule 86 (Literal -> BasicLit .)
    XOR_ASSIGN      reduce using rule 86 (Literal -> BasicLit .)
    LSHIFT_ASSIGN   reduce using rule 86 (Literal -> BasicLit .)
    RSHIFT_ASSIGN   reduce using rule 86 (Literal -> BasicLit .)
    ASSIGN          reduce using rule 86 (Literal -> BasicLit .)
    INCR            reduce using rule 86 (Literal -> BasicLit .)
    DECR            reduce using rule 86 (Literal -> BasicLit .)


state 111

    (99) OperandName -> IDENTIFIER .

    LSQUARE         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    DOT             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 99 (OperandName -> IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESSER          reduce using rule 99 (OperandName -> IDENTIFIER .)
    GREATER         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MORE_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSQUARE         reduce using rule 99 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 99 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 99 (OperandName -> IDENTIFIER .)
    RPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    COLON           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LCURL           reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    ASSIGN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    INCR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    DECR            reduce using rule 99 (OperandName -> IDENTIFIER .)


state 112

    (87) BasicLit -> I . INTEGER
    (88) BasicLit -> I . OCTAL
    (89) BasicLit -> I . HEX

    INTEGER         shift and go to state 178
    OCTAL           shift and go to state 179
    HEX             shift and go to state 180


state 113

    (90) BasicLit -> F . FLOAT

    FLOAT           shift and go to state 181


state 114

    (91) BasicLit -> C . IMAGINARY

    IMAGINARY       shift and go to state 182


state 115

    (92) BasicLit -> R . RUNE

    RUNE            shift and go to state 183


state 116

    (93) BasicLit -> S . STRING

    STRING          shift and go to state 184


state 117

    (23) StructType -> CreateFuncScope STRUCT . LCURL FieldDeclRep RCURL EndScope

    LCURL           shift and go to state 185


state 118

    (27) PointerType -> STAR BaseType .

    ASSIGN          reduce using rule 27 (PointerType -> STAR BaseType .)
    SEMICOLON       reduce using rule 27 (PointerType -> STAR BaseType .)
    RPAREN          reduce using rule 27 (PointerType -> STAR BaseType .)
    LCURL           reduce using rule 27 (PointerType -> STAR BaseType .)
    COMMA           reduce using rule 27 (PointerType -> STAR BaseType .)
    LPAREN          reduce using rule 27 (PointerType -> STAR BaseType .)


state 119

    (28) BaseType -> Type .

    ASSIGN          reduce using rule 28 (BaseType -> Type .)
    SEMICOLON       reduce using rule 28 (BaseType -> Type .)
    RPAREN          reduce using rule 28 (BaseType -> Type .)
    LCURL           reduce using rule 28 (BaseType -> Type .)
    COMMA           reduce using rule 28 (BaseType -> Type .)
    LPAREN          reduce using rule 28 (BaseType -> Type .)


state 120

    (54) IdentifierRep -> IdentifierRep COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 186


state 121

    (60) TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .

    SEMICOLON       reduce using rule 60 (TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN .)


state 122

    (61) TypeSpecRep -> TypeSpecRep TypeSpec . SEMICOLON

    SEMICOLON       shift and go to state 187


state 123

    (66) VarDecl -> VAR LPAREN VarSpecRep RPAREN .

    SEMICOLON       reduce using rule 66 (VarDecl -> VAR LPAREN VarSpecRep RPAREN .)


state 124

    (67) VarSpecRep -> VarSpecRep VarSpec . SEMICOLON

    SEMICOLON       shift and go to state 188


state 125

    (69) VarSpec -> IdentifierList Type ExpressionListOpt .

    SEMICOLON       reduce using rule 69 (VarSpec -> IdentifierList Type ExpressionListOpt .)


state 126

    (71) ExpressionListOpt -> ASSIGN . ExpressionList
    (56) ExpressionList -> . Expression ExpressionRep
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    ExpressionList                 shift and go to state 189
    Expression                     shift and go to state 129
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 127

    (72) ExpressionListOpt -> epsilon .

    SEMICOLON       reduce using rule 72 (ExpressionListOpt -> epsilon .)


state 128

    (70) VarSpec -> IdentifierList ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 70 (VarSpec -> IdentifierList ASSIGN ExpressionList .)


state 129

    (56) ExpressionList -> Expression . ExpressionRep
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression
    (57) ExpressionRep -> . ExpressionRep COMMA Expression
    (58) ExpressionRep -> . epsilon
    (226) epsilon -> .

    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167
    COMMA           reduce using rule 226 (epsilon -> .)
    SEMICOLON       reduce using rule 226 (epsilon -> .)
    RPAREN          reduce using rule 226 (epsilon -> .)
    LCURL           reduce using rule 226 (epsilon -> .)

    ExpressionRep                  shift and go to state 190
    epsilon                        shift and go to state 191

state 130

    (219) ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .

    RPAREN          reduce using rule 219 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    DOT             reduce using rule 219 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 219 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)
    STRING          reduce using rule 219 (ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON .)


state 131

    (74) FunctionDecl -> FUNC FunctionName CreateScope Function EndScope .

    SEMICOLON       reduce using rule 74 (FunctionDecl -> FUNC FunctionName CreateScope Function EndScope .)


state 132

    (75) FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope .

    SEMICOLON       reduce using rule 75 (FunctionDecl -> FUNC FunctionName CreateScope Signature EndScope .)


state 133

    (80) Function -> Signature funMark . FunctionBody
    (82) FunctionBody -> . Block
    (39) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 194

    FunctionBody                   shift and go to state 192
    Block                          shift and go to state 193

state 134

    (29) Signature -> Parameters TypeOpt .

    LCURL           reduce using rule 29 (Signature -> Parameters TypeOpt .)
    SEMICOLON       reduce using rule 29 (Signature -> Parameters TypeOpt .)


state 135

    (18) TypeOpt -> Type .

    LCURL           reduce using rule 18 (TypeOpt -> Type .)
    SEMICOLON       reduce using rule 18 (TypeOpt -> Type .)


state 136

    (19) TypeOpt -> epsilon .

    LCURL           reduce using rule 19 (TypeOpt -> epsilon .)
    SEMICOLON       reduce using rule 19 (TypeOpt -> epsilon .)


state 137

    (30) Parameters -> LPAREN ParameterListOpt . RPAREN

    RPAREN          shift and go to state 195


state 138

    (31) ParameterListOpt -> ParametersList .

    RPAREN          reduce using rule 31 (ParameterListOpt -> ParametersList .)


state 139

    (32) ParameterListOpt -> epsilon .

    RPAREN          reduce using rule 32 (ParameterListOpt -> epsilon .)


state 140

    (33) ParametersList -> ParameterDecl .
    (36) ParameterDeclCommaRep -> ParameterDecl . COMMA ParameterDecl

    RPAREN          reduce using rule 33 (ParametersList -> ParameterDecl .)
    COMMA           shift and go to state 196


state 141

    (34) ParametersList -> ParameterDeclCommaRep .
    (35) ParameterDeclCommaRep -> ParameterDeclCommaRep . COMMA ParameterDecl

    RPAREN          reduce using rule 34 (ParametersList -> ParameterDeclCommaRep .)
    COMMA           shift and go to state 197


state 142

    (37) ParameterDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    Type                           shift and go to state 198
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 143

    (38) ParameterDecl -> Type .

    COMMA           reduce using rule 38 (ParameterDecl -> Type .)
    RPAREN          reduce using rule 38 (ParameterDecl -> Type .)


state 144

    (53) IdentifierList -> IDENTIFIER . IdentifierRep
    (100) QualifiedIdent -> IDENTIFIER . DOT TypeName
    (54) IdentifierRep -> . IdentifierRep COMMA IDENTIFIER
    (55) IdentifierRep -> . epsilon
    (226) epsilon -> .

    DOT             shift and go to state 93
    COMMA           reduce using rule 226 (epsilon -> .)
    LPAREN          reduce using rule 226 (epsilon -> .)
    INT_T           reduce using rule 226 (epsilon -> .)
    FLOAT_T         reduce using rule 226 (epsilon -> .)
    UINT_T          reduce using rule 226 (epsilon -> .)
    COMPLEX_T       reduce using rule 226 (epsilon -> .)
    RUNE_T          reduce using rule 226 (epsilon -> .)
    BOOL_T          reduce using rule 226 (epsilon -> .)
    STRING_T        reduce using rule 226 (epsilon -> .)
    TYPE            reduce using rule 226 (epsilon -> .)
    IDENTIFIER      reduce using rule 226 (epsilon -> .)
    LSQUARE         reduce using rule 226 (epsilon -> .)
    STAR            reduce using rule 226 (epsilon -> .)
    STRUCT          reduce using rule 226 (epsilon -> .)

    IdentifierRep                  shift and go to state 73
    epsilon                        shift and go to state 74

state 145

    (50) ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .

    RPAREN          reduce using rule 50 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 50 (ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON .)


state 146

    (52) ConstSpec -> IdentifierList Type ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 52 (ConstSpec -> IdentifierList Type ASSIGN ExpressionList .)


state 147

    (4) Type -> LPAREN Type RPAREN .

    ASSIGN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    RPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LCURL           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    COMMA           reduce using rule 4 (Type -> LPAREN Type RPAREN .)
    LPAREN          reduce using rule 4 (Type -> LPAREN Type RPAREN .)


state 148

    (100) QualifiedIdent -> IDENTIFIER DOT TypeName .

    ASSIGN          reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    SEMICOLON       reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    RPAREN          reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    LCURL           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    COMMA           reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)
    LPAREN          reduce using rule 100 (QualifiedIdent -> IDENTIFIER DOT TypeName .)


state 149

    (20) ArrayType -> LSQUARE ArrayLength RSQUARE . ElementType
    (22) ElementType -> . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    ElementType                    shift and go to state 199
    Type                           shift and go to state 200
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 150

    (115) Expression -> Expression LOGICAL_OR . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 201
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 151

    (116) Expression -> Expression LOGICAL_AND . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 202
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 152

    (117) Expression -> Expression EQUALS . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 203
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 153

    (118) Expression -> Expression NOT_ASSIGN . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 204
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 154

    (119) Expression -> Expression LESSER . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 205
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 155

    (120) Expression -> Expression GREATER . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 206
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 156

    (121) Expression -> Expression LESS_EQUALS . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 207
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 157

    (122) Expression -> Expression MORE_EQUALS . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 208
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 158

    (123) Expression -> Expression OR . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 209
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 159

    (124) Expression -> Expression XOR . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 210
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 160

    (125) Expression -> Expression DIVIDE . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 211
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 161

    (126) Expression -> Expression MOD . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 212
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 162

    (127) Expression -> Expression LSHIFT . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 213
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 163

    (128) Expression -> Expression RSHIFT . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 214
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 164

    (129) Expression -> Expression PLUS . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 215
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 165

    (130) Expression -> Expression MINUS . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 216
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 166

    (131) Expression -> Expression STAR . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 217
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 167

    (132) Expression -> Expression AND . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 218
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 168

    (102) PrimaryExpr -> PrimaryExpr Selector .

    LSQUARE         reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LPAREN          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    DOT             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LOGICAL_OR      reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LOGICAL_AND     reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    EQUALS          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    NOT_ASSIGN      reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LESSER          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    GREATER         reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LESS_EQUALS     reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    MORE_EQUALS     reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    OR              reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LSHIFT          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    RSHIFT          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    STAR            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    AND             reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    RSQUARE         reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    COMMA           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    SEMICOLON       reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    RPAREN          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    COLON           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LCURL           reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    PLUS_ASSIGN     reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    MINUS_ASSIGN    reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    STAR_ASSIGN     reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    DIVIDE_ASSIGN   reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    MOD_ASSIGN      reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    AND_ASSIGN      reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    OR_ASSIGN       reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    XOR_ASSIGN      reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    LSHIFT_ASSIGN   reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    RSHIFT_ASSIGN   reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    ASSIGN          reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    INCR            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)
    DECR            reduce using rule 102 (PrimaryExpr -> PrimaryExpr Selector .)


state 169

    (104) PrimaryExpr -> PrimaryExpr LSQUARE . Expression RSQUARE
    (109) Slice -> LSQUARE . ExpressionOpt COLON ExpressionOpt RSQUARE
    (110) Slice -> LSQUARE . ExpressionOpt COLON Expression COLON Expression RSQUARE
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (133) ExpressionOpt -> . Expression
    (134) ExpressionOpt -> . epsilon
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (226) epsilon -> .
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    COLON           reduce using rule 226 (epsilon -> .)
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    PrimaryExpr                    shift and go to state 101
    Expression                     shift and go to state 219
    ExpressionOpt                  shift and go to state 220
    UnaryExpr                      shift and go to state 96
    epsilon                        shift and go to state 221
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 170

    (105) PrimaryExpr -> PrimaryExpr Slice .

    LSQUARE         reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LPAREN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    DOT             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LOGICAL_OR      reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LOGICAL_AND     reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    EQUALS          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    NOT_ASSIGN      reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LESSER          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    GREATER         reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LESS_EQUALS     reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    MORE_EQUALS     reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    OR              reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LSHIFT          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    RSHIFT          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    STAR            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    AND             reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    RSQUARE         reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    COMMA           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    SEMICOLON       reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    RPAREN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    COLON           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LCURL           reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    PLUS_ASSIGN     reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    MINUS_ASSIGN    reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    STAR_ASSIGN     reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    DIVIDE_ASSIGN   reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    MOD_ASSIGN      reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    AND_ASSIGN      reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    OR_ASSIGN       reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    XOR_ASSIGN      reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    LSHIFT_ASSIGN   reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    RSHIFT_ASSIGN   reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    ASSIGN          reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    INCR            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)
    DECR            reduce using rule 105 (PrimaryExpr -> PrimaryExpr Slice .)


state 171

    (106) PrimaryExpr -> PrimaryExpr TypeAssertion .

    LSQUARE         reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LPAREN          reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DOT             reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOGICAL_OR      reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LOGICAL_AND     reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    EQUALS          reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    NOT_ASSIGN      reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESSER          reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    GREATER         reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LESS_EQUALS     reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MORE_EQUALS     reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR              reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR             reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDE          reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MOD             reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSHIFT          reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSHIFT          reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUS            reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUS           reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    STAR            reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND             reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSQUARE         reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COMMA           reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    SEMICOLON       reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RPAREN          reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    COLON           reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LCURL           reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    PLUS_ASSIGN     reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MINUS_ASSIGN    reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    STAR_ASSIGN     reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DIVIDE_ASSIGN   reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    MOD_ASSIGN      reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    AND_ASSIGN      reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    OR_ASSIGN       reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    XOR_ASSIGN      reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    LSHIFT_ASSIGN   reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    RSHIFT_ASSIGN   reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    ASSIGN          reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    INCR            reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)
    DECR            reduce using rule 106 (PrimaryExpr -> PrimaryExpr TypeAssertion .)


state 172

    (107) PrimaryExpr -> PrimaryExpr LPAREN . ExpressionListTypeOpt RPAREN
    (112) ExpressionListTypeOpt -> . ExpressionList
    (113) ExpressionListTypeOpt -> . epsilon
    (56) ExpressionList -> . Expression ExpressionRep
    (226) epsilon -> .
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    RPAREN          reduce using rule 226 (epsilon -> .)
    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    PrimaryExpr                    shift and go to state 101
    ExpressionListTypeOpt          shift and go to state 222
    ExpressionList                 shift and go to state 223
    epsilon                        shift and go to state 224
    Expression                     shift and go to state 129
    UnaryExpr                      shift and go to state 96
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 173

    (108) Selector -> DOT . IDENTIFIER
    (111) TypeAssertion -> DOT . LPAREN Type RPAREN

    IDENTIFIER      shift and go to state 225
    LPAREN          shift and go to state 226


state 174

    (136) UnaryExpr -> UnaryOp UnaryExpr .

    LOGICAL_OR      reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    LOGICAL_AND     reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    EQUALS          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    NOT_ASSIGN      reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESSER          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    GREATER         reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    LESS_EQUALS     reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    MORE_EQUALS     reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR              reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR             reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD             reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSHIFT          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSHIFT          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS            reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    STAR            reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND             reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSQUARE         reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    COMMA           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    SEMICOLON       reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    RPAREN          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    COLON           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    LCURL           reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    PLUS_ASSIGN     reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    MINUS_ASSIGN    reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    STAR_ASSIGN     reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    MOD_ASSIGN      reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    AND_ASSIGN      reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    OR_ASSIGN       reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    XOR_ASSIGN      reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    ASSIGN          reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    INCR            reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)
    DECR            reduce using rule 136 (UnaryExpr -> UnaryOp UnaryExpr .)


state 175

    (137) UnaryExpr -> NOT UnaryExpr .

    LOGICAL_OR      reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    LOGICAL_AND     reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    EQUALS          reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    NOT_ASSIGN      reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    LESSER          reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    GREATER         reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    LESS_EQUALS     reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    MORE_EQUALS     reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    OR              reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    XOR             reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    DIVIDE          reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    MOD             reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    LSHIFT          reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    RSHIFT          reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    PLUS            reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    MINUS           reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    STAR            reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    AND             reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    RSQUARE         reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    COMMA           reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    SEMICOLON       reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    RPAREN          reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    COLON           reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    LCURL           reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    PLUS_ASSIGN     reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    MINUS_ASSIGN    reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    STAR_ASSIGN     reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    DIVIDE_ASSIGN   reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    MOD_ASSIGN      reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    AND_ASSIGN      reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    OR_ASSIGN       reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    XOR_ASSIGN      reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    LSHIFT_ASSIGN   reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    RSHIFT_ASSIGN   reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    ASSIGN          reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    INCR            reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)
    DECR            reduce using rule 137 (UnaryExpr -> NOT UnaryExpr .)


state 176

    (85) Operand -> LPAREN Expression . RPAREN
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    RPAREN          shift and go to state 227
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 177

    (142) Conversion -> TYPECAST Type . LPAREN Expression RPAREN

    LPAREN          shift and go to state 228


state 178

    (87) BasicLit -> I INTEGER .

    LSQUARE         reduce using rule 87 (BasicLit -> I INTEGER .)
    LPAREN          reduce using rule 87 (BasicLit -> I INTEGER .)
    DOT             reduce using rule 87 (BasicLit -> I INTEGER .)
    LOGICAL_OR      reduce using rule 87 (BasicLit -> I INTEGER .)
    LOGICAL_AND     reduce using rule 87 (BasicLit -> I INTEGER .)
    EQUALS          reduce using rule 87 (BasicLit -> I INTEGER .)
    NOT_ASSIGN      reduce using rule 87 (BasicLit -> I INTEGER .)
    LESSER          reduce using rule 87 (BasicLit -> I INTEGER .)
    GREATER         reduce using rule 87 (BasicLit -> I INTEGER .)
    LESS_EQUALS     reduce using rule 87 (BasicLit -> I INTEGER .)
    MORE_EQUALS     reduce using rule 87 (BasicLit -> I INTEGER .)
    OR              reduce using rule 87 (BasicLit -> I INTEGER .)
    XOR             reduce using rule 87 (BasicLit -> I INTEGER .)
    DIVIDE          reduce using rule 87 (BasicLit -> I INTEGER .)
    MOD             reduce using rule 87 (BasicLit -> I INTEGER .)
    LSHIFT          reduce using rule 87 (BasicLit -> I INTEGER .)
    RSHIFT          reduce using rule 87 (BasicLit -> I INTEGER .)
    PLUS            reduce using rule 87 (BasicLit -> I INTEGER .)
    MINUS           reduce using rule 87 (BasicLit -> I INTEGER .)
    STAR            reduce using rule 87 (BasicLit -> I INTEGER .)
    AND             reduce using rule 87 (BasicLit -> I INTEGER .)
    RSQUARE         reduce using rule 87 (BasicLit -> I INTEGER .)
    COMMA           reduce using rule 87 (BasicLit -> I INTEGER .)
    SEMICOLON       reduce using rule 87 (BasicLit -> I INTEGER .)
    RPAREN          reduce using rule 87 (BasicLit -> I INTEGER .)
    COLON           reduce using rule 87 (BasicLit -> I INTEGER .)
    LCURL           reduce using rule 87 (BasicLit -> I INTEGER .)
    PLUS_ASSIGN     reduce using rule 87 (BasicLit -> I INTEGER .)
    MINUS_ASSIGN    reduce using rule 87 (BasicLit -> I INTEGER .)
    STAR_ASSIGN     reduce using rule 87 (BasicLit -> I INTEGER .)
    DIVIDE_ASSIGN   reduce using rule 87 (BasicLit -> I INTEGER .)
    MOD_ASSIGN      reduce using rule 87 (BasicLit -> I INTEGER .)
    AND_ASSIGN      reduce using rule 87 (BasicLit -> I INTEGER .)
    OR_ASSIGN       reduce using rule 87 (BasicLit -> I INTEGER .)
    XOR_ASSIGN      reduce using rule 87 (BasicLit -> I INTEGER .)
    LSHIFT_ASSIGN   reduce using rule 87 (BasicLit -> I INTEGER .)
    RSHIFT_ASSIGN   reduce using rule 87 (BasicLit -> I INTEGER .)
    ASSIGN          reduce using rule 87 (BasicLit -> I INTEGER .)
    INCR            reduce using rule 87 (BasicLit -> I INTEGER .)
    DECR            reduce using rule 87 (BasicLit -> I INTEGER .)


state 179

    (88) BasicLit -> I OCTAL .

    LSQUARE         reduce using rule 88 (BasicLit -> I OCTAL .)
    LPAREN          reduce using rule 88 (BasicLit -> I OCTAL .)
    DOT             reduce using rule 88 (BasicLit -> I OCTAL .)
    LOGICAL_OR      reduce using rule 88 (BasicLit -> I OCTAL .)
    LOGICAL_AND     reduce using rule 88 (BasicLit -> I OCTAL .)
    EQUALS          reduce using rule 88 (BasicLit -> I OCTAL .)
    NOT_ASSIGN      reduce using rule 88 (BasicLit -> I OCTAL .)
    LESSER          reduce using rule 88 (BasicLit -> I OCTAL .)
    GREATER         reduce using rule 88 (BasicLit -> I OCTAL .)
    LESS_EQUALS     reduce using rule 88 (BasicLit -> I OCTAL .)
    MORE_EQUALS     reduce using rule 88 (BasicLit -> I OCTAL .)
    OR              reduce using rule 88 (BasicLit -> I OCTAL .)
    XOR             reduce using rule 88 (BasicLit -> I OCTAL .)
    DIVIDE          reduce using rule 88 (BasicLit -> I OCTAL .)
    MOD             reduce using rule 88 (BasicLit -> I OCTAL .)
    LSHIFT          reduce using rule 88 (BasicLit -> I OCTAL .)
    RSHIFT          reduce using rule 88 (BasicLit -> I OCTAL .)
    PLUS            reduce using rule 88 (BasicLit -> I OCTAL .)
    MINUS           reduce using rule 88 (BasicLit -> I OCTAL .)
    STAR            reduce using rule 88 (BasicLit -> I OCTAL .)
    AND             reduce using rule 88 (BasicLit -> I OCTAL .)
    RSQUARE         reduce using rule 88 (BasicLit -> I OCTAL .)
    COMMA           reduce using rule 88 (BasicLit -> I OCTAL .)
    SEMICOLON       reduce using rule 88 (BasicLit -> I OCTAL .)
    RPAREN          reduce using rule 88 (BasicLit -> I OCTAL .)
    COLON           reduce using rule 88 (BasicLit -> I OCTAL .)
    LCURL           reduce using rule 88 (BasicLit -> I OCTAL .)
    PLUS_ASSIGN     reduce using rule 88 (BasicLit -> I OCTAL .)
    MINUS_ASSIGN    reduce using rule 88 (BasicLit -> I OCTAL .)
    STAR_ASSIGN     reduce using rule 88 (BasicLit -> I OCTAL .)
    DIVIDE_ASSIGN   reduce using rule 88 (BasicLit -> I OCTAL .)
    MOD_ASSIGN      reduce using rule 88 (BasicLit -> I OCTAL .)
    AND_ASSIGN      reduce using rule 88 (BasicLit -> I OCTAL .)
    OR_ASSIGN       reduce using rule 88 (BasicLit -> I OCTAL .)
    XOR_ASSIGN      reduce using rule 88 (BasicLit -> I OCTAL .)
    LSHIFT_ASSIGN   reduce using rule 88 (BasicLit -> I OCTAL .)
    RSHIFT_ASSIGN   reduce using rule 88 (BasicLit -> I OCTAL .)
    ASSIGN          reduce using rule 88 (BasicLit -> I OCTAL .)
    INCR            reduce using rule 88 (BasicLit -> I OCTAL .)
    DECR            reduce using rule 88 (BasicLit -> I OCTAL .)


state 180

    (89) BasicLit -> I HEX .

    LSQUARE         reduce using rule 89 (BasicLit -> I HEX .)
    LPAREN          reduce using rule 89 (BasicLit -> I HEX .)
    DOT             reduce using rule 89 (BasicLit -> I HEX .)
    LOGICAL_OR      reduce using rule 89 (BasicLit -> I HEX .)
    LOGICAL_AND     reduce using rule 89 (BasicLit -> I HEX .)
    EQUALS          reduce using rule 89 (BasicLit -> I HEX .)
    NOT_ASSIGN      reduce using rule 89 (BasicLit -> I HEX .)
    LESSER          reduce using rule 89 (BasicLit -> I HEX .)
    GREATER         reduce using rule 89 (BasicLit -> I HEX .)
    LESS_EQUALS     reduce using rule 89 (BasicLit -> I HEX .)
    MORE_EQUALS     reduce using rule 89 (BasicLit -> I HEX .)
    OR              reduce using rule 89 (BasicLit -> I HEX .)
    XOR             reduce using rule 89 (BasicLit -> I HEX .)
    DIVIDE          reduce using rule 89 (BasicLit -> I HEX .)
    MOD             reduce using rule 89 (BasicLit -> I HEX .)
    LSHIFT          reduce using rule 89 (BasicLit -> I HEX .)
    RSHIFT          reduce using rule 89 (BasicLit -> I HEX .)
    PLUS            reduce using rule 89 (BasicLit -> I HEX .)
    MINUS           reduce using rule 89 (BasicLit -> I HEX .)
    STAR            reduce using rule 89 (BasicLit -> I HEX .)
    AND             reduce using rule 89 (BasicLit -> I HEX .)
    RSQUARE         reduce using rule 89 (BasicLit -> I HEX .)
    COMMA           reduce using rule 89 (BasicLit -> I HEX .)
    SEMICOLON       reduce using rule 89 (BasicLit -> I HEX .)
    RPAREN          reduce using rule 89 (BasicLit -> I HEX .)
    COLON           reduce using rule 89 (BasicLit -> I HEX .)
    LCURL           reduce using rule 89 (BasicLit -> I HEX .)
    PLUS_ASSIGN     reduce using rule 89 (BasicLit -> I HEX .)
    MINUS_ASSIGN    reduce using rule 89 (BasicLit -> I HEX .)
    STAR_ASSIGN     reduce using rule 89 (BasicLit -> I HEX .)
    DIVIDE_ASSIGN   reduce using rule 89 (BasicLit -> I HEX .)
    MOD_ASSIGN      reduce using rule 89 (BasicLit -> I HEX .)
    AND_ASSIGN      reduce using rule 89 (BasicLit -> I HEX .)
    OR_ASSIGN       reduce using rule 89 (BasicLit -> I HEX .)
    XOR_ASSIGN      reduce using rule 89 (BasicLit -> I HEX .)
    LSHIFT_ASSIGN   reduce using rule 89 (BasicLit -> I HEX .)
    RSHIFT_ASSIGN   reduce using rule 89 (BasicLit -> I HEX .)
    ASSIGN          reduce using rule 89 (BasicLit -> I HEX .)
    INCR            reduce using rule 89 (BasicLit -> I HEX .)
    DECR            reduce using rule 89 (BasicLit -> I HEX .)


state 181

    (90) BasicLit -> F FLOAT .

    LSQUARE         reduce using rule 90 (BasicLit -> F FLOAT .)
    LPAREN          reduce using rule 90 (BasicLit -> F FLOAT .)
    DOT             reduce using rule 90 (BasicLit -> F FLOAT .)
    LOGICAL_OR      reduce using rule 90 (BasicLit -> F FLOAT .)
    LOGICAL_AND     reduce using rule 90 (BasicLit -> F FLOAT .)
    EQUALS          reduce using rule 90 (BasicLit -> F FLOAT .)
    NOT_ASSIGN      reduce using rule 90 (BasicLit -> F FLOAT .)
    LESSER          reduce using rule 90 (BasicLit -> F FLOAT .)
    GREATER         reduce using rule 90 (BasicLit -> F FLOAT .)
    LESS_EQUALS     reduce using rule 90 (BasicLit -> F FLOAT .)
    MORE_EQUALS     reduce using rule 90 (BasicLit -> F FLOAT .)
    OR              reduce using rule 90 (BasicLit -> F FLOAT .)
    XOR             reduce using rule 90 (BasicLit -> F FLOAT .)
    DIVIDE          reduce using rule 90 (BasicLit -> F FLOAT .)
    MOD             reduce using rule 90 (BasicLit -> F FLOAT .)
    LSHIFT          reduce using rule 90 (BasicLit -> F FLOAT .)
    RSHIFT          reduce using rule 90 (BasicLit -> F FLOAT .)
    PLUS            reduce using rule 90 (BasicLit -> F FLOAT .)
    MINUS           reduce using rule 90 (BasicLit -> F FLOAT .)
    STAR            reduce using rule 90 (BasicLit -> F FLOAT .)
    AND             reduce using rule 90 (BasicLit -> F FLOAT .)
    RSQUARE         reduce using rule 90 (BasicLit -> F FLOAT .)
    COMMA           reduce using rule 90 (BasicLit -> F FLOAT .)
    SEMICOLON       reduce using rule 90 (BasicLit -> F FLOAT .)
    RPAREN          reduce using rule 90 (BasicLit -> F FLOAT .)
    COLON           reduce using rule 90 (BasicLit -> F FLOAT .)
    LCURL           reduce using rule 90 (BasicLit -> F FLOAT .)
    PLUS_ASSIGN     reduce using rule 90 (BasicLit -> F FLOAT .)
    MINUS_ASSIGN    reduce using rule 90 (BasicLit -> F FLOAT .)
    STAR_ASSIGN     reduce using rule 90 (BasicLit -> F FLOAT .)
    DIVIDE_ASSIGN   reduce using rule 90 (BasicLit -> F FLOAT .)
    MOD_ASSIGN      reduce using rule 90 (BasicLit -> F FLOAT .)
    AND_ASSIGN      reduce using rule 90 (BasicLit -> F FLOAT .)
    OR_ASSIGN       reduce using rule 90 (BasicLit -> F FLOAT .)
    XOR_ASSIGN      reduce using rule 90 (BasicLit -> F FLOAT .)
    LSHIFT_ASSIGN   reduce using rule 90 (BasicLit -> F FLOAT .)
    RSHIFT_ASSIGN   reduce using rule 90 (BasicLit -> F FLOAT .)
    ASSIGN          reduce using rule 90 (BasicLit -> F FLOAT .)
    INCR            reduce using rule 90 (BasicLit -> F FLOAT .)
    DECR            reduce using rule 90 (BasicLit -> F FLOAT .)


state 182

    (91) BasicLit -> C IMAGINARY .

    LSQUARE         reduce using rule 91 (BasicLit -> C IMAGINARY .)
    LPAREN          reduce using rule 91 (BasicLit -> C IMAGINARY .)
    DOT             reduce using rule 91 (BasicLit -> C IMAGINARY .)
    LOGICAL_OR      reduce using rule 91 (BasicLit -> C IMAGINARY .)
    LOGICAL_AND     reduce using rule 91 (BasicLit -> C IMAGINARY .)
    EQUALS          reduce using rule 91 (BasicLit -> C IMAGINARY .)
    NOT_ASSIGN      reduce using rule 91 (BasicLit -> C IMAGINARY .)
    LESSER          reduce using rule 91 (BasicLit -> C IMAGINARY .)
    GREATER         reduce using rule 91 (BasicLit -> C IMAGINARY .)
    LESS_EQUALS     reduce using rule 91 (BasicLit -> C IMAGINARY .)
    MORE_EQUALS     reduce using rule 91 (BasicLit -> C IMAGINARY .)
    OR              reduce using rule 91 (BasicLit -> C IMAGINARY .)
    XOR             reduce using rule 91 (BasicLit -> C IMAGINARY .)
    DIVIDE          reduce using rule 91 (BasicLit -> C IMAGINARY .)
    MOD             reduce using rule 91 (BasicLit -> C IMAGINARY .)
    LSHIFT          reduce using rule 91 (BasicLit -> C IMAGINARY .)
    RSHIFT          reduce using rule 91 (BasicLit -> C IMAGINARY .)
    PLUS            reduce using rule 91 (BasicLit -> C IMAGINARY .)
    MINUS           reduce using rule 91 (BasicLit -> C IMAGINARY .)
    STAR            reduce using rule 91 (BasicLit -> C IMAGINARY .)
    AND             reduce using rule 91 (BasicLit -> C IMAGINARY .)
    RSQUARE         reduce using rule 91 (BasicLit -> C IMAGINARY .)
    COMMA           reduce using rule 91 (BasicLit -> C IMAGINARY .)
    SEMICOLON       reduce using rule 91 (BasicLit -> C IMAGINARY .)
    RPAREN          reduce using rule 91 (BasicLit -> C IMAGINARY .)
    COLON           reduce using rule 91 (BasicLit -> C IMAGINARY .)
    LCURL           reduce using rule 91 (BasicLit -> C IMAGINARY .)
    PLUS_ASSIGN     reduce using rule 91 (BasicLit -> C IMAGINARY .)
    MINUS_ASSIGN    reduce using rule 91 (BasicLit -> C IMAGINARY .)
    STAR_ASSIGN     reduce using rule 91 (BasicLit -> C IMAGINARY .)
    DIVIDE_ASSIGN   reduce using rule 91 (BasicLit -> C IMAGINARY .)
    MOD_ASSIGN      reduce using rule 91 (BasicLit -> C IMAGINARY .)
    AND_ASSIGN      reduce using rule 91 (BasicLit -> C IMAGINARY .)
    OR_ASSIGN       reduce using rule 91 (BasicLit -> C IMAGINARY .)
    XOR_ASSIGN      reduce using rule 91 (BasicLit -> C IMAGINARY .)
    LSHIFT_ASSIGN   reduce using rule 91 (BasicLit -> C IMAGINARY .)
    RSHIFT_ASSIGN   reduce using rule 91 (BasicLit -> C IMAGINARY .)
    ASSIGN          reduce using rule 91 (BasicLit -> C IMAGINARY .)
    INCR            reduce using rule 91 (BasicLit -> C IMAGINARY .)
    DECR            reduce using rule 91 (BasicLit -> C IMAGINARY .)


state 183

    (92) BasicLit -> R RUNE .

    LSQUARE         reduce using rule 92 (BasicLit -> R RUNE .)
    LPAREN          reduce using rule 92 (BasicLit -> R RUNE .)
    DOT             reduce using rule 92 (BasicLit -> R RUNE .)
    LOGICAL_OR      reduce using rule 92 (BasicLit -> R RUNE .)
    LOGICAL_AND     reduce using rule 92 (BasicLit -> R RUNE .)
    EQUALS          reduce using rule 92 (BasicLit -> R RUNE .)
    NOT_ASSIGN      reduce using rule 92 (BasicLit -> R RUNE .)
    LESSER          reduce using rule 92 (BasicLit -> R RUNE .)
    GREATER         reduce using rule 92 (BasicLit -> R RUNE .)
    LESS_EQUALS     reduce using rule 92 (BasicLit -> R RUNE .)
    MORE_EQUALS     reduce using rule 92 (BasicLit -> R RUNE .)
    OR              reduce using rule 92 (BasicLit -> R RUNE .)
    XOR             reduce using rule 92 (BasicLit -> R RUNE .)
    DIVIDE          reduce using rule 92 (BasicLit -> R RUNE .)
    MOD             reduce using rule 92 (BasicLit -> R RUNE .)
    LSHIFT          reduce using rule 92 (BasicLit -> R RUNE .)
    RSHIFT          reduce using rule 92 (BasicLit -> R RUNE .)
    PLUS            reduce using rule 92 (BasicLit -> R RUNE .)
    MINUS           reduce using rule 92 (BasicLit -> R RUNE .)
    STAR            reduce using rule 92 (BasicLit -> R RUNE .)
    AND             reduce using rule 92 (BasicLit -> R RUNE .)
    RSQUARE         reduce using rule 92 (BasicLit -> R RUNE .)
    COMMA           reduce using rule 92 (BasicLit -> R RUNE .)
    SEMICOLON       reduce using rule 92 (BasicLit -> R RUNE .)
    RPAREN          reduce using rule 92 (BasicLit -> R RUNE .)
    COLON           reduce using rule 92 (BasicLit -> R RUNE .)
    LCURL           reduce using rule 92 (BasicLit -> R RUNE .)
    PLUS_ASSIGN     reduce using rule 92 (BasicLit -> R RUNE .)
    MINUS_ASSIGN    reduce using rule 92 (BasicLit -> R RUNE .)
    STAR_ASSIGN     reduce using rule 92 (BasicLit -> R RUNE .)
    DIVIDE_ASSIGN   reduce using rule 92 (BasicLit -> R RUNE .)
    MOD_ASSIGN      reduce using rule 92 (BasicLit -> R RUNE .)
    AND_ASSIGN      reduce using rule 92 (BasicLit -> R RUNE .)
    OR_ASSIGN       reduce using rule 92 (BasicLit -> R RUNE .)
    XOR_ASSIGN      reduce using rule 92 (BasicLit -> R RUNE .)
    LSHIFT_ASSIGN   reduce using rule 92 (BasicLit -> R RUNE .)
    RSHIFT_ASSIGN   reduce using rule 92 (BasicLit -> R RUNE .)
    ASSIGN          reduce using rule 92 (BasicLit -> R RUNE .)
    INCR            reduce using rule 92 (BasicLit -> R RUNE .)
    DECR            reduce using rule 92 (BasicLit -> R RUNE .)


state 184

    (93) BasicLit -> S STRING .

    LSQUARE         reduce using rule 93 (BasicLit -> S STRING .)
    LPAREN          reduce using rule 93 (BasicLit -> S STRING .)
    DOT             reduce using rule 93 (BasicLit -> S STRING .)
    LOGICAL_OR      reduce using rule 93 (BasicLit -> S STRING .)
    LOGICAL_AND     reduce using rule 93 (BasicLit -> S STRING .)
    EQUALS          reduce using rule 93 (BasicLit -> S STRING .)
    NOT_ASSIGN      reduce using rule 93 (BasicLit -> S STRING .)
    LESSER          reduce using rule 93 (BasicLit -> S STRING .)
    GREATER         reduce using rule 93 (BasicLit -> S STRING .)
    LESS_EQUALS     reduce using rule 93 (BasicLit -> S STRING .)
    MORE_EQUALS     reduce using rule 93 (BasicLit -> S STRING .)
    OR              reduce using rule 93 (BasicLit -> S STRING .)
    XOR             reduce using rule 93 (BasicLit -> S STRING .)
    DIVIDE          reduce using rule 93 (BasicLit -> S STRING .)
    MOD             reduce using rule 93 (BasicLit -> S STRING .)
    LSHIFT          reduce using rule 93 (BasicLit -> S STRING .)
    RSHIFT          reduce using rule 93 (BasicLit -> S STRING .)
    PLUS            reduce using rule 93 (BasicLit -> S STRING .)
    MINUS           reduce using rule 93 (BasicLit -> S STRING .)
    STAR            reduce using rule 93 (BasicLit -> S STRING .)
    AND             reduce using rule 93 (BasicLit -> S STRING .)
    RSQUARE         reduce using rule 93 (BasicLit -> S STRING .)
    COMMA           reduce using rule 93 (BasicLit -> S STRING .)
    SEMICOLON       reduce using rule 93 (BasicLit -> S STRING .)
    RPAREN          reduce using rule 93 (BasicLit -> S STRING .)
    COLON           reduce using rule 93 (BasicLit -> S STRING .)
    LCURL           reduce using rule 93 (BasicLit -> S STRING .)
    PLUS_ASSIGN     reduce using rule 93 (BasicLit -> S STRING .)
    MINUS_ASSIGN    reduce using rule 93 (BasicLit -> S STRING .)
    STAR_ASSIGN     reduce using rule 93 (BasicLit -> S STRING .)
    DIVIDE_ASSIGN   reduce using rule 93 (BasicLit -> S STRING .)
    MOD_ASSIGN      reduce using rule 93 (BasicLit -> S STRING .)
    AND_ASSIGN      reduce using rule 93 (BasicLit -> S STRING .)
    OR_ASSIGN       reduce using rule 93 (BasicLit -> S STRING .)
    XOR_ASSIGN      reduce using rule 93 (BasicLit -> S STRING .)
    LSHIFT_ASSIGN   reduce using rule 93 (BasicLit -> S STRING .)
    RSHIFT_ASSIGN   reduce using rule 93 (BasicLit -> S STRING .)
    ASSIGN          reduce using rule 93 (BasicLit -> S STRING .)
    INCR            reduce using rule 93 (BasicLit -> S STRING .)
    DECR            reduce using rule 93 (BasicLit -> S STRING .)


state 185

    (23) StructType -> CreateFuncScope STRUCT LCURL . FieldDeclRep RCURL EndScope
    (24) FieldDeclRep -> . FieldDeclRep FieldDecl SEMICOLON
    (25) FieldDeclRep -> . epsilon
    (226) epsilon -> .

    RCURL           reduce using rule 226 (epsilon -> .)
    IDENTIFIER      reduce using rule 226 (epsilon -> .)

    FieldDeclRep                   shift and go to state 229
    epsilon                        shift and go to state 230

state 186

    (54) IdentifierRep -> IdentifierRep COMMA IDENTIFIER .

    COMMA           reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LPAREN          reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    INT_T           reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    FLOAT_T         reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    UINT_T          reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    COMPLEX_T       reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    RUNE_T          reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    BOOL_T          reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRING_T        reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    TYPE            reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    IDENTIFIER      reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    LSQUARE         reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STAR            reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    STRUCT          reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)
    ASSIGN          reduce using rule 54 (IdentifierRep -> IdentifierRep COMMA IDENTIFIER .)


state 187

    (61) TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .

    RPAREN          reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 61 (TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON .)


state 188

    (67) VarSpecRep -> VarSpecRep VarSpec SEMICOLON .

    RPAREN          reduce using rule 67 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)
    IDENTIFIER      reduce using rule 67 (VarSpecRep -> VarSpecRep VarSpec SEMICOLON .)


state 189

    (71) ExpressionListOpt -> ASSIGN ExpressionList .

    SEMICOLON       reduce using rule 71 (ExpressionListOpt -> ASSIGN ExpressionList .)


state 190

    (56) ExpressionList -> Expression ExpressionRep .
    (57) ExpressionRep -> ExpressionRep . COMMA Expression

    SEMICOLON       reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    RPAREN          reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    PLUS_ASSIGN     reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    MINUS_ASSIGN    reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    STAR_ASSIGN     reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    DIVIDE_ASSIGN   reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    MOD_ASSIGN      reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    AND_ASSIGN      reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    OR_ASSIGN       reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    XOR_ASSIGN      reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    LSHIFT_ASSIGN   reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    RSHIFT_ASSIGN   reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    ASSIGN          reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    LCURL           reduce using rule 56 (ExpressionList -> Expression ExpressionRep .)
    COMMA           shift and go to state 231


state 191

    (58) ExpressionRep -> epsilon .

    COMMA           reduce using rule 58 (ExpressionRep -> epsilon .)
    SEMICOLON       reduce using rule 58 (ExpressionRep -> epsilon .)
    RPAREN          reduce using rule 58 (ExpressionRep -> epsilon .)
    LCURL           reduce using rule 58 (ExpressionRep -> epsilon .)
    PLUS_ASSIGN     reduce using rule 58 (ExpressionRep -> epsilon .)
    MINUS_ASSIGN    reduce using rule 58 (ExpressionRep -> epsilon .)
    STAR_ASSIGN     reduce using rule 58 (ExpressionRep -> epsilon .)
    DIVIDE_ASSIGN   reduce using rule 58 (ExpressionRep -> epsilon .)
    MOD_ASSIGN      reduce using rule 58 (ExpressionRep -> epsilon .)
    AND_ASSIGN      reduce using rule 58 (ExpressionRep -> epsilon .)
    OR_ASSIGN       reduce using rule 58 (ExpressionRep -> epsilon .)
    XOR_ASSIGN      reduce using rule 58 (ExpressionRep -> epsilon .)
    LSHIFT_ASSIGN   reduce using rule 58 (ExpressionRep -> epsilon .)
    RSHIFT_ASSIGN   reduce using rule 58 (ExpressionRep -> epsilon .)
    ASSIGN          reduce using rule 58 (ExpressionRep -> epsilon .)


state 192

    (80) Function -> Signature funMark FunctionBody .

    SEMICOLON       reduce using rule 80 (Function -> Signature funMark FunctionBody .)


state 193

    (82) FunctionBody -> Block .

    SEMICOLON       reduce using rule 82 (FunctionBody -> Block .)


state 194

    (39) Block -> LCURL . StatementList RCURL
    (40) StatementList -> . StatementRep
    (41) StatementRep -> . StatementRep Statement SEMICOLON
    (42) StatementRep -> . epsilon
    (226) epsilon -> .

    RETURN          reduce using rule 226 (epsilon -> .)
    BREAK           reduce using rule 226 (epsilon -> .)
    CONTINUE        reduce using rule 226 (epsilon -> .)
    GOTO            reduce using rule 226 (epsilon -> .)
    IF              reduce using rule 226 (epsilon -> .)
    FOR             reduce using rule 226 (epsilon -> .)
    PRINT           reduce using rule 226 (epsilon -> .)
    SCAN            reduce using rule 226 (epsilon -> .)
    CONST           reduce using rule 226 (epsilon -> .)
    TYPE            reduce using rule 226 (epsilon -> .)
    VAR             reduce using rule 226 (epsilon -> .)
    IDENTIFIER      reduce using rule 226 (epsilon -> .)
    SWITCH          reduce using rule 226 (epsilon -> .)
    NOT             reduce using rule 226 (epsilon -> .)
    PLUS            reduce using rule 226 (epsilon -> .)
    MINUS           reduce using rule 226 (epsilon -> .)
    STAR            reduce using rule 226 (epsilon -> .)
    AND             reduce using rule 226 (epsilon -> .)
    LPAREN          reduce using rule 226 (epsilon -> .)
    TYPECAST        reduce using rule 226 (epsilon -> .)
    SEMICOLON       reduce using rule 226 (epsilon -> .)
    LCURL           reduce using rule 226 (epsilon -> .)
    INTEGER         reduce using rule 226 (epsilon -> .)
    OCTAL           reduce using rule 226 (epsilon -> .)
    HEX             reduce using rule 226 (epsilon -> .)
    FLOAT           reduce using rule 226 (epsilon -> .)
    IMAGINARY       reduce using rule 226 (epsilon -> .)
    RUNE            reduce using rule 226 (epsilon -> .)
    STRING          reduce using rule 226 (epsilon -> .)
    RCURL           reduce using rule 226 (epsilon -> .)

    StatementList                  shift and go to state 232
    StatementRep                   shift and go to state 233
    epsilon                        shift and go to state 234

state 195

    (30) Parameters -> LPAREN ParameterListOpt RPAREN .

    LPAREN          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    INT_T           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    FLOAT_T         reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    UINT_T          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    COMPLEX_T       reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    RUNE_T          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    BOOL_T          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRING_T        reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    TYPE            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    IDENTIFIER      reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LSQUARE         reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STAR            reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    STRUCT          reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    LCURL           reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)
    SEMICOLON       reduce using rule 30 (Parameters -> LPAREN ParameterListOpt RPAREN .)


state 196

    (36) ParameterDeclCommaRep -> ParameterDecl COMMA . ParameterDecl
    (37) ParameterDecl -> . IdentifierList Type
    (38) ParameterDecl -> . Type
    (53) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    IDENTIFIER      shift and go to state 144
    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    ParameterDecl                  shift and go to state 235
    IdentifierList                 shift and go to state 142
    Type                           shift and go to state 143
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 197

    (35) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA . ParameterDecl
    (37) ParameterDecl -> . IdentifierList Type
    (38) ParameterDecl -> . Type
    (53) IdentifierList -> . IDENTIFIER IdentifierRep
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    IDENTIFIER      shift and go to state 144
    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    ParameterDecl                  shift and go to state 236
    IdentifierList                 shift and go to state 142
    Type                           shift and go to state 143
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 198

    (37) ParameterDecl -> IdentifierList Type .

    COMMA           reduce using rule 37 (ParameterDecl -> IdentifierList Type .)
    RPAREN          reduce using rule 37 (ParameterDecl -> IdentifierList Type .)


state 199

    (20) ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .

    ASSIGN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    SEMICOLON       reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    RPAREN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    LCURL           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    COMMA           reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)
    LPAREN          reduce using rule 20 (ArrayType -> LSQUARE ArrayLength RSQUARE ElementType .)


state 200

    (22) ElementType -> Type .

    ASSIGN          reduce using rule 22 (ElementType -> Type .)
    SEMICOLON       reduce using rule 22 (ElementType -> Type .)
    RPAREN          reduce using rule 22 (ElementType -> Type .)
    LCURL           reduce using rule 22 (ElementType -> Type .)
    COMMA           reduce using rule 22 (ElementType -> Type .)
    LPAREN          reduce using rule 22 (ElementType -> Type .)


state 201

    (115) Expression -> Expression LOGICAL_OR Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    RSQUARE         reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    COMMA           reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    SEMICOLON       reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    RPAREN          reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    COLON           reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    LCURL           reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    PLUS_ASSIGN     reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    MINUS_ASSIGN    reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    STAR_ASSIGN     reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    DIVIDE_ASSIGN   reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    MOD_ASSIGN      reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    AND_ASSIGN      reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    OR_ASSIGN       reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    XOR_ASSIGN      reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    LSHIFT_ASSIGN   reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    RSHIFT_ASSIGN   reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    ASSIGN          reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    INCR            reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    DECR            reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .)
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167

  ! LOGICAL_AND     [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! EQUALS          [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! NOT_ASSIGN      [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! LESSER          [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! GREATER         [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! OR              [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! XOR             [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! DIVIDE          [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! MOD             [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! LSHIFT          [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! RSHIFT          [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! PLUS            [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! MINUS           [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! STAR            [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! AND             [ reduce using rule 115 (Expression -> Expression LOGICAL_OR Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]


state 202

    (116) Expression -> Expression LOGICAL_AND Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    LOGICAL_AND     reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    RSQUARE         reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    COMMA           reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    SEMICOLON       reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    RPAREN          reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    COLON           reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    LCURL           reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    PLUS_ASSIGN     reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    MINUS_ASSIGN    reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    STAR_ASSIGN     reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    DIVIDE_ASSIGN   reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    MOD_ASSIGN      reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    AND_ASSIGN      reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    OR_ASSIGN       reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    XOR_ASSIGN      reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    LSHIFT_ASSIGN   reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    RSHIFT_ASSIGN   reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    ASSIGN          reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    INCR            reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    DECR            reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .)
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167

  ! EQUALS          [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! NOT_ASSIGN      [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! LESSER          [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! GREATER         [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! OR              [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! XOR             [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! DIVIDE          [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! MOD             [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! LSHIFT          [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! RSHIFT          [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! PLUS            [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! MINUS           [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! STAR            [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! AND             [ reduce using rule 116 (Expression -> Expression LOGICAL_AND Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]


state 203

    (117) Expression -> Expression EQUALS Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    LOGICAL_AND     reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    EQUALS          reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    NOT_ASSIGN      reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    OR              reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    XOR             reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    AND             reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    RSQUARE         reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    COMMA           reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    SEMICOLON       reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    RPAREN          reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    COLON           reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    LCURL           reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    PLUS_ASSIGN     reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    MINUS_ASSIGN    reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    STAR_ASSIGN     reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    DIVIDE_ASSIGN   reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    MOD_ASSIGN      reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    AND_ASSIGN      reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    OR_ASSIGN       reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    XOR_ASSIGN      reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    LSHIFT_ASSIGN   reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    RSHIFT_ASSIGN   reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    ASSIGN          reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    INCR            reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    DECR            reduce using rule 117 (Expression -> Expression EQUALS Expression .)
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166

  ! LESSER          [ reduce using rule 117 (Expression -> Expression EQUALS Expression .) ]
  ! GREATER         [ reduce using rule 117 (Expression -> Expression EQUALS Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 117 (Expression -> Expression EQUALS Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 117 (Expression -> Expression EQUALS Expression .) ]
  ! DIVIDE          [ reduce using rule 117 (Expression -> Expression EQUALS Expression .) ]
  ! MOD             [ reduce using rule 117 (Expression -> Expression EQUALS Expression .) ]
  ! LSHIFT          [ reduce using rule 117 (Expression -> Expression EQUALS Expression .) ]
  ! RSHIFT          [ reduce using rule 117 (Expression -> Expression EQUALS Expression .) ]
  ! PLUS            [ reduce using rule 117 (Expression -> Expression EQUALS Expression .) ]
  ! MINUS           [ reduce using rule 117 (Expression -> Expression EQUALS Expression .) ]
  ! STAR            [ reduce using rule 117 (Expression -> Expression EQUALS Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! AND             [ shift and go to state 167 ]


state 204

    (118) Expression -> Expression NOT_ASSIGN Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    LOGICAL_AND     reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    EQUALS          reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    NOT_ASSIGN      reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    OR              reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    XOR             reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    AND             reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    RSQUARE         reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    COMMA           reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    SEMICOLON       reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    RPAREN          reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    COLON           reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    LCURL           reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    PLUS_ASSIGN     reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    MINUS_ASSIGN    reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    STAR_ASSIGN     reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    DIVIDE_ASSIGN   reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    MOD_ASSIGN      reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    AND_ASSIGN      reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    OR_ASSIGN       reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    XOR_ASSIGN      reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    LSHIFT_ASSIGN   reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    RSHIFT_ASSIGN   reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    ASSIGN          reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    INCR            reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    DECR            reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .)
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166

  ! LESSER          [ reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! GREATER         [ reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! DIVIDE          [ reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! MOD             [ reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! LSHIFT          [ reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! RSHIFT          [ reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! PLUS            [ reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! MINUS           [ reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! STAR            [ reduce using rule 118 (Expression -> Expression NOT_ASSIGN Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! AND             [ shift and go to state 167 ]


state 205

    (119) Expression -> Expression LESSER Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 119 (Expression -> Expression LESSER Expression .)
    LOGICAL_AND     reduce using rule 119 (Expression -> Expression LESSER Expression .)
    EQUALS          reduce using rule 119 (Expression -> Expression LESSER Expression .)
    NOT_ASSIGN      reduce using rule 119 (Expression -> Expression LESSER Expression .)
    LESSER          reduce using rule 119 (Expression -> Expression LESSER Expression .)
    GREATER         reduce using rule 119 (Expression -> Expression LESSER Expression .)
    LESS_EQUALS     reduce using rule 119 (Expression -> Expression LESSER Expression .)
    MORE_EQUALS     reduce using rule 119 (Expression -> Expression LESSER Expression .)
    OR              reduce using rule 119 (Expression -> Expression LESSER Expression .)
    XOR             reduce using rule 119 (Expression -> Expression LESSER Expression .)
    AND             reduce using rule 119 (Expression -> Expression LESSER Expression .)
    RSQUARE         reduce using rule 119 (Expression -> Expression LESSER Expression .)
    COMMA           reduce using rule 119 (Expression -> Expression LESSER Expression .)
    SEMICOLON       reduce using rule 119 (Expression -> Expression LESSER Expression .)
    RPAREN          reduce using rule 119 (Expression -> Expression LESSER Expression .)
    COLON           reduce using rule 119 (Expression -> Expression LESSER Expression .)
    LCURL           reduce using rule 119 (Expression -> Expression LESSER Expression .)
    PLUS_ASSIGN     reduce using rule 119 (Expression -> Expression LESSER Expression .)
    MINUS_ASSIGN    reduce using rule 119 (Expression -> Expression LESSER Expression .)
    STAR_ASSIGN     reduce using rule 119 (Expression -> Expression LESSER Expression .)
    DIVIDE_ASSIGN   reduce using rule 119 (Expression -> Expression LESSER Expression .)
    MOD_ASSIGN      reduce using rule 119 (Expression -> Expression LESSER Expression .)
    AND_ASSIGN      reduce using rule 119 (Expression -> Expression LESSER Expression .)
    OR_ASSIGN       reduce using rule 119 (Expression -> Expression LESSER Expression .)
    XOR_ASSIGN      reduce using rule 119 (Expression -> Expression LESSER Expression .)
    LSHIFT_ASSIGN   reduce using rule 119 (Expression -> Expression LESSER Expression .)
    RSHIFT_ASSIGN   reduce using rule 119 (Expression -> Expression LESSER Expression .)
    ASSIGN          reduce using rule 119 (Expression -> Expression LESSER Expression .)
    INCR            reduce using rule 119 (Expression -> Expression LESSER Expression .)
    DECR            reduce using rule 119 (Expression -> Expression LESSER Expression .)
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166

  ! DIVIDE          [ reduce using rule 119 (Expression -> Expression LESSER Expression .) ]
  ! MOD             [ reduce using rule 119 (Expression -> Expression LESSER Expression .) ]
  ! LSHIFT          [ reduce using rule 119 (Expression -> Expression LESSER Expression .) ]
  ! RSHIFT          [ reduce using rule 119 (Expression -> Expression LESSER Expression .) ]
  ! PLUS            [ reduce using rule 119 (Expression -> Expression LESSER Expression .) ]
  ! MINUS           [ reduce using rule 119 (Expression -> Expression LESSER Expression .) ]
  ! STAR            [ reduce using rule 119 (Expression -> Expression LESSER Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! LESSER          [ shift and go to state 154 ]
  ! GREATER         [ shift and go to state 155 ]
  ! LESS_EQUALS     [ shift and go to state 156 ]
  ! MORE_EQUALS     [ shift and go to state 157 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! AND             [ shift and go to state 167 ]


state 206

    (120) Expression -> Expression GREATER Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 120 (Expression -> Expression GREATER Expression .)
    LOGICAL_AND     reduce using rule 120 (Expression -> Expression GREATER Expression .)
    EQUALS          reduce using rule 120 (Expression -> Expression GREATER Expression .)
    NOT_ASSIGN      reduce using rule 120 (Expression -> Expression GREATER Expression .)
    LESSER          reduce using rule 120 (Expression -> Expression GREATER Expression .)
    GREATER         reduce using rule 120 (Expression -> Expression GREATER Expression .)
    LESS_EQUALS     reduce using rule 120 (Expression -> Expression GREATER Expression .)
    MORE_EQUALS     reduce using rule 120 (Expression -> Expression GREATER Expression .)
    OR              reduce using rule 120 (Expression -> Expression GREATER Expression .)
    XOR             reduce using rule 120 (Expression -> Expression GREATER Expression .)
    AND             reduce using rule 120 (Expression -> Expression GREATER Expression .)
    RSQUARE         reduce using rule 120 (Expression -> Expression GREATER Expression .)
    COMMA           reduce using rule 120 (Expression -> Expression GREATER Expression .)
    SEMICOLON       reduce using rule 120 (Expression -> Expression GREATER Expression .)
    RPAREN          reduce using rule 120 (Expression -> Expression GREATER Expression .)
    COLON           reduce using rule 120 (Expression -> Expression GREATER Expression .)
    LCURL           reduce using rule 120 (Expression -> Expression GREATER Expression .)
    PLUS_ASSIGN     reduce using rule 120 (Expression -> Expression GREATER Expression .)
    MINUS_ASSIGN    reduce using rule 120 (Expression -> Expression GREATER Expression .)
    STAR_ASSIGN     reduce using rule 120 (Expression -> Expression GREATER Expression .)
    DIVIDE_ASSIGN   reduce using rule 120 (Expression -> Expression GREATER Expression .)
    MOD_ASSIGN      reduce using rule 120 (Expression -> Expression GREATER Expression .)
    AND_ASSIGN      reduce using rule 120 (Expression -> Expression GREATER Expression .)
    OR_ASSIGN       reduce using rule 120 (Expression -> Expression GREATER Expression .)
    XOR_ASSIGN      reduce using rule 120 (Expression -> Expression GREATER Expression .)
    LSHIFT_ASSIGN   reduce using rule 120 (Expression -> Expression GREATER Expression .)
    RSHIFT_ASSIGN   reduce using rule 120 (Expression -> Expression GREATER Expression .)
    ASSIGN          reduce using rule 120 (Expression -> Expression GREATER Expression .)
    INCR            reduce using rule 120 (Expression -> Expression GREATER Expression .)
    DECR            reduce using rule 120 (Expression -> Expression GREATER Expression .)
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166

  ! DIVIDE          [ reduce using rule 120 (Expression -> Expression GREATER Expression .) ]
  ! MOD             [ reduce using rule 120 (Expression -> Expression GREATER Expression .) ]
  ! LSHIFT          [ reduce using rule 120 (Expression -> Expression GREATER Expression .) ]
  ! RSHIFT          [ reduce using rule 120 (Expression -> Expression GREATER Expression .) ]
  ! PLUS            [ reduce using rule 120 (Expression -> Expression GREATER Expression .) ]
  ! MINUS           [ reduce using rule 120 (Expression -> Expression GREATER Expression .) ]
  ! STAR            [ reduce using rule 120 (Expression -> Expression GREATER Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! LESSER          [ shift and go to state 154 ]
  ! GREATER         [ shift and go to state 155 ]
  ! LESS_EQUALS     [ shift and go to state 156 ]
  ! MORE_EQUALS     [ shift and go to state 157 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! AND             [ shift and go to state 167 ]


state 207

    (121) Expression -> Expression LESS_EQUALS Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    LOGICAL_AND     reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    EQUALS          reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    NOT_ASSIGN      reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    LESSER          reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    GREATER         reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    LESS_EQUALS     reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    MORE_EQUALS     reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    OR              reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    XOR             reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    AND             reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    RSQUARE         reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    COMMA           reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    SEMICOLON       reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    RPAREN          reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    COLON           reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    LCURL           reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    PLUS_ASSIGN     reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    MINUS_ASSIGN    reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    STAR_ASSIGN     reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    DIVIDE_ASSIGN   reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    MOD_ASSIGN      reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    AND_ASSIGN      reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    OR_ASSIGN       reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    XOR_ASSIGN      reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    LSHIFT_ASSIGN   reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    RSHIFT_ASSIGN   reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    ASSIGN          reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    INCR            reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    DECR            reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .)
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166

  ! DIVIDE          [ reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! MOD             [ reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! LSHIFT          [ reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! RSHIFT          [ reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! PLUS            [ reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! MINUS           [ reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! STAR            [ reduce using rule 121 (Expression -> Expression LESS_EQUALS Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! LESSER          [ shift and go to state 154 ]
  ! GREATER         [ shift and go to state 155 ]
  ! LESS_EQUALS     [ shift and go to state 156 ]
  ! MORE_EQUALS     [ shift and go to state 157 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! AND             [ shift and go to state 167 ]


state 208

    (122) Expression -> Expression MORE_EQUALS Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    LOGICAL_AND     reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    EQUALS          reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    NOT_ASSIGN      reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    LESSER          reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    GREATER         reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    LESS_EQUALS     reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    MORE_EQUALS     reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    OR              reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    XOR             reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    AND             reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    RSQUARE         reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    COMMA           reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    SEMICOLON       reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    RPAREN          reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    COLON           reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    LCURL           reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    PLUS_ASSIGN     reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    MINUS_ASSIGN    reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    STAR_ASSIGN     reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    DIVIDE_ASSIGN   reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    MOD_ASSIGN      reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    AND_ASSIGN      reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    OR_ASSIGN       reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    XOR_ASSIGN      reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    LSHIFT_ASSIGN   reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    RSHIFT_ASSIGN   reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    ASSIGN          reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    INCR            reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    DECR            reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .)
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166

  ! DIVIDE          [ reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! MOD             [ reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! LSHIFT          [ reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! RSHIFT          [ reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! PLUS            [ reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! MINUS           [ reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! STAR            [ reduce using rule 122 (Expression -> Expression MORE_EQUALS Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! LESSER          [ shift and go to state 154 ]
  ! GREATER         [ shift and go to state 155 ]
  ! LESS_EQUALS     [ shift and go to state 156 ]
  ! MORE_EQUALS     [ shift and go to state 157 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! AND             [ shift and go to state 167 ]


state 209

    (123) Expression -> Expression OR Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 123 (Expression -> Expression OR Expression .)
    LOGICAL_AND     reduce using rule 123 (Expression -> Expression OR Expression .)
    OR              reduce using rule 123 (Expression -> Expression OR Expression .)
    RSQUARE         reduce using rule 123 (Expression -> Expression OR Expression .)
    COMMA           reduce using rule 123 (Expression -> Expression OR Expression .)
    SEMICOLON       reduce using rule 123 (Expression -> Expression OR Expression .)
    RPAREN          reduce using rule 123 (Expression -> Expression OR Expression .)
    COLON           reduce using rule 123 (Expression -> Expression OR Expression .)
    LCURL           reduce using rule 123 (Expression -> Expression OR Expression .)
    PLUS_ASSIGN     reduce using rule 123 (Expression -> Expression OR Expression .)
    MINUS_ASSIGN    reduce using rule 123 (Expression -> Expression OR Expression .)
    STAR_ASSIGN     reduce using rule 123 (Expression -> Expression OR Expression .)
    DIVIDE_ASSIGN   reduce using rule 123 (Expression -> Expression OR Expression .)
    MOD_ASSIGN      reduce using rule 123 (Expression -> Expression OR Expression .)
    AND_ASSIGN      reduce using rule 123 (Expression -> Expression OR Expression .)
    OR_ASSIGN       reduce using rule 123 (Expression -> Expression OR Expression .)
    XOR_ASSIGN      reduce using rule 123 (Expression -> Expression OR Expression .)
    LSHIFT_ASSIGN   reduce using rule 123 (Expression -> Expression OR Expression .)
    RSHIFT_ASSIGN   reduce using rule 123 (Expression -> Expression OR Expression .)
    ASSIGN          reduce using rule 123 (Expression -> Expression OR Expression .)
    INCR            reduce using rule 123 (Expression -> Expression OR Expression .)
    DECR            reduce using rule 123 (Expression -> Expression OR Expression .)
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167

  ! EQUALS          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! NOT_ASSIGN      [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! LESSER          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! GREATER         [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! XOR             [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! DIVIDE          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! MOD             [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! LSHIFT          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! RSHIFT          [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! PLUS            [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! MINUS           [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! STAR            [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! AND             [ reduce using rule 123 (Expression -> Expression OR Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 158 ]


state 210

    (124) Expression -> Expression XOR Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 124 (Expression -> Expression XOR Expression .)
    LOGICAL_AND     reduce using rule 124 (Expression -> Expression XOR Expression .)
    OR              reduce using rule 124 (Expression -> Expression XOR Expression .)
    XOR             reduce using rule 124 (Expression -> Expression XOR Expression .)
    RSQUARE         reduce using rule 124 (Expression -> Expression XOR Expression .)
    COMMA           reduce using rule 124 (Expression -> Expression XOR Expression .)
    SEMICOLON       reduce using rule 124 (Expression -> Expression XOR Expression .)
    RPAREN          reduce using rule 124 (Expression -> Expression XOR Expression .)
    COLON           reduce using rule 124 (Expression -> Expression XOR Expression .)
    LCURL           reduce using rule 124 (Expression -> Expression XOR Expression .)
    PLUS_ASSIGN     reduce using rule 124 (Expression -> Expression XOR Expression .)
    MINUS_ASSIGN    reduce using rule 124 (Expression -> Expression XOR Expression .)
    STAR_ASSIGN     reduce using rule 124 (Expression -> Expression XOR Expression .)
    DIVIDE_ASSIGN   reduce using rule 124 (Expression -> Expression XOR Expression .)
    MOD_ASSIGN      reduce using rule 124 (Expression -> Expression XOR Expression .)
    AND_ASSIGN      reduce using rule 124 (Expression -> Expression XOR Expression .)
    OR_ASSIGN       reduce using rule 124 (Expression -> Expression XOR Expression .)
    XOR_ASSIGN      reduce using rule 124 (Expression -> Expression XOR Expression .)
    LSHIFT_ASSIGN   reduce using rule 124 (Expression -> Expression XOR Expression .)
    RSHIFT_ASSIGN   reduce using rule 124 (Expression -> Expression XOR Expression .)
    ASSIGN          reduce using rule 124 (Expression -> Expression XOR Expression .)
    INCR            reduce using rule 124 (Expression -> Expression XOR Expression .)
    DECR            reduce using rule 124 (Expression -> Expression XOR Expression .)
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167

  ! EQUALS          [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! NOT_ASSIGN      [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! LESSER          [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! GREATER         [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! DIVIDE          [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! MOD             [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! LSHIFT          [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! RSHIFT          [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! PLUS            [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! MINUS           [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! STAR            [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! AND             [ reduce using rule 124 (Expression -> Expression XOR Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]


state 211

    (125) Expression -> Expression DIVIDE Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    LOGICAL_AND     reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    EQUALS          reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    NOT_ASSIGN      reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    LESSER          reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    GREATER         reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    LESS_EQUALS     reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    MORE_EQUALS     reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    OR              reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    XOR             reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    DIVIDE          reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    MOD             reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    LSHIFT          reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    RSHIFT          reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    PLUS            reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    MINUS           reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    STAR            reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    AND             reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    RSQUARE         reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    COMMA           reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    SEMICOLON       reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    RPAREN          reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    COLON           reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    LCURL           reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    PLUS_ASSIGN     reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    MINUS_ASSIGN    reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    STAR_ASSIGN     reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    DIVIDE_ASSIGN   reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    MOD_ASSIGN      reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    AND_ASSIGN      reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    OR_ASSIGN       reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    XOR_ASSIGN      reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    LSHIFT_ASSIGN   reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    RSHIFT_ASSIGN   reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    ASSIGN          reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    INCR            reduce using rule 125 (Expression -> Expression DIVIDE Expression .)
    DECR            reduce using rule 125 (Expression -> Expression DIVIDE Expression .)

  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! LESSER          [ shift and go to state 154 ]
  ! GREATER         [ shift and go to state 155 ]
  ! LESS_EQUALS     [ shift and go to state 156 ]
  ! MORE_EQUALS     [ shift and go to state 157 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! DIVIDE          [ shift and go to state 160 ]
  ! MOD             [ shift and go to state 161 ]
  ! LSHIFT          [ shift and go to state 162 ]
  ! RSHIFT          [ shift and go to state 163 ]
  ! PLUS            [ shift and go to state 164 ]
  ! MINUS           [ shift and go to state 165 ]
  ! STAR            [ shift and go to state 166 ]
  ! AND             [ shift and go to state 167 ]


state 212

    (126) Expression -> Expression MOD Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 126 (Expression -> Expression MOD Expression .)
    LOGICAL_AND     reduce using rule 126 (Expression -> Expression MOD Expression .)
    EQUALS          reduce using rule 126 (Expression -> Expression MOD Expression .)
    NOT_ASSIGN      reduce using rule 126 (Expression -> Expression MOD Expression .)
    LESSER          reduce using rule 126 (Expression -> Expression MOD Expression .)
    GREATER         reduce using rule 126 (Expression -> Expression MOD Expression .)
    LESS_EQUALS     reduce using rule 126 (Expression -> Expression MOD Expression .)
    MORE_EQUALS     reduce using rule 126 (Expression -> Expression MOD Expression .)
    OR              reduce using rule 126 (Expression -> Expression MOD Expression .)
    XOR             reduce using rule 126 (Expression -> Expression MOD Expression .)
    DIVIDE          reduce using rule 126 (Expression -> Expression MOD Expression .)
    MOD             reduce using rule 126 (Expression -> Expression MOD Expression .)
    LSHIFT          reduce using rule 126 (Expression -> Expression MOD Expression .)
    RSHIFT          reduce using rule 126 (Expression -> Expression MOD Expression .)
    PLUS            reduce using rule 126 (Expression -> Expression MOD Expression .)
    MINUS           reduce using rule 126 (Expression -> Expression MOD Expression .)
    STAR            reduce using rule 126 (Expression -> Expression MOD Expression .)
    AND             reduce using rule 126 (Expression -> Expression MOD Expression .)
    RSQUARE         reduce using rule 126 (Expression -> Expression MOD Expression .)
    COMMA           reduce using rule 126 (Expression -> Expression MOD Expression .)
    SEMICOLON       reduce using rule 126 (Expression -> Expression MOD Expression .)
    RPAREN          reduce using rule 126 (Expression -> Expression MOD Expression .)
    COLON           reduce using rule 126 (Expression -> Expression MOD Expression .)
    LCURL           reduce using rule 126 (Expression -> Expression MOD Expression .)
    PLUS_ASSIGN     reduce using rule 126 (Expression -> Expression MOD Expression .)
    MINUS_ASSIGN    reduce using rule 126 (Expression -> Expression MOD Expression .)
    STAR_ASSIGN     reduce using rule 126 (Expression -> Expression MOD Expression .)
    DIVIDE_ASSIGN   reduce using rule 126 (Expression -> Expression MOD Expression .)
    MOD_ASSIGN      reduce using rule 126 (Expression -> Expression MOD Expression .)
    AND_ASSIGN      reduce using rule 126 (Expression -> Expression MOD Expression .)
    OR_ASSIGN       reduce using rule 126 (Expression -> Expression MOD Expression .)
    XOR_ASSIGN      reduce using rule 126 (Expression -> Expression MOD Expression .)
    LSHIFT_ASSIGN   reduce using rule 126 (Expression -> Expression MOD Expression .)
    RSHIFT_ASSIGN   reduce using rule 126 (Expression -> Expression MOD Expression .)
    ASSIGN          reduce using rule 126 (Expression -> Expression MOD Expression .)
    INCR            reduce using rule 126 (Expression -> Expression MOD Expression .)
    DECR            reduce using rule 126 (Expression -> Expression MOD Expression .)

  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! LESSER          [ shift and go to state 154 ]
  ! GREATER         [ shift and go to state 155 ]
  ! LESS_EQUALS     [ shift and go to state 156 ]
  ! MORE_EQUALS     [ shift and go to state 157 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! DIVIDE          [ shift and go to state 160 ]
  ! MOD             [ shift and go to state 161 ]
  ! LSHIFT          [ shift and go to state 162 ]
  ! RSHIFT          [ shift and go to state 163 ]
  ! PLUS            [ shift and go to state 164 ]
  ! MINUS           [ shift and go to state 165 ]
  ! STAR            [ shift and go to state 166 ]
  ! AND             [ shift and go to state 167 ]


state 213

    (127) Expression -> Expression LSHIFT Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    LOGICAL_AND     reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    EQUALS          reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    NOT_ASSIGN      reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    LESSER          reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    GREATER         reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    LESS_EQUALS     reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    MORE_EQUALS     reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    OR              reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    XOR             reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    LSHIFT          reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    RSHIFT          reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    AND             reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    RSQUARE         reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    COMMA           reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    SEMICOLON       reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    RPAREN          reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    COLON           reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    LCURL           reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    PLUS_ASSIGN     reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    MINUS_ASSIGN    reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    STAR_ASSIGN     reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    DIVIDE_ASSIGN   reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    MOD_ASSIGN      reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    AND_ASSIGN      reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    OR_ASSIGN       reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    XOR_ASSIGN      reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    LSHIFT_ASSIGN   reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    RSHIFT_ASSIGN   reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    ASSIGN          reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    INCR            reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    DECR            reduce using rule 127 (Expression -> Expression LSHIFT Expression .)
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166

  ! DIVIDE          [ reduce using rule 127 (Expression -> Expression LSHIFT Expression .) ]
  ! MOD             [ reduce using rule 127 (Expression -> Expression LSHIFT Expression .) ]
  ! PLUS            [ reduce using rule 127 (Expression -> Expression LSHIFT Expression .) ]
  ! MINUS           [ reduce using rule 127 (Expression -> Expression LSHIFT Expression .) ]
  ! STAR            [ reduce using rule 127 (Expression -> Expression LSHIFT Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! LESSER          [ shift and go to state 154 ]
  ! GREATER         [ shift and go to state 155 ]
  ! LESS_EQUALS     [ shift and go to state 156 ]
  ! MORE_EQUALS     [ shift and go to state 157 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! LSHIFT          [ shift and go to state 162 ]
  ! RSHIFT          [ shift and go to state 163 ]
  ! AND             [ shift and go to state 167 ]


state 214

    (128) Expression -> Expression RSHIFT Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    LOGICAL_AND     reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    EQUALS          reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    NOT_ASSIGN      reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    LESSER          reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    GREATER         reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    LESS_EQUALS     reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    MORE_EQUALS     reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    OR              reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    XOR             reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    LSHIFT          reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    RSHIFT          reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    AND             reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    RSQUARE         reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    COMMA           reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    SEMICOLON       reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    RPAREN          reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    COLON           reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    LCURL           reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    PLUS_ASSIGN     reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    MINUS_ASSIGN    reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    STAR_ASSIGN     reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    DIVIDE_ASSIGN   reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    MOD_ASSIGN      reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    AND_ASSIGN      reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    OR_ASSIGN       reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    XOR_ASSIGN      reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    LSHIFT_ASSIGN   reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    RSHIFT_ASSIGN   reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    ASSIGN          reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    INCR            reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    DECR            reduce using rule 128 (Expression -> Expression RSHIFT Expression .)
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166

  ! DIVIDE          [ reduce using rule 128 (Expression -> Expression RSHIFT Expression .) ]
  ! MOD             [ reduce using rule 128 (Expression -> Expression RSHIFT Expression .) ]
  ! PLUS            [ reduce using rule 128 (Expression -> Expression RSHIFT Expression .) ]
  ! MINUS           [ reduce using rule 128 (Expression -> Expression RSHIFT Expression .) ]
  ! STAR            [ reduce using rule 128 (Expression -> Expression RSHIFT Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! LESSER          [ shift and go to state 154 ]
  ! GREATER         [ shift and go to state 155 ]
  ! LESS_EQUALS     [ shift and go to state 156 ]
  ! MORE_EQUALS     [ shift and go to state 157 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! LSHIFT          [ shift and go to state 162 ]
  ! RSHIFT          [ shift and go to state 163 ]
  ! AND             [ shift and go to state 167 ]


state 215

    (129) Expression -> Expression PLUS Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 129 (Expression -> Expression PLUS Expression .)
    LOGICAL_AND     reduce using rule 129 (Expression -> Expression PLUS Expression .)
    EQUALS          reduce using rule 129 (Expression -> Expression PLUS Expression .)
    NOT_ASSIGN      reduce using rule 129 (Expression -> Expression PLUS Expression .)
    LESSER          reduce using rule 129 (Expression -> Expression PLUS Expression .)
    GREATER         reduce using rule 129 (Expression -> Expression PLUS Expression .)
    LESS_EQUALS     reduce using rule 129 (Expression -> Expression PLUS Expression .)
    MORE_EQUALS     reduce using rule 129 (Expression -> Expression PLUS Expression .)
    OR              reduce using rule 129 (Expression -> Expression PLUS Expression .)
    XOR             reduce using rule 129 (Expression -> Expression PLUS Expression .)
    LSHIFT          reduce using rule 129 (Expression -> Expression PLUS Expression .)
    RSHIFT          reduce using rule 129 (Expression -> Expression PLUS Expression .)
    PLUS            reduce using rule 129 (Expression -> Expression PLUS Expression .)
    MINUS           reduce using rule 129 (Expression -> Expression PLUS Expression .)
    AND             reduce using rule 129 (Expression -> Expression PLUS Expression .)
    RSQUARE         reduce using rule 129 (Expression -> Expression PLUS Expression .)
    COMMA           reduce using rule 129 (Expression -> Expression PLUS Expression .)
    SEMICOLON       reduce using rule 129 (Expression -> Expression PLUS Expression .)
    RPAREN          reduce using rule 129 (Expression -> Expression PLUS Expression .)
    COLON           reduce using rule 129 (Expression -> Expression PLUS Expression .)
    LCURL           reduce using rule 129 (Expression -> Expression PLUS Expression .)
    PLUS_ASSIGN     reduce using rule 129 (Expression -> Expression PLUS Expression .)
    MINUS_ASSIGN    reduce using rule 129 (Expression -> Expression PLUS Expression .)
    STAR_ASSIGN     reduce using rule 129 (Expression -> Expression PLUS Expression .)
    DIVIDE_ASSIGN   reduce using rule 129 (Expression -> Expression PLUS Expression .)
    MOD_ASSIGN      reduce using rule 129 (Expression -> Expression PLUS Expression .)
    AND_ASSIGN      reduce using rule 129 (Expression -> Expression PLUS Expression .)
    OR_ASSIGN       reduce using rule 129 (Expression -> Expression PLUS Expression .)
    XOR_ASSIGN      reduce using rule 129 (Expression -> Expression PLUS Expression .)
    LSHIFT_ASSIGN   reduce using rule 129 (Expression -> Expression PLUS Expression .)
    RSHIFT_ASSIGN   reduce using rule 129 (Expression -> Expression PLUS Expression .)
    ASSIGN          reduce using rule 129 (Expression -> Expression PLUS Expression .)
    INCR            reduce using rule 129 (Expression -> Expression PLUS Expression .)
    DECR            reduce using rule 129 (Expression -> Expression PLUS Expression .)
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    STAR            shift and go to state 166

  ! DIVIDE          [ reduce using rule 129 (Expression -> Expression PLUS Expression .) ]
  ! MOD             [ reduce using rule 129 (Expression -> Expression PLUS Expression .) ]
  ! STAR            [ reduce using rule 129 (Expression -> Expression PLUS Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! LESSER          [ shift and go to state 154 ]
  ! GREATER         [ shift and go to state 155 ]
  ! LESS_EQUALS     [ shift and go to state 156 ]
  ! MORE_EQUALS     [ shift and go to state 157 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! LSHIFT          [ shift and go to state 162 ]
  ! RSHIFT          [ shift and go to state 163 ]
  ! PLUS            [ shift and go to state 164 ]
  ! MINUS           [ shift and go to state 165 ]
  ! AND             [ shift and go to state 167 ]


state 216

    (130) Expression -> Expression MINUS Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 130 (Expression -> Expression MINUS Expression .)
    LOGICAL_AND     reduce using rule 130 (Expression -> Expression MINUS Expression .)
    EQUALS          reduce using rule 130 (Expression -> Expression MINUS Expression .)
    NOT_ASSIGN      reduce using rule 130 (Expression -> Expression MINUS Expression .)
    LESSER          reduce using rule 130 (Expression -> Expression MINUS Expression .)
    GREATER         reduce using rule 130 (Expression -> Expression MINUS Expression .)
    LESS_EQUALS     reduce using rule 130 (Expression -> Expression MINUS Expression .)
    MORE_EQUALS     reduce using rule 130 (Expression -> Expression MINUS Expression .)
    OR              reduce using rule 130 (Expression -> Expression MINUS Expression .)
    XOR             reduce using rule 130 (Expression -> Expression MINUS Expression .)
    LSHIFT          reduce using rule 130 (Expression -> Expression MINUS Expression .)
    RSHIFT          reduce using rule 130 (Expression -> Expression MINUS Expression .)
    PLUS            reduce using rule 130 (Expression -> Expression MINUS Expression .)
    MINUS           reduce using rule 130 (Expression -> Expression MINUS Expression .)
    AND             reduce using rule 130 (Expression -> Expression MINUS Expression .)
    RSQUARE         reduce using rule 130 (Expression -> Expression MINUS Expression .)
    COMMA           reduce using rule 130 (Expression -> Expression MINUS Expression .)
    SEMICOLON       reduce using rule 130 (Expression -> Expression MINUS Expression .)
    RPAREN          reduce using rule 130 (Expression -> Expression MINUS Expression .)
    COLON           reduce using rule 130 (Expression -> Expression MINUS Expression .)
    LCURL           reduce using rule 130 (Expression -> Expression MINUS Expression .)
    PLUS_ASSIGN     reduce using rule 130 (Expression -> Expression MINUS Expression .)
    MINUS_ASSIGN    reduce using rule 130 (Expression -> Expression MINUS Expression .)
    STAR_ASSIGN     reduce using rule 130 (Expression -> Expression MINUS Expression .)
    DIVIDE_ASSIGN   reduce using rule 130 (Expression -> Expression MINUS Expression .)
    MOD_ASSIGN      reduce using rule 130 (Expression -> Expression MINUS Expression .)
    AND_ASSIGN      reduce using rule 130 (Expression -> Expression MINUS Expression .)
    OR_ASSIGN       reduce using rule 130 (Expression -> Expression MINUS Expression .)
    XOR_ASSIGN      reduce using rule 130 (Expression -> Expression MINUS Expression .)
    LSHIFT_ASSIGN   reduce using rule 130 (Expression -> Expression MINUS Expression .)
    RSHIFT_ASSIGN   reduce using rule 130 (Expression -> Expression MINUS Expression .)
    ASSIGN          reduce using rule 130 (Expression -> Expression MINUS Expression .)
    INCR            reduce using rule 130 (Expression -> Expression MINUS Expression .)
    DECR            reduce using rule 130 (Expression -> Expression MINUS Expression .)
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    STAR            shift and go to state 166

  ! DIVIDE          [ reduce using rule 130 (Expression -> Expression MINUS Expression .) ]
  ! MOD             [ reduce using rule 130 (Expression -> Expression MINUS Expression .) ]
  ! STAR            [ reduce using rule 130 (Expression -> Expression MINUS Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! LESSER          [ shift and go to state 154 ]
  ! GREATER         [ shift and go to state 155 ]
  ! LESS_EQUALS     [ shift and go to state 156 ]
  ! MORE_EQUALS     [ shift and go to state 157 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! LSHIFT          [ shift and go to state 162 ]
  ! RSHIFT          [ shift and go to state 163 ]
  ! PLUS            [ shift and go to state 164 ]
  ! MINUS           [ shift and go to state 165 ]
  ! AND             [ shift and go to state 167 ]


state 217

    (131) Expression -> Expression STAR Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 131 (Expression -> Expression STAR Expression .)
    LOGICAL_AND     reduce using rule 131 (Expression -> Expression STAR Expression .)
    EQUALS          reduce using rule 131 (Expression -> Expression STAR Expression .)
    NOT_ASSIGN      reduce using rule 131 (Expression -> Expression STAR Expression .)
    LESSER          reduce using rule 131 (Expression -> Expression STAR Expression .)
    GREATER         reduce using rule 131 (Expression -> Expression STAR Expression .)
    LESS_EQUALS     reduce using rule 131 (Expression -> Expression STAR Expression .)
    MORE_EQUALS     reduce using rule 131 (Expression -> Expression STAR Expression .)
    OR              reduce using rule 131 (Expression -> Expression STAR Expression .)
    XOR             reduce using rule 131 (Expression -> Expression STAR Expression .)
    DIVIDE          reduce using rule 131 (Expression -> Expression STAR Expression .)
    MOD             reduce using rule 131 (Expression -> Expression STAR Expression .)
    LSHIFT          reduce using rule 131 (Expression -> Expression STAR Expression .)
    RSHIFT          reduce using rule 131 (Expression -> Expression STAR Expression .)
    PLUS            reduce using rule 131 (Expression -> Expression STAR Expression .)
    MINUS           reduce using rule 131 (Expression -> Expression STAR Expression .)
    STAR            reduce using rule 131 (Expression -> Expression STAR Expression .)
    AND             reduce using rule 131 (Expression -> Expression STAR Expression .)
    RSQUARE         reduce using rule 131 (Expression -> Expression STAR Expression .)
    COMMA           reduce using rule 131 (Expression -> Expression STAR Expression .)
    SEMICOLON       reduce using rule 131 (Expression -> Expression STAR Expression .)
    RPAREN          reduce using rule 131 (Expression -> Expression STAR Expression .)
    COLON           reduce using rule 131 (Expression -> Expression STAR Expression .)
    LCURL           reduce using rule 131 (Expression -> Expression STAR Expression .)
    PLUS_ASSIGN     reduce using rule 131 (Expression -> Expression STAR Expression .)
    MINUS_ASSIGN    reduce using rule 131 (Expression -> Expression STAR Expression .)
    STAR_ASSIGN     reduce using rule 131 (Expression -> Expression STAR Expression .)
    DIVIDE_ASSIGN   reduce using rule 131 (Expression -> Expression STAR Expression .)
    MOD_ASSIGN      reduce using rule 131 (Expression -> Expression STAR Expression .)
    AND_ASSIGN      reduce using rule 131 (Expression -> Expression STAR Expression .)
    OR_ASSIGN       reduce using rule 131 (Expression -> Expression STAR Expression .)
    XOR_ASSIGN      reduce using rule 131 (Expression -> Expression STAR Expression .)
    LSHIFT_ASSIGN   reduce using rule 131 (Expression -> Expression STAR Expression .)
    RSHIFT_ASSIGN   reduce using rule 131 (Expression -> Expression STAR Expression .)
    ASSIGN          reduce using rule 131 (Expression -> Expression STAR Expression .)
    INCR            reduce using rule 131 (Expression -> Expression STAR Expression .)
    DECR            reduce using rule 131 (Expression -> Expression STAR Expression .)

  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! EQUALS          [ shift and go to state 152 ]
  ! NOT_ASSIGN      [ shift and go to state 153 ]
  ! LESSER          [ shift and go to state 154 ]
  ! GREATER         [ shift and go to state 155 ]
  ! LESS_EQUALS     [ shift and go to state 156 ]
  ! MORE_EQUALS     [ shift and go to state 157 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! DIVIDE          [ shift and go to state 160 ]
  ! MOD             [ shift and go to state 161 ]
  ! LSHIFT          [ shift and go to state 162 ]
  ! RSHIFT          [ shift and go to state 163 ]
  ! PLUS            [ shift and go to state 164 ]
  ! MINUS           [ shift and go to state 165 ]
  ! STAR            [ shift and go to state 166 ]
  ! AND             [ shift and go to state 167 ]


state 218

    (132) Expression -> Expression AND Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    LOGICAL_OR      reduce using rule 132 (Expression -> Expression AND Expression .)
    LOGICAL_AND     reduce using rule 132 (Expression -> Expression AND Expression .)
    OR              reduce using rule 132 (Expression -> Expression AND Expression .)
    XOR             reduce using rule 132 (Expression -> Expression AND Expression .)
    AND             reduce using rule 132 (Expression -> Expression AND Expression .)
    RSQUARE         reduce using rule 132 (Expression -> Expression AND Expression .)
    COMMA           reduce using rule 132 (Expression -> Expression AND Expression .)
    SEMICOLON       reduce using rule 132 (Expression -> Expression AND Expression .)
    RPAREN          reduce using rule 132 (Expression -> Expression AND Expression .)
    COLON           reduce using rule 132 (Expression -> Expression AND Expression .)
    LCURL           reduce using rule 132 (Expression -> Expression AND Expression .)
    PLUS_ASSIGN     reduce using rule 132 (Expression -> Expression AND Expression .)
    MINUS_ASSIGN    reduce using rule 132 (Expression -> Expression AND Expression .)
    STAR_ASSIGN     reduce using rule 132 (Expression -> Expression AND Expression .)
    DIVIDE_ASSIGN   reduce using rule 132 (Expression -> Expression AND Expression .)
    MOD_ASSIGN      reduce using rule 132 (Expression -> Expression AND Expression .)
    AND_ASSIGN      reduce using rule 132 (Expression -> Expression AND Expression .)
    OR_ASSIGN       reduce using rule 132 (Expression -> Expression AND Expression .)
    XOR_ASSIGN      reduce using rule 132 (Expression -> Expression AND Expression .)
    LSHIFT_ASSIGN   reduce using rule 132 (Expression -> Expression AND Expression .)
    RSHIFT_ASSIGN   reduce using rule 132 (Expression -> Expression AND Expression .)
    ASSIGN          reduce using rule 132 (Expression -> Expression AND Expression .)
    INCR            reduce using rule 132 (Expression -> Expression AND Expression .)
    DECR            reduce using rule 132 (Expression -> Expression AND Expression .)
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166

  ! EQUALS          [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! NOT_ASSIGN      [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! LESSER          [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! GREATER         [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! LESS_EQUALS     [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! MORE_EQUALS     [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! DIVIDE          [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! MOD             [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! LSHIFT          [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! RSHIFT          [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! PLUS            [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! MINUS           [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! STAR            [ reduce using rule 132 (Expression -> Expression AND Expression .) ]
  ! LOGICAL_OR      [ shift and go to state 150 ]
  ! LOGICAL_AND     [ shift and go to state 151 ]
  ! OR              [ shift and go to state 158 ]
  ! XOR             [ shift and go to state 159 ]
  ! AND             [ shift and go to state 167 ]


state 219

    (104) PrimaryExpr -> PrimaryExpr LSQUARE Expression . RSQUARE
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression
    (133) ExpressionOpt -> Expression .

    RSQUARE         shift and go to state 237
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167
    COLON           reduce using rule 133 (ExpressionOpt -> Expression .)


state 220

    (109) Slice -> LSQUARE ExpressionOpt . COLON ExpressionOpt RSQUARE
    (110) Slice -> LSQUARE ExpressionOpt . COLON Expression COLON Expression RSQUARE

    COLON           shift and go to state 238


state 221

    (134) ExpressionOpt -> epsilon .

    COLON           reduce using rule 134 (ExpressionOpt -> epsilon .)
    RSQUARE         reduce using rule 134 (ExpressionOpt -> epsilon .)


state 222

    (107) PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt . RPAREN

    RPAREN          shift and go to state 239


state 223

    (112) ExpressionListTypeOpt -> ExpressionList .

    RPAREN          reduce using rule 112 (ExpressionListTypeOpt -> ExpressionList .)


state 224

    (113) ExpressionListTypeOpt -> epsilon .

    RPAREN          reduce using rule 113 (ExpressionListTypeOpt -> epsilon .)


state 225

    (108) Selector -> DOT IDENTIFIER .

    LSQUARE         reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    LPAREN          reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    DOT             reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    LOGICAL_OR      reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    LOGICAL_AND     reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    EQUALS          reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    LESSER          reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    GREATER         reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    LESS_EQUALS     reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    MORE_EQUALS     reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    OR              reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    XOR             reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    DIVIDE          reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    MOD             reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    LSHIFT          reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    RSHIFT          reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    PLUS            reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    MINUS           reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    STAR            reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    AND             reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    RSQUARE         reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    COMMA           reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    SEMICOLON       reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    RPAREN          reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    COLON           reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    LCURL           reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    AND_ASSIGN      reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    OR_ASSIGN       reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    ASSIGN          reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    INCR            reduce using rule 108 (Selector -> DOT IDENTIFIER .)
    DECR            reduce using rule 108 (Selector -> DOT IDENTIFIER .)


state 226

    (111) TypeAssertion -> DOT LPAREN . Type RPAREN
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    Type                           shift and go to state 240
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 227

    (85) Operand -> LPAREN Expression RPAREN .

    LSQUARE         reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    DOT             reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    LOGICAL_OR      reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    LOGICAL_AND     reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    NOT_ASSIGN      reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    LESSER          reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    GREATER         reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    LESS_EQUALS     reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    MORE_EQUALS     reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    OR              reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    XOR             reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    MOD             reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    PLUS            reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    MINUS           reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    STAR            reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    AND             reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    COMMA           reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    COLON           reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    LCURL           reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    PLUS_ASSIGN     reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    MINUS_ASSIGN    reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    STAR_ASSIGN     reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    MOD_ASSIGN      reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    AND_ASSIGN      reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    INCR            reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)
    DECR            reduce using rule 85 (Operand -> LPAREN Expression RPAREN .)


state 228

    (142) Conversion -> TYPECAST Type LPAREN . Expression RPAREN
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 241
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 229

    (23) StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep . RCURL EndScope
    (24) FieldDeclRep -> FieldDeclRep . FieldDecl SEMICOLON
    (26) FieldDecl -> . IdentifierList Type
    (53) IdentifierList -> . IDENTIFIER IdentifierRep

    RCURL           shift and go to state 242
    IDENTIFIER      shift and go to state 37

    FieldDecl                      shift and go to state 243
    IdentifierList                 shift and go to state 244

state 230

    (25) FieldDeclRep -> epsilon .

    RCURL           reduce using rule 25 (FieldDeclRep -> epsilon .)
    IDENTIFIER      reduce using rule 25 (FieldDeclRep -> epsilon .)


state 231

    (57) ExpressionRep -> ExpressionRep COMMA . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 245
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 232

    (39) Block -> LCURL StatementList . RCURL

    RCURL           shift and go to state 246


state 233

    (40) StatementList -> StatementRep .
    (41) StatementRep -> StatementRep . Statement SEMICOLON
    (143) Statement -> . Declaration
    (144) Statement -> . LabeledStmt
    (145) Statement -> . SimpleStmt
    (146) Statement -> . ReturnStmt
    (147) Statement -> . BreakStmt
    (148) Statement -> . ContinueStmt
    (149) Statement -> . GotoStmt
    (150) Statement -> . CreateScope Block EndScope
    (151) Statement -> . IfStmt
    (152) Statement -> . SwitchStmt
    (153) Statement -> . ForStmt
    (154) Statement -> . PrintStmt
    (155) Statement -> . ScanStmt
    (43) Declaration -> . ConstDecl
    (44) Declaration -> . TypeDecl
    (45) Declaration -> . VarDecl
    (164) LabeledStmt -> . Label COLON Statement
    (159) SimpleStmt -> . epsilon
    (160) SimpleStmt -> . ExpressionStmt
    (161) SimpleStmt -> . IncDecStmt
    (162) SimpleStmt -> . Assignment
    (163) SimpleStmt -> . ShortVarDecl
    (202) ReturnStmt -> . RETURN ExpressionPureOpt
    (205) BreakStmt -> . BREAK LabelOpt
    (206) ContinueStmt -> . CONTINUE LabelOpt
    (209) GotoStmt -> . GOTO Label
    (77) CreateScope -> .
    (182) IfStmt -> . IF Expression CreateScope Block EndScope ElseOpt
    (186) SwitchStmt -> . ExprSwitchStmt
    (194) ForStmt -> . FOR CreateScope ConditionBlockOpt Block EndScope
    (156) PrintStmt -> . PRINT PD Expression
    (157) PrintStmt -> . PRINT PS Expression
    (158) ScanStmt -> . SCAN Expression
    (48) ConstDecl -> . CONST ConstSpec
    (49) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (65) VarDecl -> . VAR VarSpec
    (66) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (165) Label -> . IDENTIFIER
    (226) epsilon -> .
    (166) ExpressionStmt -> . Expression
    (167) IncDecStmt -> . Expression INCR
    (168) IncDecStmt -> . Expression DECR
    (169) Assignment -> . ExpressionList assign_op ExpressionList
    (73) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (187) ExprSwitchStmt -> . SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (56) ExpressionList -> . Expression ExpressionRep
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    RCURL           reduce using rule 40 (StatementList -> StatementRep .)
    CASE            reduce using rule 40 (StatementList -> StatementRep .)
    DEFAULT         reduce using rule 40 (StatementList -> StatementRep .)
    RETURN          shift and go to state 267
    BREAK           shift and go to state 268
    CONTINUE        shift and go to state 269
    GOTO            shift and go to state 270
    LCURL           reduce using rule 77 (CreateScope -> .)
    IF              shift and go to state 271
    FOR             shift and go to state 274
    PRINT           shift and go to state 275
    SCAN            shift and go to state 276
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23
    IDENTIFIER      shift and go to state 277
    SEMICOLON       reduce using rule 226 (epsilon -> .)
    SWITCH          shift and go to state 279
    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Statement                      shift and go to state 247
    Declaration                    shift and go to state 248
    LabeledStmt                    shift and go to state 249
    SimpleStmt                     shift and go to state 250
    ReturnStmt                     shift and go to state 251
    BreakStmt                      shift and go to state 252
    ContinueStmt                   shift and go to state 253
    GotoStmt                       shift and go to state 254
    CreateScope                    shift and go to state 255
    IfStmt                         shift and go to state 256
    SwitchStmt                     shift and go to state 257
    ForStmt                        shift and go to state 258
    PrintStmt                      shift and go to state 259
    ScanStmt                       shift and go to state 260
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19
    Label                          shift and go to state 261
    epsilon                        shift and go to state 262
    ExpressionStmt                 shift and go to state 263
    IncDecStmt                     shift and go to state 264
    Assignment                     shift and go to state 265
    ShortVarDecl                   shift and go to state 266
    Expression                     shift and go to state 272
    ExprSwitchStmt                 shift and go to state 273
    ExpressionList                 shift and go to state 278
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 234

    (42) StatementRep -> epsilon .

    RETURN          reduce using rule 42 (StatementRep -> epsilon .)
    BREAK           reduce using rule 42 (StatementRep -> epsilon .)
    CONTINUE        reduce using rule 42 (StatementRep -> epsilon .)
    GOTO            reduce using rule 42 (StatementRep -> epsilon .)
    IF              reduce using rule 42 (StatementRep -> epsilon .)
    FOR             reduce using rule 42 (StatementRep -> epsilon .)
    PRINT           reduce using rule 42 (StatementRep -> epsilon .)
    SCAN            reduce using rule 42 (StatementRep -> epsilon .)
    CONST           reduce using rule 42 (StatementRep -> epsilon .)
    TYPE            reduce using rule 42 (StatementRep -> epsilon .)
    VAR             reduce using rule 42 (StatementRep -> epsilon .)
    IDENTIFIER      reduce using rule 42 (StatementRep -> epsilon .)
    SWITCH          reduce using rule 42 (StatementRep -> epsilon .)
    NOT             reduce using rule 42 (StatementRep -> epsilon .)
    PLUS            reduce using rule 42 (StatementRep -> epsilon .)
    MINUS           reduce using rule 42 (StatementRep -> epsilon .)
    STAR            reduce using rule 42 (StatementRep -> epsilon .)
    AND             reduce using rule 42 (StatementRep -> epsilon .)
    LPAREN          reduce using rule 42 (StatementRep -> epsilon .)
    TYPECAST        reduce using rule 42 (StatementRep -> epsilon .)
    SEMICOLON       reduce using rule 42 (StatementRep -> epsilon .)
    LCURL           reduce using rule 42 (StatementRep -> epsilon .)
    INTEGER         reduce using rule 42 (StatementRep -> epsilon .)
    OCTAL           reduce using rule 42 (StatementRep -> epsilon .)
    HEX             reduce using rule 42 (StatementRep -> epsilon .)
    FLOAT           reduce using rule 42 (StatementRep -> epsilon .)
    IMAGINARY       reduce using rule 42 (StatementRep -> epsilon .)
    RUNE            reduce using rule 42 (StatementRep -> epsilon .)
    STRING          reduce using rule 42 (StatementRep -> epsilon .)
    RCURL           reduce using rule 42 (StatementRep -> epsilon .)
    CASE            reduce using rule 42 (StatementRep -> epsilon .)
    DEFAULT         reduce using rule 42 (StatementRep -> epsilon .)


state 235

    (36) ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .

    COMMA           reduce using rule 36 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)
    RPAREN          reduce using rule 36 (ParameterDeclCommaRep -> ParameterDecl COMMA ParameterDecl .)


state 236

    (35) ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .

    COMMA           reduce using rule 35 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)
    RPAREN          reduce using rule 35 (ParameterDeclCommaRep -> ParameterDeclCommaRep COMMA ParameterDecl .)


state 237

    (104) PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .

    LSQUARE         reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LPAREN          reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DOT             reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LOGICAL_OR      reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LOGICAL_AND     reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    EQUALS          reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    NOT_ASSIGN      reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LESSER          reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    GREATER         reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LESS_EQUALS     reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MORE_EQUALS     reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    OR              reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    XOR             reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DIVIDE          reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MOD             reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LSHIFT          reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RSHIFT          reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    PLUS            reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MINUS           reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    STAR            reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    AND             reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RSQUARE         reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    COMMA           reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    SEMICOLON       reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RPAREN          reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    COLON           reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LCURL           reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    PLUS_ASSIGN     reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MINUS_ASSIGN    reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    STAR_ASSIGN     reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DIVIDE_ASSIGN   reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    MOD_ASSIGN      reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    AND_ASSIGN      reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    OR_ASSIGN       reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    XOR_ASSIGN      reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    LSHIFT_ASSIGN   reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    RSHIFT_ASSIGN   reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    ASSIGN          reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    INCR            reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)
    DECR            reduce using rule 104 (PrimaryExpr -> PrimaryExpr LSQUARE Expression RSQUARE .)


state 238

    (109) Slice -> LSQUARE ExpressionOpt COLON . ExpressionOpt RSQUARE
    (110) Slice -> LSQUARE ExpressionOpt COLON . Expression COLON Expression RSQUARE
    (133) ExpressionOpt -> . Expression
    (134) ExpressionOpt -> . epsilon
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (226) epsilon -> .
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    RSQUARE         reduce using rule 226 (epsilon -> .)
    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    ExpressionOpt                  shift and go to state 280
    Expression                     shift and go to state 281
    epsilon                        shift and go to state 221
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 239

    (107) PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .

    LSQUARE         reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LPAREN          reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DOT             reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LOGICAL_OR      reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LOGICAL_AND     reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    EQUALS          reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    NOT_ASSIGN      reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LESSER          reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    GREATER         reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LESS_EQUALS     reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MORE_EQUALS     reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    OR              reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    XOR             reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE          reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MOD             reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LSHIFT          reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RSHIFT          reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS            reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS           reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    STAR            reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    AND             reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RSQUARE         reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    COMMA           reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    SEMICOLON       reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RPAREN          reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    COLON           reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LCURL           reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    PLUS_ASSIGN     reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MINUS_ASSIGN    reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    STAR_ASSIGN     reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    MOD_ASSIGN      reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    AND_ASSIGN      reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    OR_ASSIGN       reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    XOR_ASSIGN      reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    ASSIGN          reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    INCR            reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)
    DECR            reduce using rule 107 (PrimaryExpr -> PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN .)


state 240

    (111) TypeAssertion -> DOT LPAREN Type . RPAREN

    RPAREN          shift and go to state 282


state 241

    (142) Conversion -> TYPECAST Type LPAREN Expression . RPAREN
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    RPAREN          shift and go to state 283
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 242

    (23) StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL . EndScope
    (78) EndScope -> .

    ASSIGN          reduce using rule 78 (EndScope -> .)
    SEMICOLON       reduce using rule 78 (EndScope -> .)
    RPAREN          reduce using rule 78 (EndScope -> .)
    LCURL           reduce using rule 78 (EndScope -> .)
    COMMA           reduce using rule 78 (EndScope -> .)
    LPAREN          reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 284

state 243

    (24) FieldDeclRep -> FieldDeclRep FieldDecl . SEMICOLON

    SEMICOLON       shift and go to state 285


state 244

    (26) FieldDecl -> IdentifierList . Type
    (2) Type -> . TypeName
    (3) Type -> . TypeLit
    (4) Type -> . LPAREN Type RPAREN
    (5) TypeName -> . TypeToken
    (6) TypeName -> . QualifiedIdent
    (15) TypeLit -> . ArrayType
    (16) TypeLit -> . StructType
    (17) TypeLit -> . PointerType
    (7) TypeToken -> . INT_T
    (8) TypeToken -> . FLOAT_T
    (9) TypeToken -> . UINT_T
    (10) TypeToken -> . COMPLEX_T
    (11) TypeToken -> . RUNE_T
    (12) TypeToken -> . BOOL_T
    (13) TypeToken -> . STRING_T
    (14) TypeToken -> . TYPE IDENTIFIER
    (100) QualifiedIdent -> . IDENTIFIER DOT TypeName
    (20) ArrayType -> . LSQUARE ArrayLength RSQUARE ElementType
    (23) StructType -> . CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope
    (27) PointerType -> . STAR BaseType
    (76) CreateFuncScope -> .

    LPAREN          shift and go to state 55
    INT_T           shift and go to state 61
    FLOAT_T         shift and go to state 62
    UINT_T          shift and go to state 63
    COMPLEX_T       shift and go to state 64
    RUNE_T          shift and go to state 65
    BOOL_T          shift and go to state 66
    STRING_T        shift and go to state 67
    TYPE            shift and go to state 68
    IDENTIFIER      shift and go to state 69
    LSQUARE         shift and go to state 70
    STAR            shift and go to state 72
    STRUCT          reduce using rule 76 (CreateFuncScope -> .)

    Type                           shift and go to state 286
    TypeName                       shift and go to state 53
    TypeLit                        shift and go to state 54
    TypeToken                      shift and go to state 56
    QualifiedIdent                 shift and go to state 57
    ArrayType                      shift and go to state 58
    StructType                     shift and go to state 59
    PointerType                    shift and go to state 60
    CreateFuncScope                shift and go to state 71

state 245

    (57) ExpressionRep -> ExpressionRep COMMA Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    COMMA           reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    SEMICOLON       reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RPAREN          reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LCURL           reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    PLUS_ASSIGN     reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MINUS_ASSIGN    reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    STAR_ASSIGN     reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    DIVIDE_ASSIGN   reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    MOD_ASSIGN      reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    AND_ASSIGN      reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    OR_ASSIGN       reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    XOR_ASSIGN      reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LSHIFT_ASSIGN   reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    RSHIFT_ASSIGN   reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    ASSIGN          reduce using rule 57 (ExpressionRep -> ExpressionRep COMMA Expression .)
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 246

    (39) Block -> LCURL StatementList RCURL .

    SEMICOLON       reduce using rule 39 (Block -> LCURL StatementList RCURL .)
    ELSE            reduce using rule 39 (Block -> LCURL StatementList RCURL .)


state 247

    (41) StatementRep -> StatementRep Statement . SEMICOLON

    SEMICOLON       shift and go to state 287


state 248

    (143) Statement -> Declaration .

    SEMICOLON       reduce using rule 143 (Statement -> Declaration .)


state 249

    (144) Statement -> LabeledStmt .

    SEMICOLON       reduce using rule 144 (Statement -> LabeledStmt .)


state 250

    (145) Statement -> SimpleStmt .

    SEMICOLON       reduce using rule 145 (Statement -> SimpleStmt .)


state 251

    (146) Statement -> ReturnStmt .

    SEMICOLON       reduce using rule 146 (Statement -> ReturnStmt .)


state 252

    (147) Statement -> BreakStmt .

    SEMICOLON       reduce using rule 147 (Statement -> BreakStmt .)


state 253

    (148) Statement -> ContinueStmt .

    SEMICOLON       reduce using rule 148 (Statement -> ContinueStmt .)


state 254

    (149) Statement -> GotoStmt .

    SEMICOLON       reduce using rule 149 (Statement -> GotoStmt .)


state 255

    (150) Statement -> CreateScope . Block EndScope
    (39) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 194

    Block                          shift and go to state 288

state 256

    (151) Statement -> IfStmt .

    SEMICOLON       reduce using rule 151 (Statement -> IfStmt .)


state 257

    (152) Statement -> SwitchStmt .

    SEMICOLON       reduce using rule 152 (Statement -> SwitchStmt .)


state 258

    (153) Statement -> ForStmt .

    SEMICOLON       reduce using rule 153 (Statement -> ForStmt .)


state 259

    (154) Statement -> PrintStmt .

    SEMICOLON       reduce using rule 154 (Statement -> PrintStmt .)


state 260

    (155) Statement -> ScanStmt .

    SEMICOLON       reduce using rule 155 (Statement -> ScanStmt .)


state 261

    (164) LabeledStmt -> Label . COLON Statement

    COLON           shift and go to state 289


state 262

    (159) SimpleStmt -> epsilon .

    SEMICOLON       reduce using rule 159 (SimpleStmt -> epsilon .)
    LCURL           reduce using rule 159 (SimpleStmt -> epsilon .)


state 263

    (160) SimpleStmt -> ExpressionStmt .

    SEMICOLON       reduce using rule 160 (SimpleStmt -> ExpressionStmt .)
    LCURL           reduce using rule 160 (SimpleStmt -> ExpressionStmt .)


state 264

    (161) SimpleStmt -> IncDecStmt .

    SEMICOLON       reduce using rule 161 (SimpleStmt -> IncDecStmt .)
    LCURL           reduce using rule 161 (SimpleStmt -> IncDecStmt .)


state 265

    (162) SimpleStmt -> Assignment .

    SEMICOLON       reduce using rule 162 (SimpleStmt -> Assignment .)
    LCURL           reduce using rule 162 (SimpleStmt -> Assignment .)


state 266

    (163) SimpleStmt -> ShortVarDecl .

    SEMICOLON       reduce using rule 163 (SimpleStmt -> ShortVarDecl .)
    LCURL           reduce using rule 163 (SimpleStmt -> ShortVarDecl .)


state 267

    (202) ReturnStmt -> RETURN . ExpressionPureOpt
    (203) ExpressionPureOpt -> . Expression
    (204) ExpressionPureOpt -> . epsilon
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (226) epsilon -> .
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    SEMICOLON       reduce using rule 226 (epsilon -> .)
    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    ExpressionPureOpt              shift and go to state 290
    Expression                     shift and go to state 291
    epsilon                        shift and go to state 292
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 268

    (205) BreakStmt -> BREAK . LabelOpt
    (207) LabelOpt -> . Label
    (208) LabelOpt -> . epsilon
    (165) Label -> . IDENTIFIER
    (226) epsilon -> .

    IDENTIFIER      shift and go to state 296
    SEMICOLON       reduce using rule 226 (epsilon -> .)

    LabelOpt                       shift and go to state 293
    Label                          shift and go to state 294
    epsilon                        shift and go to state 295

state 269

    (206) ContinueStmt -> CONTINUE . LabelOpt
    (207) LabelOpt -> . Label
    (208) LabelOpt -> . epsilon
    (165) Label -> . IDENTIFIER
    (226) epsilon -> .

    IDENTIFIER      shift and go to state 296
    SEMICOLON       reduce using rule 226 (epsilon -> .)

    LabelOpt                       shift and go to state 297
    Label                          shift and go to state 294
    epsilon                        shift and go to state 295

state 270

    (209) GotoStmt -> GOTO . Label
    (165) Label -> . IDENTIFIER

    IDENTIFIER      shift and go to state 296

    Label                          shift and go to state 298

state 271

    (182) IfStmt -> IF . Expression CreateScope Block EndScope ElseOpt
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 299
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 272

    (166) ExpressionStmt -> Expression .
    (167) IncDecStmt -> Expression . INCR
    (168) IncDecStmt -> Expression . DECR
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression
    (56) ExpressionList -> Expression . ExpressionRep
    (57) ExpressionRep -> . ExpressionRep COMMA Expression
    (58) ExpressionRep -> . epsilon
    (226) epsilon -> .

    SEMICOLON       reduce using rule 166 (ExpressionStmt -> Expression .)
    LCURL           reduce using rule 166 (ExpressionStmt -> Expression .)
    INCR            shift and go to state 300
    DECR            shift and go to state 301
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167
    COMMA           reduce using rule 226 (epsilon -> .)
    PLUS_ASSIGN     reduce using rule 226 (epsilon -> .)
    MINUS_ASSIGN    reduce using rule 226 (epsilon -> .)
    STAR_ASSIGN     reduce using rule 226 (epsilon -> .)
    DIVIDE_ASSIGN   reduce using rule 226 (epsilon -> .)
    MOD_ASSIGN      reduce using rule 226 (epsilon -> .)
    AND_ASSIGN      reduce using rule 226 (epsilon -> .)
    OR_ASSIGN       reduce using rule 226 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 226 (epsilon -> .)
    LSHIFT_ASSIGN   reduce using rule 226 (epsilon -> .)
    RSHIFT_ASSIGN   reduce using rule 226 (epsilon -> .)
    ASSIGN          reduce using rule 226 (epsilon -> .)

    ExpressionRep                  shift and go to state 190
    epsilon                        shift and go to state 191

state 273

    (186) SwitchStmt -> ExprSwitchStmt .

    SEMICOLON       reduce using rule 186 (SwitchStmt -> ExprSwitchStmt .)


state 274

    (194) ForStmt -> FOR . CreateScope ConditionBlockOpt Block EndScope
    (77) CreateScope -> .

    NOT             reduce using rule 77 (CreateScope -> .)
    IDENTIFIER      reduce using rule 77 (CreateScope -> .)
    PLUS            reduce using rule 77 (CreateScope -> .)
    MINUS           reduce using rule 77 (CreateScope -> .)
    STAR            reduce using rule 77 (CreateScope -> .)
    AND             reduce using rule 77 (CreateScope -> .)
    LPAREN          reduce using rule 77 (CreateScope -> .)
    TYPECAST        reduce using rule 77 (CreateScope -> .)
    LCURL           reduce using rule 77 (CreateScope -> .)
    SEMICOLON       reduce using rule 77 (CreateScope -> .)
    INTEGER         reduce using rule 77 (CreateScope -> .)
    OCTAL           reduce using rule 77 (CreateScope -> .)
    HEX             reduce using rule 77 (CreateScope -> .)
    FLOAT           reduce using rule 77 (CreateScope -> .)
    IMAGINARY       reduce using rule 77 (CreateScope -> .)
    RUNE            reduce using rule 77 (CreateScope -> .)
    STRING          reduce using rule 77 (CreateScope -> .)

    CreateScope                    shift and go to state 302

state 275

    (156) PrintStmt -> PRINT . PD Expression
    (157) PrintStmt -> PRINT . PS Expression

    PD              shift and go to state 303
    PS              shift and go to state 304


state 276

    (158) ScanStmt -> SCAN . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 305
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 277

    (165) Label -> IDENTIFIER .
    (73) ShortVarDecl -> IDENTIFIER . QUICK_ASSIGN Expression
    (99) OperandName -> IDENTIFIER .

    COLON           reduce using rule 165 (Label -> IDENTIFIER .)
    QUICK_ASSIGN    shift and go to state 306
    LSQUARE         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    DOT             reduce using rule 99 (OperandName -> IDENTIFIER .)
    INCR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    DECR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 99 (OperandName -> IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESSER          reduce using rule 99 (OperandName -> IDENTIFIER .)
    GREATER         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MORE_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 99 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 99 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    ASSIGN          reduce using rule 99 (OperandName -> IDENTIFIER .)


state 278

    (169) Assignment -> ExpressionList . assign_op ExpressionList
    (170) assign_op -> . AssignOp
    (171) AssignOp -> . PLUS_ASSIGN
    (172) AssignOp -> . MINUS_ASSIGN
    (173) AssignOp -> . STAR_ASSIGN
    (174) AssignOp -> . DIVIDE_ASSIGN
    (175) AssignOp -> . MOD_ASSIGN
    (176) AssignOp -> . AND_ASSIGN
    (177) AssignOp -> . OR_ASSIGN
    (178) AssignOp -> . XOR_ASSIGN
    (179) AssignOp -> . LSHIFT_ASSIGN
    (180) AssignOp -> . RSHIFT_ASSIGN
    (181) AssignOp -> . ASSIGN

    PLUS_ASSIGN     shift and go to state 309
    MINUS_ASSIGN    shift and go to state 310
    STAR_ASSIGN     shift and go to state 311
    DIVIDE_ASSIGN   shift and go to state 312
    MOD_ASSIGN      shift and go to state 313
    AND_ASSIGN      shift and go to state 314
    OR_ASSIGN       shift and go to state 315
    XOR_ASSIGN      shift and go to state 316
    LSHIFT_ASSIGN   shift and go to state 317
    RSHIFT_ASSIGN   shift and go to state 318
    ASSIGN          shift and go to state 319

    assign_op                      shift and go to state 307
    AssignOp                       shift and go to state 308

state 279

    (187) ExprSwitchStmt -> SWITCH . Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 320
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 280

    (109) Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt . RSQUARE

    RSQUARE         shift and go to state 321


state 281

    (110) Slice -> LSQUARE ExpressionOpt COLON Expression . COLON Expression RSQUARE
    (133) ExpressionOpt -> Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    COLON           shift and go to state 322
    RSQUARE         reduce using rule 133 (ExpressionOpt -> Expression .)
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 282

    (111) TypeAssertion -> DOT LPAREN Type RPAREN .

    LSQUARE         reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LPAREN          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DOT             reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LOGICAL_OR      reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LOGICAL_AND     reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    EQUALS          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    NOT_ASSIGN      reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LESSER          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    GREATER         reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LESS_EQUALS     reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MORE_EQUALS     reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OR              reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    XOR             reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDE          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MOD             reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSHIFT          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSHIFT          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUS            reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUS           reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    STAR            reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AND             reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSQUARE         reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COMMA           reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    SEMICOLON       reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RPAREN          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    COLON           reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LCURL           reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    PLUS_ASSIGN     reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MINUS_ASSIGN    reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    STAR_ASSIGN     reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    MOD_ASSIGN      reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    AND_ASSIGN      reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    OR_ASSIGN       reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    XOR_ASSIGN      reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    ASSIGN          reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    INCR            reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)
    DECR            reduce using rule 111 (TypeAssertion -> DOT LPAREN Type RPAREN .)


state 283

    (142) Conversion -> TYPECAST Type LPAREN Expression RPAREN .

    LSQUARE         reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LPAREN          reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DOT             reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LOGICAL_OR      reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LOGICAL_AND     reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    EQUALS          reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    NOT_ASSIGN      reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LESSER          reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    GREATER         reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LESS_EQUALS     reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MORE_EQUALS     reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    OR              reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    XOR             reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DIVIDE          reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MOD             reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSHIFT          reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSHIFT          reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    PLUS            reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MINUS           reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    STAR            reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    AND             reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSQUARE         reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COMMA           reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    SEMICOLON       reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RPAREN          reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    COLON           reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LCURL           reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    PLUS_ASSIGN     reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MINUS_ASSIGN    reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    STAR_ASSIGN     reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DIVIDE_ASSIGN   reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    MOD_ASSIGN      reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    AND_ASSIGN      reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    OR_ASSIGN       reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    XOR_ASSIGN      reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    LSHIFT_ASSIGN   reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    RSHIFT_ASSIGN   reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    ASSIGN          reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    INCR            reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)
    DECR            reduce using rule 142 (Conversion -> TYPECAST Type LPAREN Expression RPAREN .)


state 284

    (23) StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .

    ASSIGN          reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    SEMICOLON       reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    RPAREN          reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    LCURL           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    COMMA           reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)
    LPAREN          reduce using rule 23 (StructType -> CreateFuncScope STRUCT LCURL FieldDeclRep RCURL EndScope .)


state 285

    (24) FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .

    RCURL           reduce using rule 24 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)
    IDENTIFIER      reduce using rule 24 (FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON .)


state 286

    (26) FieldDecl -> IdentifierList Type .

    SEMICOLON       reduce using rule 26 (FieldDecl -> IdentifierList Type .)


state 287

    (41) StatementRep -> StatementRep Statement SEMICOLON .

    RETURN          reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    BREAK           reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONTINUE        reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    GOTO            reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    IF              reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    FOR             reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    PRINT           reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    SCAN            reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    CONST           reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    TYPE            reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    VAR             reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    IDENTIFIER      reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    SWITCH          reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    NOT             reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    PLUS            reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    MINUS           reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    STAR            reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    AND             reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    LPAREN          reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    TYPECAST        reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    SEMICOLON       reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    LCURL           reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    INTEGER         reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    OCTAL           reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    HEX             reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    FLOAT           reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    IMAGINARY       reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    RUNE            reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    STRING          reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    RCURL           reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    CASE            reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)
    DEFAULT         reduce using rule 41 (StatementRep -> StatementRep Statement SEMICOLON .)


state 288

    (150) Statement -> CreateScope Block . EndScope
    (78) EndScope -> .

    SEMICOLON       reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 323

state 289

    (164) LabeledStmt -> Label COLON . Statement
    (143) Statement -> . Declaration
    (144) Statement -> . LabeledStmt
    (145) Statement -> . SimpleStmt
    (146) Statement -> . ReturnStmt
    (147) Statement -> . BreakStmt
    (148) Statement -> . ContinueStmt
    (149) Statement -> . GotoStmt
    (150) Statement -> . CreateScope Block EndScope
    (151) Statement -> . IfStmt
    (152) Statement -> . SwitchStmt
    (153) Statement -> . ForStmt
    (154) Statement -> . PrintStmt
    (155) Statement -> . ScanStmt
    (43) Declaration -> . ConstDecl
    (44) Declaration -> . TypeDecl
    (45) Declaration -> . VarDecl
    (164) LabeledStmt -> . Label COLON Statement
    (159) SimpleStmt -> . epsilon
    (160) SimpleStmt -> . ExpressionStmt
    (161) SimpleStmt -> . IncDecStmt
    (162) SimpleStmt -> . Assignment
    (163) SimpleStmt -> . ShortVarDecl
    (202) ReturnStmt -> . RETURN ExpressionPureOpt
    (205) BreakStmt -> . BREAK LabelOpt
    (206) ContinueStmt -> . CONTINUE LabelOpt
    (209) GotoStmt -> . GOTO Label
    (77) CreateScope -> .
    (182) IfStmt -> . IF Expression CreateScope Block EndScope ElseOpt
    (186) SwitchStmt -> . ExprSwitchStmt
    (194) ForStmt -> . FOR CreateScope ConditionBlockOpt Block EndScope
    (156) PrintStmt -> . PRINT PD Expression
    (157) PrintStmt -> . PRINT PS Expression
    (158) ScanStmt -> . SCAN Expression
    (48) ConstDecl -> . CONST ConstSpec
    (49) ConstDecl -> . CONST LPAREN ConstSpecRep RPAREN
    (59) TypeDecl -> . TYPE TypeSpec
    (60) TypeDecl -> . TYPE LPAREN TypeSpecRep RPAREN
    (65) VarDecl -> . VAR VarSpec
    (66) VarDecl -> . VAR LPAREN VarSpecRep RPAREN
    (165) Label -> . IDENTIFIER
    (226) epsilon -> .
    (166) ExpressionStmt -> . Expression
    (167) IncDecStmt -> . Expression INCR
    (168) IncDecStmt -> . Expression DECR
    (169) Assignment -> . ExpressionList assign_op ExpressionList
    (73) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (187) ExprSwitchStmt -> . SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (56) ExpressionList -> . Expression ExpressionRep
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    RETURN          shift and go to state 267
    BREAK           shift and go to state 268
    CONTINUE        shift and go to state 269
    GOTO            shift and go to state 270
    LCURL           reduce using rule 77 (CreateScope -> .)
    IF              shift and go to state 271
    FOR             shift and go to state 274
    PRINT           shift and go to state 275
    SCAN            shift and go to state 276
    CONST           shift and go to state 21
    TYPE            shift and go to state 22
    VAR             shift and go to state 23
    IDENTIFIER      shift and go to state 277
    SEMICOLON       reduce using rule 226 (epsilon -> .)
    SWITCH          shift and go to state 279
    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Label                          shift and go to state 261
    Statement                      shift and go to state 324
    Declaration                    shift and go to state 248
    LabeledStmt                    shift and go to state 249
    SimpleStmt                     shift and go to state 250
    ReturnStmt                     shift and go to state 251
    BreakStmt                      shift and go to state 252
    ContinueStmt                   shift and go to state 253
    GotoStmt                       shift and go to state 254
    CreateScope                    shift and go to state 255
    IfStmt                         shift and go to state 256
    SwitchStmt                     shift and go to state 257
    ForStmt                        shift and go to state 258
    PrintStmt                      shift and go to state 259
    ScanStmt                       shift and go to state 260
    ConstDecl                      shift and go to state 17
    TypeDecl                       shift and go to state 18
    VarDecl                        shift and go to state 19
    epsilon                        shift and go to state 262
    ExpressionStmt                 shift and go to state 263
    IncDecStmt                     shift and go to state 264
    Assignment                     shift and go to state 265
    ShortVarDecl                   shift and go to state 266
    Expression                     shift and go to state 272
    ExprSwitchStmt                 shift and go to state 273
    ExpressionList                 shift and go to state 278
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 290

    (202) ReturnStmt -> RETURN ExpressionPureOpt .

    SEMICOLON       reduce using rule 202 (ReturnStmt -> RETURN ExpressionPureOpt .)


state 291

    (203) ExpressionPureOpt -> Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 203 (ExpressionPureOpt -> Expression .)
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 292

    (204) ExpressionPureOpt -> epsilon .

    SEMICOLON       reduce using rule 204 (ExpressionPureOpt -> epsilon .)


state 293

    (205) BreakStmt -> BREAK LabelOpt .

    SEMICOLON       reduce using rule 205 (BreakStmt -> BREAK LabelOpt .)


state 294

    (207) LabelOpt -> Label .

    SEMICOLON       reduce using rule 207 (LabelOpt -> Label .)


state 295

    (208) LabelOpt -> epsilon .

    SEMICOLON       reduce using rule 208 (LabelOpt -> epsilon .)


state 296

    (165) Label -> IDENTIFIER .

    SEMICOLON       reduce using rule 165 (Label -> IDENTIFIER .)


state 297

    (206) ContinueStmt -> CONTINUE LabelOpt .

    SEMICOLON       reduce using rule 206 (ContinueStmt -> CONTINUE LabelOpt .)


state 298

    (209) GotoStmt -> GOTO Label .

    SEMICOLON       reduce using rule 209 (GotoStmt -> GOTO Label .)


state 299

    (182) IfStmt -> IF Expression . CreateScope Block EndScope ElseOpt
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression
    (77) CreateScope -> .

    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167
    LCURL           reduce using rule 77 (CreateScope -> .)

    CreateScope                    shift and go to state 325

state 300

    (167) IncDecStmt -> Expression INCR .

    SEMICOLON       reduce using rule 167 (IncDecStmt -> Expression INCR .)
    LCURL           reduce using rule 167 (IncDecStmt -> Expression INCR .)


state 301

    (168) IncDecStmt -> Expression DECR .

    SEMICOLON       reduce using rule 168 (IncDecStmt -> Expression DECR .)
    LCURL           reduce using rule 168 (IncDecStmt -> Expression DECR .)


state 302

    (194) ForStmt -> FOR CreateScope . ConditionBlockOpt Block EndScope
    (195) ConditionBlockOpt -> . epsilon
    (196) ConditionBlockOpt -> . Condition
    (197) ConditionBlockOpt -> . ForClause
    (226) epsilon -> .
    (198) Condition -> . Expression
    (199) ForClause -> . SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (159) SimpleStmt -> . epsilon
    (160) SimpleStmt -> . ExpressionStmt
    (161) SimpleStmt -> . IncDecStmt
    (162) SimpleStmt -> . Assignment
    (163) SimpleStmt -> . ShortVarDecl
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (166) ExpressionStmt -> . Expression
    (167) IncDecStmt -> . Expression INCR
    (168) IncDecStmt -> . Expression DECR
    (169) Assignment -> . ExpressionList assign_op ExpressionList
    (73) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (56) ExpressionList -> . Expression ExpressionRep
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    LCURL           reduce using rule 226 (epsilon -> .)
    SEMICOLON       reduce using rule 226 (epsilon -> .)
    NOT             shift and go to state 103
    IDENTIFIER      shift and go to state 332
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    ConditionBlockOpt              shift and go to state 326
    epsilon                        shift and go to state 327
    Condition                      shift and go to state 328
    ForClause                      shift and go to state 329
    Expression                     shift and go to state 330
    SimpleStmt                     shift and go to state 331
    UnaryExpr                      shift and go to state 96
    ExpressionStmt                 shift and go to state 263
    IncDecStmt                     shift and go to state 264
    Assignment                     shift and go to state 265
    ShortVarDecl                   shift and go to state 266
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    ExpressionList                 shift and go to state 278
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 303

    (156) PrintStmt -> PRINT PD . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 333
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 304

    (157) PrintStmt -> PRINT PS . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 334
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 305

    (158) ScanStmt -> SCAN Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 158 (ScanStmt -> SCAN Expression .)
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 306

    (73) ShortVarDecl -> IDENTIFIER QUICK_ASSIGN . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 335
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 307

    (169) Assignment -> ExpressionList assign_op . ExpressionList
    (56) ExpressionList -> . Expression ExpressionRep
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    ExpressionList                 shift and go to state 336
    Expression                     shift and go to state 129
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 308

    (170) assign_op -> AssignOp .

    NOT             reduce using rule 170 (assign_op -> AssignOp .)
    PLUS            reduce using rule 170 (assign_op -> AssignOp .)
    MINUS           reduce using rule 170 (assign_op -> AssignOp .)
    STAR            reduce using rule 170 (assign_op -> AssignOp .)
    AND             reduce using rule 170 (assign_op -> AssignOp .)
    LPAREN          reduce using rule 170 (assign_op -> AssignOp .)
    TYPECAST        reduce using rule 170 (assign_op -> AssignOp .)
    IDENTIFIER      reduce using rule 170 (assign_op -> AssignOp .)
    INTEGER         reduce using rule 170 (assign_op -> AssignOp .)
    OCTAL           reduce using rule 170 (assign_op -> AssignOp .)
    HEX             reduce using rule 170 (assign_op -> AssignOp .)
    FLOAT           reduce using rule 170 (assign_op -> AssignOp .)
    IMAGINARY       reduce using rule 170 (assign_op -> AssignOp .)
    RUNE            reduce using rule 170 (assign_op -> AssignOp .)
    STRING          reduce using rule 170 (assign_op -> AssignOp .)


state 309

    (171) AssignOp -> PLUS_ASSIGN .

    NOT             reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    PLUS            reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    MINUS           reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    STAR            reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    AND             reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    LPAREN          reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    TYPECAST        reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    IDENTIFIER      reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    INTEGER         reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    OCTAL           reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    HEX             reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    FLOAT           reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    IMAGINARY       reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    RUNE            reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)
    STRING          reduce using rule 171 (AssignOp -> PLUS_ASSIGN .)


state 310

    (172) AssignOp -> MINUS_ASSIGN .

    NOT             reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    PLUS            reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    MINUS           reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    STAR            reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    AND             reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    LPAREN          reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    TYPECAST        reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    IDENTIFIER      reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    INTEGER         reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    OCTAL           reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    HEX             reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    FLOAT           reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    IMAGINARY       reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    RUNE            reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)
    STRING          reduce using rule 172 (AssignOp -> MINUS_ASSIGN .)


state 311

    (173) AssignOp -> STAR_ASSIGN .

    NOT             reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    PLUS            reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    MINUS           reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    STAR            reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    AND             reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    LPAREN          reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    TYPECAST        reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    IDENTIFIER      reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    INTEGER         reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    OCTAL           reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    HEX             reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    FLOAT           reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    IMAGINARY       reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    RUNE            reduce using rule 173 (AssignOp -> STAR_ASSIGN .)
    STRING          reduce using rule 173 (AssignOp -> STAR_ASSIGN .)


state 312

    (174) AssignOp -> DIVIDE_ASSIGN .

    NOT             reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    PLUS            reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    MINUS           reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    STAR            reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    AND             reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    LPAREN          reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    TYPECAST        reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    IDENTIFIER      reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    INTEGER         reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    OCTAL           reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    HEX             reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    FLOAT           reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    IMAGINARY       reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    RUNE            reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)
    STRING          reduce using rule 174 (AssignOp -> DIVIDE_ASSIGN .)


state 313

    (175) AssignOp -> MOD_ASSIGN .

    NOT             reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    PLUS            reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    MINUS           reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    STAR            reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    AND             reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    LPAREN          reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    TYPECAST        reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    IDENTIFIER      reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    INTEGER         reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    OCTAL           reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    HEX             reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    FLOAT           reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    IMAGINARY       reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    RUNE            reduce using rule 175 (AssignOp -> MOD_ASSIGN .)
    STRING          reduce using rule 175 (AssignOp -> MOD_ASSIGN .)


state 314

    (176) AssignOp -> AND_ASSIGN .

    NOT             reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    PLUS            reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    MINUS           reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    STAR            reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    AND             reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    LPAREN          reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    TYPECAST        reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    IDENTIFIER      reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    INTEGER         reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    OCTAL           reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    HEX             reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    FLOAT           reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    IMAGINARY       reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    RUNE            reduce using rule 176 (AssignOp -> AND_ASSIGN .)
    STRING          reduce using rule 176 (AssignOp -> AND_ASSIGN .)


state 315

    (177) AssignOp -> OR_ASSIGN .

    NOT             reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    PLUS            reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    MINUS           reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    STAR            reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    AND             reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    LPAREN          reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    TYPECAST        reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    IDENTIFIER      reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    INTEGER         reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    OCTAL           reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    HEX             reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    FLOAT           reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    IMAGINARY       reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    RUNE            reduce using rule 177 (AssignOp -> OR_ASSIGN .)
    STRING          reduce using rule 177 (AssignOp -> OR_ASSIGN .)


state 316

    (178) AssignOp -> XOR_ASSIGN .

    NOT             reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    PLUS            reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    MINUS           reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    STAR            reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    AND             reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    LPAREN          reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    TYPECAST        reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    IDENTIFIER      reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    INTEGER         reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    OCTAL           reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    HEX             reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    FLOAT           reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    IMAGINARY       reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    RUNE            reduce using rule 178 (AssignOp -> XOR_ASSIGN .)
    STRING          reduce using rule 178 (AssignOp -> XOR_ASSIGN .)


state 317

    (179) AssignOp -> LSHIFT_ASSIGN .

    NOT             reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    PLUS            reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    MINUS           reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    STAR            reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    AND             reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    LPAREN          reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    TYPECAST        reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    INTEGER         reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    OCTAL           reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    HEX             reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    FLOAT           reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    IMAGINARY       reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    RUNE            reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)
    STRING          reduce using rule 179 (AssignOp -> LSHIFT_ASSIGN .)


state 318

    (180) AssignOp -> RSHIFT_ASSIGN .

    NOT             reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    PLUS            reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    MINUS           reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    STAR            reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    AND             reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    LPAREN          reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    TYPECAST        reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    IDENTIFIER      reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    INTEGER         reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    OCTAL           reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    HEX             reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    FLOAT           reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    IMAGINARY       reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    RUNE            reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)
    STRING          reduce using rule 180 (AssignOp -> RSHIFT_ASSIGN .)


state 319

    (181) AssignOp -> ASSIGN .

    NOT             reduce using rule 181 (AssignOp -> ASSIGN .)
    PLUS            reduce using rule 181 (AssignOp -> ASSIGN .)
    MINUS           reduce using rule 181 (AssignOp -> ASSIGN .)
    STAR            reduce using rule 181 (AssignOp -> ASSIGN .)
    AND             reduce using rule 181 (AssignOp -> ASSIGN .)
    LPAREN          reduce using rule 181 (AssignOp -> ASSIGN .)
    TYPECAST        reduce using rule 181 (AssignOp -> ASSIGN .)
    IDENTIFIER      reduce using rule 181 (AssignOp -> ASSIGN .)
    INTEGER         reduce using rule 181 (AssignOp -> ASSIGN .)
    OCTAL           reduce using rule 181 (AssignOp -> ASSIGN .)
    HEX             reduce using rule 181 (AssignOp -> ASSIGN .)
    FLOAT           reduce using rule 181 (AssignOp -> ASSIGN .)
    IMAGINARY       reduce using rule 181 (AssignOp -> ASSIGN .)
    RUNE            reduce using rule 181 (AssignOp -> ASSIGN .)
    STRING          reduce using rule 181 (AssignOp -> ASSIGN .)


state 320

    (187) ExprSwitchStmt -> SWITCH Expression . CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression
    (77) CreateScope -> .

    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167
    LCURL           reduce using rule 77 (CreateScope -> .)

    CreateScope                    shift and go to state 337

state 321

    (109) Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .

    LSQUARE         reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LPAREN          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DOT             reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LOGICAL_OR      reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LOGICAL_AND     reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    EQUALS          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    NOT_ASSIGN      reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LESSER          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    GREATER         reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LESS_EQUALS     reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MORE_EQUALS     reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    OR              reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    XOR             reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DIVIDE          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MOD             reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSHIFT          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSHIFT          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    PLUS            reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MINUS           reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    STAR            reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    AND             reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSQUARE         reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COMMA           reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    SEMICOLON       reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RPAREN          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    COLON           reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LCURL           reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    PLUS_ASSIGN     reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MINUS_ASSIGN    reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    STAR_ASSIGN     reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DIVIDE_ASSIGN   reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    MOD_ASSIGN      reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    AND_ASSIGN      reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    OR_ASSIGN       reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    XOR_ASSIGN      reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    LSHIFT_ASSIGN   reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    RSHIFT_ASSIGN   reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    ASSIGN          reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    INCR            reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)
    DECR            reduce using rule 109 (Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE .)


state 322

    (110) Slice -> LSQUARE ExpressionOpt COLON Expression COLON . Expression RSQUARE
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 338
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 323

    (150) Statement -> CreateScope Block EndScope .

    SEMICOLON       reduce using rule 150 (Statement -> CreateScope Block EndScope .)


state 324

    (164) LabeledStmt -> Label COLON Statement .

    SEMICOLON       reduce using rule 164 (LabeledStmt -> Label COLON Statement .)


state 325

    (182) IfStmt -> IF Expression CreateScope . Block EndScope ElseOpt
    (39) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 194

    Block                          shift and go to state 339

state 326

    (194) ForStmt -> FOR CreateScope ConditionBlockOpt . Block EndScope
    (39) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 194

    Block                          shift and go to state 340

state 327

    (195) ConditionBlockOpt -> epsilon .
    (159) SimpleStmt -> epsilon .

    LCURL           reduce using rule 195 (ConditionBlockOpt -> epsilon .)
    SEMICOLON       reduce using rule 159 (SimpleStmt -> epsilon .)


state 328

    (196) ConditionBlockOpt -> Condition .

    LCURL           reduce using rule 196 (ConditionBlockOpt -> Condition .)


state 329

    (197) ConditionBlockOpt -> ForClause .

    LCURL           reduce using rule 197 (ConditionBlockOpt -> ForClause .)


state 330

    (198) Condition -> Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression
    (166) ExpressionStmt -> Expression .
    (167) IncDecStmt -> Expression . INCR
    (168) IncDecStmt -> Expression . DECR
    (56) ExpressionList -> Expression . ExpressionRep
    (57) ExpressionRep -> . ExpressionRep COMMA Expression
    (58) ExpressionRep -> . epsilon
    (226) epsilon -> .

    LCURL           reduce using rule 198 (Condition -> Expression .)
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167
    SEMICOLON       reduce using rule 166 (ExpressionStmt -> Expression .)
    INCR            shift and go to state 300
    DECR            shift and go to state 301
    COMMA           reduce using rule 226 (epsilon -> .)
    PLUS_ASSIGN     reduce using rule 226 (epsilon -> .)
    MINUS_ASSIGN    reduce using rule 226 (epsilon -> .)
    STAR_ASSIGN     reduce using rule 226 (epsilon -> .)
    DIVIDE_ASSIGN   reduce using rule 226 (epsilon -> .)
    MOD_ASSIGN      reduce using rule 226 (epsilon -> .)
    AND_ASSIGN      reduce using rule 226 (epsilon -> .)
    OR_ASSIGN       reduce using rule 226 (epsilon -> .)
    XOR_ASSIGN      reduce using rule 226 (epsilon -> .)
    LSHIFT_ASSIGN   reduce using rule 226 (epsilon -> .)
    RSHIFT_ASSIGN   reduce using rule 226 (epsilon -> .)
    ASSIGN          reduce using rule 226 (epsilon -> .)

    ExpressionRep                  shift and go to state 190
    epsilon                        shift and go to state 191

state 331

    (199) ForClause -> SimpleStmt . SEMICOLON ConditionOpt SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 341


state 332

    (73) ShortVarDecl -> IDENTIFIER . QUICK_ASSIGN Expression
    (99) OperandName -> IDENTIFIER .

    QUICK_ASSIGN    shift and go to state 306
    LSQUARE         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LPAREN          reduce using rule 99 (OperandName -> IDENTIFIER .)
    DOT             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_OR      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LOGICAL_AND     reduce using rule 99 (OperandName -> IDENTIFIER .)
    EQUALS          reduce using rule 99 (OperandName -> IDENTIFIER .)
    NOT_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESSER          reduce using rule 99 (OperandName -> IDENTIFIER .)
    GREATER         reduce using rule 99 (OperandName -> IDENTIFIER .)
    LESS_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MORE_EQUALS     reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR              reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR             reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE          reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD             reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT          reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS            reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS           reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND             reduce using rule 99 (OperandName -> IDENTIFIER .)
    INCR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    DECR            reduce using rule 99 (OperandName -> IDENTIFIER .)
    COMMA           reduce using rule 99 (OperandName -> IDENTIFIER .)
    LCURL           reduce using rule 99 (OperandName -> IDENTIFIER .)
    SEMICOLON       reduce using rule 99 (OperandName -> IDENTIFIER .)
    PLUS_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    MINUS_ASSIGN    reduce using rule 99 (OperandName -> IDENTIFIER .)
    STAR_ASSIGN     reduce using rule 99 (OperandName -> IDENTIFIER .)
    DIVIDE_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    MOD_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    AND_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    OR_ASSIGN       reduce using rule 99 (OperandName -> IDENTIFIER .)
    XOR_ASSIGN      reduce using rule 99 (OperandName -> IDENTIFIER .)
    LSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    RSHIFT_ASSIGN   reduce using rule 99 (OperandName -> IDENTIFIER .)
    ASSIGN          reduce using rule 99 (OperandName -> IDENTIFIER .)


state 333

    (156) PrintStmt -> PRINT PD Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 156 (PrintStmt -> PRINT PD Expression .)
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 334

    (157) PrintStmt -> PRINT PS Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 157 (PrintStmt -> PRINT PS Expression .)
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 335

    (73) ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    LCURL           reduce using rule 73 (ShortVarDecl -> IDENTIFIER QUICK_ASSIGN Expression .)
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 336

    (169) Assignment -> ExpressionList assign_op ExpressionList .

    SEMICOLON       reduce using rule 169 (Assignment -> ExpressionList assign_op ExpressionList .)
    LCURL           reduce using rule 169 (Assignment -> ExpressionList assign_op ExpressionList .)


state 337

    (187) ExprSwitchStmt -> SWITCH Expression CreateScope . LCURL StartSwitch ExprCaseClauseRep RCURL EndScope

    LCURL           shift and go to state 342


state 338

    (110) Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression . RSQUARE
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    RSQUARE         shift and go to state 343
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 339

    (182) IfStmt -> IF Expression CreateScope Block . EndScope ElseOpt
    (78) EndScope -> .

    ELSE            reduce using rule 78 (EndScope -> .)
    SEMICOLON       reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 344

state 340

    (194) ForStmt -> FOR CreateScope ConditionBlockOpt Block . EndScope
    (78) EndScope -> .

    SEMICOLON       reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 345

state 341

    (199) ForClause -> SimpleStmt SEMICOLON . ConditionOpt SEMICOLON SimpleStmt
    (200) ConditionOpt -> . epsilon
    (201) ConditionOpt -> . Condition
    (226) epsilon -> .
    (198) Condition -> . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    SEMICOLON       reduce using rule 226 (epsilon -> .)
    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    ConditionOpt                   shift and go to state 346
    epsilon                        shift and go to state 347
    Condition                      shift and go to state 348
    Expression                     shift and go to state 349
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 342

    (187) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL . StartSwitch ExprCaseClauseRep RCURL EndScope
    (188) StartSwitch -> .

    RCURL           reduce using rule 188 (StartSwitch -> .)
    CASE            reduce using rule 188 (StartSwitch -> .)
    DEFAULT         reduce using rule 188 (StartSwitch -> .)

    StartSwitch                    shift and go to state 350

state 343

    (110) Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .

    LSQUARE         reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LPAREN          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DOT             reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LOGICAL_OR      reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LOGICAL_AND     reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    EQUALS          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    NOT_ASSIGN      reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LESSER          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    GREATER         reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LESS_EQUALS     reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MORE_EQUALS     reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    OR              reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    XOR             reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DIVIDE          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MOD             reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSHIFT          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSHIFT          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    PLUS            reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MINUS           reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    STAR            reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    AND             reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSQUARE         reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COMMA           reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    SEMICOLON       reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RPAREN          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    COLON           reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LCURL           reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    PLUS_ASSIGN     reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MINUS_ASSIGN    reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    STAR_ASSIGN     reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DIVIDE_ASSIGN   reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    MOD_ASSIGN      reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    AND_ASSIGN      reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    OR_ASSIGN       reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    XOR_ASSIGN      reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    LSHIFT_ASSIGN   reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    RSHIFT_ASSIGN   reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    ASSIGN          reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    INCR            reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)
    DECR            reduce using rule 110 (Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE .)


state 344

    (182) IfStmt -> IF Expression CreateScope Block EndScope . ElseOpt
    (183) ElseOpt -> . ELSE IfStmt
    (184) ElseOpt -> . ELSE CreateScope Block EndScope
    (185) ElseOpt -> . epsilon
    (226) epsilon -> .

    ELSE            shift and go to state 352
    SEMICOLON       reduce using rule 226 (epsilon -> .)

    ElseOpt                        shift and go to state 351
    epsilon                        shift and go to state 353

state 345

    (194) ForStmt -> FOR CreateScope ConditionBlockOpt Block EndScope .

    SEMICOLON       reduce using rule 194 (ForStmt -> FOR CreateScope ConditionBlockOpt Block EndScope .)


state 346

    (199) ForClause -> SimpleStmt SEMICOLON ConditionOpt . SEMICOLON SimpleStmt

    SEMICOLON       shift and go to state 354


state 347

    (200) ConditionOpt -> epsilon .

    SEMICOLON       reduce using rule 200 (ConditionOpt -> epsilon .)


state 348

    (201) ConditionOpt -> Condition .

    SEMICOLON       reduce using rule 201 (ConditionOpt -> Condition .)


state 349

    (198) Condition -> Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    SEMICOLON       reduce using rule 198 (Condition -> Expression .)
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 350

    (187) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch . ExprCaseClauseRep RCURL EndScope
    (189) ExprCaseClauseRep -> . ExprCaseClauseRep ExprCaseClause
    (190) ExprCaseClauseRep -> . epsilon
    (226) epsilon -> .

    RCURL           reduce using rule 226 (epsilon -> .)
    CASE            reduce using rule 226 (epsilon -> .)
    DEFAULT         reduce using rule 226 (epsilon -> .)

    ExprCaseClauseRep              shift and go to state 355
    epsilon                        shift and go to state 356

state 351

    (182) IfStmt -> IF Expression CreateScope Block EndScope ElseOpt .

    SEMICOLON       reduce using rule 182 (IfStmt -> IF Expression CreateScope Block EndScope ElseOpt .)


state 352

    (183) ElseOpt -> ELSE . IfStmt
    (184) ElseOpt -> ELSE . CreateScope Block EndScope
    (182) IfStmt -> . IF Expression CreateScope Block EndScope ElseOpt
    (77) CreateScope -> .

    IF              shift and go to state 271
    LCURL           reduce using rule 77 (CreateScope -> .)

    IfStmt                         shift and go to state 357
    CreateScope                    shift and go to state 358

state 353

    (185) ElseOpt -> epsilon .

    SEMICOLON       reduce using rule 185 (ElseOpt -> epsilon .)


state 354

    (199) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON . SimpleStmt
    (159) SimpleStmt -> . epsilon
    (160) SimpleStmt -> . ExpressionStmt
    (161) SimpleStmt -> . IncDecStmt
    (162) SimpleStmt -> . Assignment
    (163) SimpleStmt -> . ShortVarDecl
    (226) epsilon -> .
    (166) ExpressionStmt -> . Expression
    (167) IncDecStmt -> . Expression INCR
    (168) IncDecStmt -> . Expression DECR
    (169) Assignment -> . ExpressionList assign_op ExpressionList
    (73) ShortVarDecl -> . IDENTIFIER QUICK_ASSIGN Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (56) ExpressionList -> . Expression ExpressionRep
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    LCURL           reduce using rule 226 (epsilon -> .)
    IDENTIFIER      shift and go to state 332
    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    SimpleStmt                     shift and go to state 359
    epsilon                        shift and go to state 262
    ExpressionStmt                 shift and go to state 263
    IncDecStmt                     shift and go to state 264
    Assignment                     shift and go to state 265
    ShortVarDecl                   shift and go to state 266
    Expression                     shift and go to state 272
    ExpressionList                 shift and go to state 278
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 355

    (187) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep . RCURL EndScope
    (189) ExprCaseClauseRep -> ExprCaseClauseRep . ExprCaseClause
    (191) ExprCaseClause -> . ExprSwitchCase COLON StatementList
    (192) ExprSwitchCase -> . CASE Expression
    (193) ExprSwitchCase -> . DEFAULT

    RCURL           shift and go to state 360
    CASE            shift and go to state 363
    DEFAULT         shift and go to state 364

    ExprCaseClause                 shift and go to state 361
    ExprSwitchCase                 shift and go to state 362

state 356

    (190) ExprCaseClauseRep -> epsilon .

    RCURL           reduce using rule 190 (ExprCaseClauseRep -> epsilon .)
    CASE            reduce using rule 190 (ExprCaseClauseRep -> epsilon .)
    DEFAULT         reduce using rule 190 (ExprCaseClauseRep -> epsilon .)


state 357

    (183) ElseOpt -> ELSE IfStmt .

    SEMICOLON       reduce using rule 183 (ElseOpt -> ELSE IfStmt .)


state 358

    (184) ElseOpt -> ELSE CreateScope . Block EndScope
    (39) Block -> . LCURL StatementList RCURL

    LCURL           shift and go to state 194

    Block                          shift and go to state 365

state 359

    (199) ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .

    LCURL           reduce using rule 199 (ForClause -> SimpleStmt SEMICOLON ConditionOpt SEMICOLON SimpleStmt .)


state 360

    (187) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL . EndScope
    (78) EndScope -> .

    SEMICOLON       reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 366

state 361

    (189) ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .

    RCURL           reduce using rule 189 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    CASE            reduce using rule 189 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)
    DEFAULT         reduce using rule 189 (ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause .)


state 362

    (191) ExprCaseClause -> ExprSwitchCase . COLON StatementList

    COLON           shift and go to state 367


state 363

    (192) ExprSwitchCase -> CASE . Expression
    (114) Expression -> . UnaryExpr
    (115) Expression -> . Expression LOGICAL_OR Expression
    (116) Expression -> . Expression LOGICAL_AND Expression
    (117) Expression -> . Expression EQUALS Expression
    (118) Expression -> . Expression NOT_ASSIGN Expression
    (119) Expression -> . Expression LESSER Expression
    (120) Expression -> . Expression GREATER Expression
    (121) Expression -> . Expression LESS_EQUALS Expression
    (122) Expression -> . Expression MORE_EQUALS Expression
    (123) Expression -> . Expression OR Expression
    (124) Expression -> . Expression XOR Expression
    (125) Expression -> . Expression DIVIDE Expression
    (126) Expression -> . Expression MOD Expression
    (127) Expression -> . Expression LSHIFT Expression
    (128) Expression -> . Expression RSHIFT Expression
    (129) Expression -> . Expression PLUS Expression
    (130) Expression -> . Expression MINUS Expression
    (131) Expression -> . Expression STAR Expression
    (132) Expression -> . Expression AND Expression
    (135) UnaryExpr -> . PrimaryExpr
    (136) UnaryExpr -> . UnaryOp UnaryExpr
    (137) UnaryExpr -> . NOT UnaryExpr
    (101) PrimaryExpr -> . Operand
    (102) PrimaryExpr -> . PrimaryExpr Selector
    (103) PrimaryExpr -> . Conversion
    (104) PrimaryExpr -> . PrimaryExpr LSQUARE Expression RSQUARE
    (105) PrimaryExpr -> . PrimaryExpr Slice
    (106) PrimaryExpr -> . PrimaryExpr TypeAssertion
    (107) PrimaryExpr -> . PrimaryExpr LPAREN ExpressionListTypeOpt RPAREN
    (138) UnaryOp -> . PLUS
    (139) UnaryOp -> . MINUS
    (140) UnaryOp -> . STAR
    (141) UnaryOp -> . AND
    (83) Operand -> . Literal
    (84) Operand -> . OperandName
    (85) Operand -> . LPAREN Expression RPAREN
    (142) Conversion -> . TYPECAST Type LPAREN Expression RPAREN
    (86) Literal -> . BasicLit
    (99) OperandName -> . IDENTIFIER
    (87) BasicLit -> . I INTEGER
    (88) BasicLit -> . I OCTAL
    (89) BasicLit -> . I HEX
    (90) BasicLit -> . F FLOAT
    (91) BasicLit -> . C IMAGINARY
    (92) BasicLit -> . R RUNE
    (93) BasicLit -> . S STRING
    (94) I -> .
    (96) F -> .
    (97) C -> .
    (95) R -> .
    (98) S -> .

    NOT             shift and go to state 103
    PLUS            shift and go to state 97
    MINUS           shift and go to state 98
    STAR            shift and go to state 99
    AND             shift and go to state 100
    LPAREN          shift and go to state 106
    TYPECAST        shift and go to state 109
    IDENTIFIER      shift and go to state 111
    INTEGER         reduce using rule 94 (I -> .)
    OCTAL           reduce using rule 94 (I -> .)
    HEX             reduce using rule 94 (I -> .)
    FLOAT           reduce using rule 96 (F -> .)
    IMAGINARY       reduce using rule 97 (C -> .)
    RUNE            reduce using rule 95 (R -> .)
    STRING          reduce using rule 98 (S -> .)

    Expression                     shift and go to state 368
    UnaryExpr                      shift and go to state 96
    PrimaryExpr                    shift and go to state 101
    UnaryOp                        shift and go to state 102
    Operand                        shift and go to state 104
    Conversion                     shift and go to state 105
    Literal                        shift and go to state 107
    OperandName                    shift and go to state 108
    BasicLit                       shift and go to state 110
    I                              shift and go to state 112
    F                              shift and go to state 113
    C                              shift and go to state 114
    R                              shift and go to state 115
    S                              shift and go to state 116

state 364

    (193) ExprSwitchCase -> DEFAULT .

    COLON           reduce using rule 193 (ExprSwitchCase -> DEFAULT .)


state 365

    (184) ElseOpt -> ELSE CreateScope Block . EndScope
    (78) EndScope -> .

    SEMICOLON       reduce using rule 78 (EndScope -> .)

    EndScope                       shift and go to state 369

state 366

    (187) ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .

    SEMICOLON       reduce using rule 187 (ExprSwitchStmt -> SWITCH Expression CreateScope LCURL StartSwitch ExprCaseClauseRep RCURL EndScope .)


state 367

    (191) ExprCaseClause -> ExprSwitchCase COLON . StatementList
    (40) StatementList -> . StatementRep
    (41) StatementRep -> . StatementRep Statement SEMICOLON
    (42) StatementRep -> . epsilon
    (226) epsilon -> .

    RETURN          reduce using rule 226 (epsilon -> .)
    BREAK           reduce using rule 226 (epsilon -> .)
    CONTINUE        reduce using rule 226 (epsilon -> .)
    GOTO            reduce using rule 226 (epsilon -> .)
    IF              reduce using rule 226 (epsilon -> .)
    FOR             reduce using rule 226 (epsilon -> .)
    PRINT           reduce using rule 226 (epsilon -> .)
    SCAN            reduce using rule 226 (epsilon -> .)
    CONST           reduce using rule 226 (epsilon -> .)
    TYPE            reduce using rule 226 (epsilon -> .)
    VAR             reduce using rule 226 (epsilon -> .)
    IDENTIFIER      reduce using rule 226 (epsilon -> .)
    SWITCH          reduce using rule 226 (epsilon -> .)
    NOT             reduce using rule 226 (epsilon -> .)
    PLUS            reduce using rule 226 (epsilon -> .)
    MINUS           reduce using rule 226 (epsilon -> .)
    STAR            reduce using rule 226 (epsilon -> .)
    AND             reduce using rule 226 (epsilon -> .)
    LPAREN          reduce using rule 226 (epsilon -> .)
    TYPECAST        reduce using rule 226 (epsilon -> .)
    SEMICOLON       reduce using rule 226 (epsilon -> .)
    LCURL           reduce using rule 226 (epsilon -> .)
    INTEGER         reduce using rule 226 (epsilon -> .)
    OCTAL           reduce using rule 226 (epsilon -> .)
    HEX             reduce using rule 226 (epsilon -> .)
    FLOAT           reduce using rule 226 (epsilon -> .)
    IMAGINARY       reduce using rule 226 (epsilon -> .)
    RUNE            reduce using rule 226 (epsilon -> .)
    STRING          reduce using rule 226 (epsilon -> .)
    RCURL           reduce using rule 226 (epsilon -> .)
    CASE            reduce using rule 226 (epsilon -> .)
    DEFAULT         reduce using rule 226 (epsilon -> .)

    StatementList                  shift and go to state 370
    StatementRep                   shift and go to state 233
    epsilon                        shift and go to state 234

state 368

    (192) ExprSwitchCase -> CASE Expression .
    (115) Expression -> Expression . LOGICAL_OR Expression
    (116) Expression -> Expression . LOGICAL_AND Expression
    (117) Expression -> Expression . EQUALS Expression
    (118) Expression -> Expression . NOT_ASSIGN Expression
    (119) Expression -> Expression . LESSER Expression
    (120) Expression -> Expression . GREATER Expression
    (121) Expression -> Expression . LESS_EQUALS Expression
    (122) Expression -> Expression . MORE_EQUALS Expression
    (123) Expression -> Expression . OR Expression
    (124) Expression -> Expression . XOR Expression
    (125) Expression -> Expression . DIVIDE Expression
    (126) Expression -> Expression . MOD Expression
    (127) Expression -> Expression . LSHIFT Expression
    (128) Expression -> Expression . RSHIFT Expression
    (129) Expression -> Expression . PLUS Expression
    (130) Expression -> Expression . MINUS Expression
    (131) Expression -> Expression . STAR Expression
    (132) Expression -> Expression . AND Expression

    COLON           reduce using rule 192 (ExprSwitchCase -> CASE Expression .)
    LOGICAL_OR      shift and go to state 150
    LOGICAL_AND     shift and go to state 151
    EQUALS          shift and go to state 152
    NOT_ASSIGN      shift and go to state 153
    LESSER          shift and go to state 154
    GREATER         shift and go to state 155
    LESS_EQUALS     shift and go to state 156
    MORE_EQUALS     shift and go to state 157
    OR              shift and go to state 158
    XOR             shift and go to state 159
    DIVIDE          shift and go to state 160
    MOD             shift and go to state 161
    LSHIFT          shift and go to state 162
    RSHIFT          shift and go to state 163
    PLUS            shift and go to state 164
    MINUS           shift and go to state 165
    STAR            shift and go to state 166
    AND             shift and go to state 167


state 369

    (184) ElseOpt -> ELSE CreateScope Block EndScope .

    SEMICOLON       reduce using rule 184 (ElseOpt -> ELSE CreateScope Block EndScope .)


state 370

    (191) ExprCaseClause -> ExprSwitchCase COLON StatementList .

    RCURL           reduce using rule 191 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    CASE            reduce using rule 191 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)
    DEFAULT         reduce using rule 191 (ExprCaseClause -> ExprSwitchCase COLON StatementList .)

